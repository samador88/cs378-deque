        -:    0:Source:/usr/include/gtest/internal/gtest-internal.h
        -:    0:Graph:TestDeque.gcno
        -:    0:Data:TestDeque.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Copyright 2005, Google Inc.
        -:    2:// All rights reserved.
        -:    3://
        -:    4:// Redistribution and use in source and binary forms, with or without
        -:    5:// modification, are permitted provided that the following conditions are
        -:    6:// met:
        -:    7://
        -:    8://     * Redistributions of source code must retain the above copyright
        -:    9:// notice, this list of conditions and the following disclaimer.
        -:   10://     * Redistributions in binary form must reproduce the above
        -:   11:// copyright notice, this list of conditions and the following disclaimer
        -:   12:// in the documentation and/or other materials provided with the
        -:   13:// distribution.
        -:   14://     * Neither the name of Google Inc. nor the names of its
        -:   15:// contributors may be used to endorse or promote products derived from
        -:   16:// this software without specific prior written permission.
        -:   17://
        -:   18:// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        -:   19:// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        -:   20:// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
        -:   21:// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
        -:   22:// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   23:// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
        -:   24:// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
        -:   25:// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
        -:   26:// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        -:   27:// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        -:   28:// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   29://
        -:   30:// Authors: wan@google.com (Zhanyong Wan), eefacm@gmail.com (Sean Mcafee)
        -:   31://
        -:   32:// The Google C++ Testing Framework (Google Test)
        -:   33://
        -:   34:// This header file declares functions and macros used internally by
        -:   35:// Google Test.  They are subject to change without notice.
        -:   36:
        -:   37:#ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_
        -:   38:#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_
        -:   39:
        -:   40:#include "gtest/internal/gtest-port.h"
        -:   41:
        -:   42:#if GTEST_OS_LINUX
        -:   43:# include <stdlib.h>
        -:   44:# include <sys/types.h>
        -:   45:# include <sys/wait.h>
        -:   46:# include <unistd.h>
        -:   47:#endif  // GTEST_OS_LINUX
        -:   48:
        -:   49:#if GTEST_HAS_EXCEPTIONS
        -:   50:# include <stdexcept>
        -:   51:#endif
        -:   52:
        -:   53:#include <ctype.h>
        -:   54:#include <float.h>
        -:   55:#include <string.h>
        -:   56:#include <iomanip>
        -:   57:#include <limits>
        -:   58:#include <set>
        -:   59:
        -:   60:#include "gtest/gtest-message.h"
        -:   61:#include "gtest/internal/gtest-string.h"
        -:   62:#include "gtest/internal/gtest-filepath.h"
        -:   63:#include "gtest/internal/gtest-type-util.h"
        -:   64:
        -:   65:// Due to C++ preprocessor weirdness, we need double indirection to
        -:   66:// concatenate two tokens when one of them is __LINE__.  Writing
        -:   67://
        -:   68://   foo ## __LINE__
        -:   69://
        -:   70:// will result in the token foo__LINE__, instead of foo followed by
        -:   71:// the current line number.  For more details, see
        -:   72:// http://www.parashift.com/c++-faq-lite/misc-technical-issues.html#faq-39.6
        -:   73:#define GTEST_CONCAT_TOKEN_(foo, bar) GTEST_CONCAT_TOKEN_IMPL_(foo, bar)
        -:   74:#define GTEST_CONCAT_TOKEN_IMPL_(foo, bar) foo ## bar
        -:   75:
        -:   76:class ProtocolMessage;
        -:   77:namespace proto2 { class Message; }
        -:   78:
        -:   79:namespace testing {
        -:   80:
        -:   81:// Forward declarations.
        -:   82:
        -:   83:class AssertionResult;                 // Result of an assertion.
        -:   84:class Message;                         // Represents a failure message.
        -:   85:class Test;                            // Represents a test.
        -:   86:class TestInfo;                        // Information about a test.
        -:   87:class TestPartResult;                  // Result of a test part.
        -:   88:class UnitTest;                        // A collection of test cases.
        -:   89:
        -:   90:template <typename T>
        -:   91:::std::string PrintToString(const T& value);
        -:   92:
        -:   93:namespace internal {
        -:   94:
        -:   95:struct TraceInfo;                      // Information about a trace point.
        -:   96:class ScopedTrace;                     // Implements scoped trace.
        -:   97:class TestInfoImpl;                    // Opaque implementation of TestInfo
        -:   98:class UnitTestImpl;                    // Opaque implementation of UnitTest
        -:   99:
        -:  100:// How many times InitGoogleTest() has been called.
        -:  101:GTEST_API_ extern int g_init_gtest_count;
        -:  102:
        -:  103:// The text used in failure messages to indicate the start of the
        -:  104:// stack trace.
        -:  105:GTEST_API_ extern const char kStackTraceMarker[];
        -:  106:
        -:  107:// Two overloaded helpers for checking at compile time whether an
        -:  108:// expression is a null pointer literal (i.e. NULL or any 0-valued
        -:  109:// compile-time integral constant).  Their return values have
        -:  110:// different sizes, so we can use sizeof() to test which version is
        -:  111:// picked by the compiler.  These helpers have no implementations, as
        -:  112:// we only need their signatures.
        -:  113://
        -:  114:// Given IsNullLiteralHelper(x), the compiler will pick the first
        -:  115:// version if x can be implicitly converted to Secret*, and pick the
        -:  116:// second version otherwise.  Since Secret is a secret and incomplete
        -:  117:// type, the only expression a user can write that has type Secret* is
        -:  118:// a null pointer literal.  Therefore, we know that x is a null
        -:  119:// pointer literal if and only if the first version is picked by the
        -:  120:// compiler.
        -:  121:char IsNullLiteralHelper(Secret* p);
        -:  122:char (&IsNullLiteralHelper(...))[2];  // NOLINT
        -:  123:
        -:  124:// A compile-time bool constant that is true if and only if x is a
        -:  125:// null pointer literal (i.e. NULL or any 0-valued compile-time
        -:  126:// integral constant).
        -:  127:#ifdef GTEST_ELLIPSIS_NEEDS_POD_
        -:  128:// We lose support for NULL detection where the compiler doesn't like
        -:  129:// passing non-POD classes through ellipsis (...).
        -:  130:# define GTEST_IS_NULL_LITERAL_(x) false
        -:  131:#else
        -:  132:# define GTEST_IS_NULL_LITERAL_(x) \
        -:  133:    (sizeof(::testing::internal::IsNullLiteralHelper(x)) == 1)
        -:  134:#endif  // GTEST_ELLIPSIS_NEEDS_POD_
        -:  135:
        -:  136:// Appends the user-supplied message to the Google-Test-generated message.
        -:  137:GTEST_API_ std::string AppendUserMessage(
        -:  138:    const std::string& gtest_msg, const Message& user_msg);
        -:  139:
        -:  140:#if GTEST_HAS_EXCEPTIONS
        -:  141:
        -:  142:// This exception is thrown by (and only by) a failed Google Test
        -:  143:// assertion when GTEST_FLAG(throw_on_failure) is true (if exceptions
        -:  144:// are enabled).  We derive it from std::runtime_error, which is for
        -:  145:// errors presumably detectable only at run time.  Since
        -:  146:// std::runtime_error inherits from std::exception, many testing
        -:  147:// frameworks know how to extract and print the message inside it.
        -:  148:class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {
        -:  149: public:
        -:  150:  explicit GoogleTestFailureException(const TestPartResult& failure);
        -:  151:};
        -:  152:
        -:  153:#endif  // GTEST_HAS_EXCEPTIONS
        -:  154:
        -:  155:// A helper class for creating scoped traces in user programs.
        -:  156:class GTEST_API_ ScopedTrace {
        -:  157: public:
        -:  158:  // The c'tor pushes the given source file location and message onto
        -:  159:  // a trace stack maintained by Google Test.
        -:  160:  ScopedTrace(const char* file, int line, const Message& message);
        -:  161:
        -:  162:  // The d'tor pops the info pushed by the c'tor.
        -:  163:  //
        -:  164:  // Note that the d'tor is not virtual in order to be efficient.
        -:  165:  // Don't inherit from ScopedTrace!
        -:  166:  ~ScopedTrace();
        -:  167:
        -:  168: private:
        -:  169:  GTEST_DISALLOW_COPY_AND_ASSIGN_(ScopedTrace);
        -:  170:} GTEST_ATTRIBUTE_UNUSED_;  // A ScopedTrace object does its job in its
        -:  171:                            // c'tor and d'tor.  Therefore it doesn't
        -:  172:                            // need to be used otherwise.
        -:  173:
        -:  174:// Constructs and returns the message for an equality assertion
        -:  175:// (e.g. ASSERT_EQ, EXPECT_STREQ, etc) failure.
        -:  176://
        -:  177:// The first four parameters are the expressions used in the assertion
        -:  178:// and their values, as strings.  For example, for ASSERT_EQ(foo, bar)
        -:  179:// where foo is 5 and bar is 6, we have:
        -:  180://
        -:  181://   expected_expression: "foo"
        -:  182://   actual_expression:   "bar"
        -:  183://   expected_value:      "5"
        -:  184://   actual_value:        "6"
        -:  185://
        -:  186:// The ignoring_case parameter is true iff the assertion is a
        -:  187:// *_STRCASEEQ*.  When it's true, the string " (ignoring case)" will
        -:  188:// be inserted into the message.
        -:  189:GTEST_API_ AssertionResult EqFailure(const char* expected_expression,
        -:  190:                                     const char* actual_expression,
        -:  191:                                     const std::string& expected_value,
        -:  192:                                     const std::string& actual_value,
        -:  193:                                     bool ignoring_case);
        -:  194:
        -:  195:// Constructs a failure message for Boolean assertions such as EXPECT_TRUE.
        -:  196:GTEST_API_ std::string GetBoolAssertionFailureMessage(
        -:  197:    const AssertionResult& assertion_result,
        -:  198:    const char* expression_text,
        -:  199:    const char* actual_predicate_value,
        -:  200:    const char* expected_predicate_value);
        -:  201:
        -:  202:// This template class represents an IEEE floating-point number
        -:  203:// (either single-precision or double-precision, depending on the
        -:  204:// template parameters).
        -:  205://
        -:  206:// The purpose of this class is to do more sophisticated number
        -:  207:// comparison.  (Due to round-off error, etc, it's very unlikely that
        -:  208:// two floating-points will be equal exactly.  Hence a naive
        -:  209:// comparison by the == operation often doesn't work.)
        -:  210://
        -:  211:// Format of IEEE floating-point:
        -:  212://
        -:  213://   The most-significant bit being the leftmost, an IEEE
        -:  214://   floating-point looks like
        -:  215://
        -:  216://     sign_bit exponent_bits fraction_bits
        -:  217://
        -:  218://   Here, sign_bit is a single bit that designates the sign of the
        -:  219://   number.
        -:  220://
        -:  221://   For float, there are 8 exponent bits and 23 fraction bits.
        -:  222://
        -:  223://   For double, there are 11 exponent bits and 52 fraction bits.
        -:  224://
        -:  225://   More details can be found at
        -:  226://   http://en.wikipedia.org/wiki/IEEE_floating-point_standard.
        -:  227://
        -:  228:// Template parameter:
        -:  229://
        -:  230://   RawType: the raw floating-point type (either float or double)
        -:  231:template <typename RawType>
        -:  232:class FloatingPoint {
        -:  233: public:
        -:  234:  // Defines the unsigned integer type that has the same size as the
        -:  235:  // floating point number.
        -:  236:  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;
        -:  237:
        -:  238:  // Constants.
        -:  239:
        -:  240:  // # of bits in a number.
        -:  241:  static const size_t kBitCount = 8*sizeof(RawType);
        -:  242:
        -:  243:  // # of fraction bits in a number.
        -:  244:  static const size_t kFractionBitCount =
        -:  245:    std::numeric_limits<RawType>::digits - 1;
        -:  246:
        -:  247:  // # of exponent bits in a number.
        -:  248:  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;
        -:  249:
        -:  250:  // The mask for the sign bit.
        -:  251:  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);
        -:  252:
        -:  253:  // The mask for the fraction bits.
        -:  254:  static const Bits kFractionBitMask =
        -:  255:    ~static_cast<Bits>(0) >> (kExponentBitCount + 1);
        -:  256:
        -:  257:  // The mask for the exponent bits.
        -:  258:  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);
        -:  259:
        -:  260:  // How many ULP's (Units in the Last Place) we want to tolerate when
        -:  261:  // comparing two numbers.  The larger the value, the more error we
        -:  262:  // allow.  A 0 value means that two numbers must be exactly the same
        -:  263:  // to be considered equal.
        -:  264:  //
        -:  265:  // The maximum error of a single floating-point operation is 0.5
        -:  266:  // units in the last place.  On Intel CPU's, all floating-point
        -:  267:  // calculations are done with 80-bit precision, while double has 64
        -:  268:  // bits.  Therefore, 4 should be enough for ordinary use.
        -:  269:  //
        -:  270:  // See the following article for more details on ULP:
        -:  271:  // http://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/
        -:  272:  static const size_t kMaxUlps = 4;
        -:  273:
        -:  274:  // Constructs a FloatingPoint from a raw floating-point number.
        -:  275:  //
        -:  276:  // On an Intel CPU, passing a non-normalized NAN (Not a Number)
        -:  277:  // around may change its bits, although the new value is guaranteed
        -:  278:  // to be also a NAN.  Therefore, don't expect this constructor to
        -:  279:  // preserve the bits in x when x is a NAN.
        -:  280:  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }
        -:  281:
        -:  282:  // Static methods
        -:  283:
        -:  284:  // Reinterprets a bit pattern as a floating-point number.
        -:  285:  //
        -:  286:  // This function is needed to test the AlmostEquals() method.
        -:  287:  static RawType ReinterpretBits(const Bits bits) {
        -:  288:    FloatingPoint fp(0);
        -:  289:    fp.u_.bits_ = bits;
        -:  290:    return fp.u_.value_;
        -:  291:  }
        -:  292:
        -:  293:  // Returns the floating-point number that represent positive infinity.
        -:  294:  static RawType Infinity() {
        -:  295:    return ReinterpretBits(kExponentBitMask);
        -:  296:  }
        -:  297:
        -:  298:  // Returns the maximum representable finite floating-point number.
        -:  299:  static RawType Max();
        -:  300:
        -:  301:  // Non-static methods
        -:  302:
        -:  303:  // Returns the bits that represents this number.
        -:  304:  const Bits &bits() const { return u_.bits_; }
        -:  305:
        -:  306:  // Returns the exponent bits of this number.
        -:  307:  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }
        -:  308:
        -:  309:  // Returns the fraction bits of this number.
        -:  310:  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }
        -:  311:
        -:  312:  // Returns the sign bit of this number.
        -:  313:  Bits sign_bit() const { return kSignBitMask & u_.bits_; }
        -:  314:
        -:  315:  // Returns true iff this is NAN (not a number).
        -:  316:  bool is_nan() const {
        -:  317:    // It's a NAN if the exponent bits are all ones and the fraction
        -:  318:    // bits are not entirely zeros.
        -:  319:    return (exponent_bits() == kExponentBitMask) && (fraction_bits() != 0);
        -:  320:  }
        -:  321:
        -:  322:  // Returns true iff this number is at most kMaxUlps ULP's away from
        -:  323:  // rhs.  In particular, this function:
        -:  324:  //
        -:  325:  //   - returns false if either number is (or both are) NAN.
        -:  326:  //   - treats really large numbers as almost equal to infinity.
        -:  327:  //   - thinks +0.0 and -0.0 are 0 DLP's apart.
        -:  328:  bool AlmostEquals(const FloatingPoint& rhs) const {
        -:  329:    // The IEEE standard says that any comparison operation involving
        -:  330:    // a NAN must return false.
        -:  331:    if (is_nan() || rhs.is_nan()) return false;
        -:  332:
        -:  333:    return DistanceBetweenSignAndMagnitudeNumbers(u_.bits_, rhs.u_.bits_)
        -:  334:        <= kMaxUlps;
        -:  335:  }
        -:  336:
        -:  337: private:
        -:  338:  // The data type used to store the actual floating-point number.
        -:  339:  union FloatingPointUnion {
        -:  340:    RawType value_;  // The raw floating-point number.
        -:  341:    Bits bits_;      // The bits that represent the number.
        -:  342:  };
        -:  343:
        -:  344:  // Converts an integer from the sign-and-magnitude representation to
        -:  345:  // the biased representation.  More precisely, let N be 2 to the
        -:  346:  // power of (kBitCount - 1), an integer x is represented by the
        -:  347:  // unsigned number x + N.
        -:  348:  //
        -:  349:  // For instance,
        -:  350:  //
        -:  351:  //   -N + 1 (the most negative number representable using
        -:  352:  //          sign-and-magnitude) is represented by 1;
        -:  353:  //   0      is represented by N; and
        -:  354:  //   N - 1  (the biggest number representable using
        -:  355:  //          sign-and-magnitude) is represented by 2N - 1.
        -:  356:  //
        -:  357:  // Read http://en.wikipedia.org/wiki/Signed_number_representations
        -:  358:  // for more details on signed number representations.
        -:  359:  static Bits SignAndMagnitudeToBiased(const Bits &sam) {
        -:  360:    if (kSignBitMask & sam) {
        -:  361:      // sam represents a negative number.
        -:  362:      return ~sam + 1;
        -:  363:    } else {
        -:  364:      // sam represents a positive number.
        -:  365:      return kSignBitMask | sam;
        -:  366:    }
        -:  367:  }
        -:  368:
        -:  369:  // Given two numbers in the sign-and-magnitude representation,
        -:  370:  // returns the distance between them as an unsigned number.
        -:  371:  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,
        -:  372:                                                     const Bits &sam2) {
        -:  373:    const Bits biased1 = SignAndMagnitudeToBiased(sam1);
        -:  374:    const Bits biased2 = SignAndMagnitudeToBiased(sam2);
        -:  375:    return (biased1 >= biased2) ? (biased1 - biased2) : (biased2 - biased1);
        -:  376:  }
        -:  377:
        -:  378:  FloatingPointUnion u_;
        -:  379:};
        -:  380:
        -:  381:// We cannot use std::numeric_limits<T>::max() as it clashes with the max()
        -:  382:// macro defined by <windows.h>.
        -:  383:template <>
        -:  384:inline float FloatingPoint<float>::Max() { return FLT_MAX; }
        -:  385:template <>
        -:  386:inline double FloatingPoint<double>::Max() { return DBL_MAX; }
        -:  387:
        -:  388:// Typedefs the instances of the FloatingPoint template class that we
        -:  389:// care to use.
        -:  390:typedef FloatingPoint<float> Float;
        -:  391:typedef FloatingPoint<double> Double;
        -:  392:
        -:  393:// In order to catch the mistake of putting tests that use different
        -:  394:// test fixture classes in the same test case, we need to assign
        -:  395:// unique IDs to fixture classes and compare them.  The TypeId type is
        -:  396:// used to hold such IDs.  The user should treat TypeId as an opaque
        -:  397:// type: the only operation allowed on TypeId values is to compare
        -:  398:// them for equality using the == operator.
        -:  399:typedef const void* TypeId;
        -:  400:
        -:  401:template <typename T>
        -:  402:class TypeIdHelper {
        -:  403: public:
        -:  404:  // dummy_ must not have a const type.  Otherwise an overly eager
        -:  405:  // compiler (e.g. MSVC 7.1 & 8.0) may try to merge
        -:  406:  // TypeIdHelper<T>::dummy_ for different Ts as an "optimization".
        -:  407:  static bool dummy_;
        -:  408:};
        -:  409:
        -:  410:template <typename T>
        -:  411:bool TypeIdHelper<T>::dummy_ = false;
        -:  412:
        -:  413:// GetTypeId<T>() returns the ID of type T.  Different values will be
        -:  414:// returned for different types.  Calling the function twice with the
        -:  415:// same type argument is guaranteed to return the same ID.
        -:  416:template <typename T>
function _ZN7testing8internal9GetTypeIdI13Deque_FixtureI8my_dequeIiSaIiEEEEEPKvv called 45 returned 100% blocks executed 100%
function _ZN7testing8internal9GetTypeIdI13Deque_FixtureISt5dequeIiSaIiEEEEEPKvv called 45 returned 100% blocks executed 100%
       90:  417:TypeId GetTypeId() {
        -:  418:  // The compiler is required to allocate a different
        -:  419:  // TypeIdHelper<T>::dummy_ variable for each T used to instantiate
        -:  420:  // the template.  Therefore, the address of dummy_ is guaranteed to
        -:  421:  // be unique.
       90:  422:  return &(TypeIdHelper<T>::dummy_);
        -:  423:}
        -:  424:
        -:  425:// Returns the type ID of ::testing::Test.  Always call this instead
        -:  426:// of GetTypeId< ::testing::Test>() to get the type ID of
        -:  427:// ::testing::Test, as the latter may give the wrong result due to a
        -:  428:// suspected linker bug when compiling Google Test as a Mac OS X
        -:  429:// framework.
        -:  430:GTEST_API_ TypeId GetTestTypeId();
        -:  431:
        -:  432:// Defines the abstract factory interface that creates instances
        -:  433:// of a Test object.
        -:  434:class TestFactoryBase {
        -:  435: public:
function _ZN7testing8internal15TestFactoryBaseD0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryBaseD2Ev called 0 returned 0% blocks executed 0%
    #####:  436:  virtual ~TestFactoryBase() {}
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
        -:  437:
        -:  438:  // Creates a test instance to run. The instance is both created and destroyed
        -:  439:  // within TestInfoImpl::Run()
        -:  440:  virtual Test* CreateTest() = 0;
        -:  441:
        -:  442: protected:
function _ZN7testing8internal15TestFactoryBaseC2Ev called 90 returned 100% blocks executed 100%
       90:  443:  TestFactoryBase() {}
        -:  444:
        -:  445: private:
        -:  446:  GTEST_DISALLOW_COPY_AND_ASSIGN_(TestFactoryBase);
        -:  447:};
        -:  448:
        -:  449:// This class provides implementation of TeastFactoryBase interface.
        -:  450:// It is used in TEST and TEST_F macros.
        -:  451:template <class TestClass>
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestISt5dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestISt5dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestI8my_dequeIiSaIiEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestI8my_dequeIiSaIiEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestI8my_dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestISt5dequeIiSaIiEEEEC2Ev called 1 returned 100% blocks executed 100%
       90:  452:class TestFactoryImpl : public TestFactoryBase {
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
branch 27 never executed
branch 28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
branch 39 never executed
branch 40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
branch 45 never executed
branch 46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
branch 51 never executed
branch 52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
call   56 never executed
branch 57 never executed
branch 58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
branch 63 never executed
branch 64 never executed
call   65 never executed
call   66 never executed
call   67 never executed
call   68 never executed
branch 69 never executed
branch 70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
call   74 never executed
branch 75 never executed
branch 76 never executed
call   77 never executed
call   78 never executed
call   79 never executed
call   80 never executed
branch 81 never executed
branch 82 never executed
call   83 never executed
call   84 never executed
call   85 never executed
call   86 never executed
branch 87 never executed
branch 88 never executed
call   89 never executed
call   90 never executed
call   91 never executed
call   92 never executed
branch 93 never executed
branch 94 never executed
call   95 never executed
call   96 never executed
call   97 never executed
call   98 never executed
branch 99 never executed
branch 100 never executed
call   101 never executed
call   102 never executed
call   103 never executed
call   104 never executed
branch 105 never executed
branch 106 never executed
call   107 never executed
call   108 never executed
call   109 never executed
call   110 never executed
branch 111 never executed
branch 112 never executed
call   113 never executed
call   114 never executed
call   115 never executed
call   116 never executed
branch 117 never executed
branch 118 never executed
call   119 never executed
call   120 never executed
call   121 never executed
call   122 never executed
branch 123 never executed
branch 124 never executed
call   125 never executed
call   126 never executed
call   127 never executed
call   128 never executed
branch 129 never executed
branch 130 never executed
call   131 never executed
call   132 never executed
call   133 never executed
call   134 never executed
branch 135 never executed
branch 136 never executed
call   137 never executed
call   138 never executed
call   139 never executed
call   140 never executed
branch 141 never executed
branch 142 never executed
call   143 never executed
call   144 never executed
call   145 never executed
call   146 never executed
branch 147 never executed
branch 148 never executed
call   149 never executed
call   150 never executed
call   151 never executed
call   152 never executed
branch 153 never executed
branch 154 never executed
call   155 never executed
call   156 never executed
call   157 never executed
call   158 never executed
branch 159 never executed
branch 160 never executed
call   161 never executed
call   162 never executed
call   163 never executed
call   164 never executed
branch 165 never executed
branch 166 never executed
call   167 never executed
call   168 never executed
call   169 never executed
call   170 never executed
branch 171 never executed
branch 172 never executed
call   173 never executed
call   174 never executed
call   175 never executed
call   176 never executed
branch 177 never executed
branch 178 never executed
call   179 never executed
call   180 never executed
call   181 never executed
call   182 never executed
branch 183 never executed
branch 184 never executed
call   185 never executed
call   186 never executed
call   187 never executed
call   188 never executed
branch 189 never executed
branch 190 never executed
call   191 never executed
call   192 never executed
call   193 never executed
call   194 never executed
branch 195 never executed
branch 196 never executed
call   197 never executed
call   198 never executed
call   199 never executed
call   200 never executed
branch 201 never executed
branch 202 never executed
call   203 never executed
call   204 never executed
call   205 never executed
call   206 never executed
branch 207 never executed
branch 208 never executed
call   209 never executed
call   210 never executed
call   211 never executed
call   212 never executed
branch 213 never executed
branch 214 never executed
call   215 never executed
call   216 never executed
call   217 never executed
call   218 never executed
branch 219 never executed
branch 220 never executed
call   221 never executed
call   222 never executed
call   223 never executed
call   224 never executed
branch 225 never executed
branch 226 never executed
call   227 never executed
call   228 never executed
call   229 never executed
call   230 never executed
branch 231 never executed
branch 232 never executed
call   233 never executed
call   234 never executed
call   235 never executed
call   236 never executed
branch 237 never executed
branch 238 never executed
call   239 never executed
call   240 never executed
call   241 never executed
call   242 never executed
branch 243 never executed
branch 244 never executed
call   245 never executed
call   246 never executed
call   247 never executed
call   248 never executed
branch 249 never executed
branch 250 never executed
call   251 never executed
call   252 never executed
call   253 never executed
call   254 never executed
branch 255 never executed
branch 256 never executed
call   257 never executed
call   258 never executed
call   259 never executed
call   260 never executed
branch 261 never executed
branch 262 never executed
call   263 never executed
call   264 never executed
call   265 never executed
call   266 never executed
branch 267 never executed
branch 268 never executed
call   269 never executed
call   270 never executed
call   271 never executed
call   272 never executed
branch 273 never executed
branch 274 never executed
call   275 never executed
call   276 never executed
call   277 never executed
call   278 never executed
branch 279 never executed
branch 280 never executed
call   281 never executed
call   282 never executed
call   283 never executed
call   284 never executed
branch 285 never executed
branch 286 never executed
call   287 never executed
call   288 never executed
call   289 never executed
call   290 never executed
branch 291 never executed
branch 292 never executed
call   293 never executed
call   294 never executed
call   295 never executed
call   296 never executed
branch 297 never executed
branch 298 never executed
call   299 never executed
call   300 never executed
call   301 never executed
call   302 never executed
branch 303 never executed
branch 304 never executed
call   305 never executed
call   306 never executed
call   307 never executed
call   308 never executed
branch 309 never executed
branch 310 never executed
call   311 never executed
call   312 never executed
call   313 never executed
call   314 never executed
branch 315 never executed
branch 316 never executed
call   317 never executed
call   318 never executed
call   319 never executed
call   320 never executed
branch 321 never executed
branch 322 never executed
call   323 never executed
call   324 never executed
call   325 never executed
call   326 never executed
branch 327 never executed
branch 328 never executed
call   329 never executed
call   330 never executed
call   331 never executed
call   332 never executed
branch 333 never executed
branch 334 never executed
call   335 never executed
call   336 never executed
call   337 never executed
call   338 never executed
branch 339 never executed
branch 340 never executed
call   341 never executed
call   342 never executed
call   343 never executed
call   344 never executed
branch 345 never executed
branch 346 never executed
call   347 never executed
call   348 never executed
call   349 never executed
call   350 never executed
branch 351 never executed
branch 352 never executed
call   353 never executed
call   354 never executed
call   355 never executed
call   356 never executed
branch 357 never executed
branch 358 never executed
call   359 never executed
call   360 never executed
call   361 never executed
call   362 never executed
branch 363 never executed
branch 364 never executed
call   365 never executed
call   366 never executed
call   367 never executed
call   368 never executed
branch 369 never executed
branch 370 never executed
call   371 never executed
call   372 never executed
call   373 never executed
call   374 never executed
branch 375 never executed
branch 376 never executed
call   377 never executed
call   378 never executed
call   379 never executed
call   380 never executed
branch 381 never executed
branch 382 never executed
call   383 never executed
call   384 never executed
call   385 never executed
call   386 never executed
branch 387 never executed
branch 388 never executed
call   389 never executed
call   390 never executed
call   391 never executed
call   392 never executed
branch 393 never executed
branch 394 never executed
call   395 never executed
call   396 never executed
call   397 never executed
call   398 never executed
branch 399 never executed
branch 400 never executed
call   401 never executed
call   402 never executed
call   403 never executed
call   404 never executed
branch 405 never executed
branch 406 never executed
call   407 never executed
call   408 never executed
call   409 never executed
call   410 never executed
branch 411 never executed
branch 412 never executed
call   413 never executed
call   414 never executed
call   415 never executed
call   416 never executed
branch 417 never executed
branch 418 never executed
call   419 never executed
call   420 never executed
call   421 never executed
call   422 never executed
branch 423 never executed
branch 424 never executed
call   425 never executed
call   426 never executed
call   427 never executed
call   428 never executed
branch 429 never executed
branch 430 never executed
call   431 never executed
call   432 never executed
call   433 never executed
call   434 never executed
branch 435 never executed
branch 436 never executed
call   437 never executed
call   438 never executed
call   439 never executed
call   440 never executed
branch 441 never executed
branch 442 never executed
call   443 never executed
call   444 never executed
call   445 never executed
call   446 never executed
branch 447 never executed
branch 448 never executed
call   449 never executed
call   450 never executed
call   451 never executed
call   452 never executed
branch 453 never executed
branch 454 never executed
call   455 never executed
call   456 never executed
call   457 never executed
call   458 never executed
branch 459 never executed
branch 460 never executed
call   461 never executed
call   462 never executed
call   463 never executed
call   464 never executed
branch 465 never executed
branch 466 never executed
call   467 never executed
call   468 never executed
call   469 never executed
call   470 never executed
branch 471 never executed
branch 472 never executed
call   473 never executed
call   474 never executed
call   475 never executed
call   476 never executed
branch 477 never executed
branch 478 never executed
call   479 never executed
call   480 never executed
call   481 never executed
call   482 never executed
branch 483 never executed
branch 484 never executed
call   485 never executed
call   486 never executed
call   487 never executed
call   488 never executed
branch 489 never executed
branch 490 never executed
call   491 never executed
call   492 never executed
call   493 never executed
call   494 never executed
branch 495 never executed
branch 496 never executed
call   497 never executed
call   498 never executed
call   499 never executed
call   500 never executed
branch 501 never executed
branch 502 never executed
call   503 never executed
call   504 never executed
call   505 never executed
call   506 never executed
branch 507 never executed
branch 508 never executed
call   509 never executed
call   510 never executed
call   511 never executed
call   512 never executed
branch 513 never executed
branch 514 never executed
call   515 never executed
call   516 never executed
call   517 never executed
call   518 never executed
branch 519 never executed
branch 520 never executed
call   521 never executed
call   522 never executed
call   523 never executed
call   524 never executed
branch 525 never executed
branch 526 never executed
call   527 never executed
call   528 never executed
call   529 never executed
call   530 never executed
branch 531 never executed
branch 532 never executed
call   533 never executed
call   534 never executed
call   535 never executed
call   536 never executed
branch 537 never executed
branch 538 never executed
call   539 never executed
call   540 returned 100%
call   541 returned 100%
call   542 returned 100%
call   543 returned 100%
call   544 returned 100%
call   545 returned 100%
call   546 returned 100%
call   547 returned 100%
call   548 returned 100%
call   549 returned 100%
call   550 returned 100%
call   551 returned 100%
call   552 returned 100%
call   553 returned 100%
call   554 returned 100%
call   555 returned 100%
call   556 returned 100%
call   557 returned 100%
call   558 returned 100%
call   559 returned 100%
call   560 returned 100%
call   561 returned 100%
call   562 returned 100%
call   563 returned 100%
call   564 returned 100%
call   565 returned 100%
call   566 returned 100%
call   567 returned 100%
call   568 returned 100%
call   569 returned 100%
call   570 returned 100%
call   571 returned 100%
call   572 returned 100%
call   573 returned 100%
call   574 returned 100%
call   575 returned 100%
call   576 returned 100%
call   577 returned 100%
call   578 returned 100%
call   579 returned 100%
call   580 returned 100%
call   581 returned 100%
call   582 returned 100%
call   583 returned 100%
call   584 returned 100%
call   585 returned 100%
call   586 returned 100%
call   587 returned 100%
call   588 returned 100%
call   589 returned 100%
call   590 returned 100%
call   591 returned 100%
call   592 returned 100%
call   593 returned 100%
call   594 returned 100%
call   595 returned 100%
call   596 returned 100%
call   597 returned 100%
call   598 returned 100%
call   599 returned 100%
call   600 returned 100%
call   601 returned 100%
call   602 returned 100%
call   603 returned 100%
call   604 returned 100%
call   605 returned 100%
call   606 returned 100%
call   607 returned 100%
call   608 returned 100%
call   609 returned 100%
call   610 returned 100%
call   611 returned 100%
call   612 returned 100%
call   613 returned 100%
call   614 returned 100%
call   615 returned 100%
call   616 returned 100%
call   617 returned 100%
call   618 returned 100%
call   619 returned 100%
call   620 returned 100%
call   621 returned 100%
call   622 returned 100%
call   623 returned 100%
call   624 returned 100%
call   625 returned 100%
call   626 returned 100%
call   627 returned 100%
call   628 returned 100%
call   629 returned 100%
        -:  453: public:
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestISt5dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI25Deque_Fixture_test_1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI27Deque_Fixture_equalop3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop4_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_lessthanop5_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_equal3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_notequal3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_plus3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI30Deque_Fixture_iter_minus4_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_star3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI29Deque_Fixture_iter_arrow_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI33Deque_Fixture_iter_plusplus3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI37Deque_Fixture_iter_postplusplus3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusminus3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI39Deque_Fixture_iter_minusminuspost3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI34Deque_Fixture_iter_plusequal3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI44Deque_Fixture_iter_plus_op_equal_test_4_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal1_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal2_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
function _ZN7testing8internal15TestFactoryImplI35Deque_Fixture_iter_minusequal3_TestI8my_dequeIiSaIiEEEE10CreateTestEv called 1 returned 100% blocks executed 83%
       90:  454:  virtual Test* CreateTest() { return new TestClass; }
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 never executed
call    5 returned 100%
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 never executed
call   10 returned 100%
call   11 returned 100%
branch 12 taken 100% (fallthrough)
branch 13 taken 0% (throw)
call   14 never executed
call   15 returned 100%
call   16 returned 100%
branch 17 taken 100% (fallthrough)
branch 18 taken 0% (throw)
call   19 never executed
call   20 returned 100%
call   21 returned 100%
branch 22 taken 100% (fallthrough)
branch 23 taken 0% (throw)
call   24 never executed
call   25 returned 100%
call   26 returned 100%
branch 27 taken 100% (fallthrough)
branch 28 taken 0% (throw)
call   29 never executed
call   30 returned 100%
call   31 returned 100%
branch 32 taken 100% (fallthrough)
branch 33 taken 0% (throw)
call   34 never executed
call   35 returned 100%
call   36 returned 100%
branch 37 taken 100% (fallthrough)
branch 38 taken 0% (throw)
call   39 never executed
call   40 returned 100%
call   41 returned 100%
branch 42 taken 100% (fallthrough)
branch 43 taken 0% (throw)
call   44 never executed
call   45 returned 100%
call   46 returned 100%
branch 47 taken 100% (fallthrough)
branch 48 taken 0% (throw)
call   49 never executed
call   50 returned 100%
call   51 returned 100%
branch 52 taken 100% (fallthrough)
branch 53 taken 0% (throw)
call   54 never executed
call   55 returned 100%
call   56 returned 100%
branch 57 taken 100% (fallthrough)
branch 58 taken 0% (throw)
call   59 never executed
call   60 returned 100%
call   61 returned 100%
branch 62 taken 100% (fallthrough)
branch 63 taken 0% (throw)
call   64 never executed
call   65 returned 100%
call   66 returned 100%
branch 67 taken 100% (fallthrough)
branch 68 taken 0% (throw)
call   69 never executed
call   70 returned 100%
call   71 returned 100%
branch 72 taken 100% (fallthrough)
branch 73 taken 0% (throw)
call   74 never executed
call   75 returned 100%
call   76 returned 100%
branch 77 taken 100% (fallthrough)
branch 78 taken 0% (throw)
call   79 never executed
call   80 returned 100%
call   81 returned 100%
branch 82 taken 100% (fallthrough)
branch 83 taken 0% (throw)
call   84 never executed
call   85 returned 100%
call   86 returned 100%
branch 87 taken 100% (fallthrough)
branch 88 taken 0% (throw)
call   89 never executed
call   90 returned 100%
call   91 returned 100%
branch 92 taken 100% (fallthrough)
branch 93 taken 0% (throw)
call   94 never executed
call   95 returned 100%
call   96 returned 100%
branch 97 taken 100% (fallthrough)
branch 98 taken 0% (throw)
call   99 never executed
call   100 returned 100%
call   101 returned 100%
branch 102 taken 100% (fallthrough)
branch 103 taken 0% (throw)
call   104 never executed
call   105 returned 100%
call   106 returned 100%
branch 107 taken 100% (fallthrough)
branch 108 taken 0% (throw)
call   109 never executed
call   110 returned 100%
call   111 returned 100%
branch 112 taken 100% (fallthrough)
branch 113 taken 0% (throw)
call   114 never executed
call   115 returned 100%
call   116 returned 100%
branch 117 taken 100% (fallthrough)
branch 118 taken 0% (throw)
call   119 never executed
call   120 returned 100%
call   121 returned 100%
branch 122 taken 100% (fallthrough)
branch 123 taken 0% (throw)
call   124 never executed
call   125 returned 100%
call   126 returned 100%
branch 127 taken 100% (fallthrough)
branch 128 taken 0% (throw)
call   129 never executed
call   130 returned 100%
call   131 returned 100%
branch 132 taken 100% (fallthrough)
branch 133 taken 0% (throw)
call   134 never executed
call   135 returned 100%
call   136 returned 100%
branch 137 taken 100% (fallthrough)
branch 138 taken 0% (throw)
call   139 never executed
call   140 returned 100%
call   141 returned 100%
branch 142 taken 100% (fallthrough)
branch 143 taken 0% (throw)
call   144 never executed
call   145 returned 100%
call   146 returned 100%
branch 147 taken 100% (fallthrough)
branch 148 taken 0% (throw)
call   149 never executed
call   150 returned 100%
call   151 returned 100%
branch 152 taken 100% (fallthrough)
branch 153 taken 0% (throw)
call   154 never executed
call   155 returned 100%
call   156 returned 100%
branch 157 taken 100% (fallthrough)
branch 158 taken 0% (throw)
call   159 never executed
call   160 returned 100%
call   161 returned 100%
branch 162 taken 100% (fallthrough)
branch 163 taken 0% (throw)
call   164 never executed
call   165 returned 100%
call   166 returned 100%
branch 167 taken 100% (fallthrough)
branch 168 taken 0% (throw)
call   169 never executed
call   170 returned 100%
call   171 returned 100%
branch 172 taken 100% (fallthrough)
branch 173 taken 0% (throw)
call   174 never executed
call   175 returned 100%
call   176 returned 100%
branch 177 taken 100% (fallthrough)
branch 178 taken 0% (throw)
call   179 never executed
call   180 returned 100%
call   181 returned 100%
branch 182 taken 100% (fallthrough)
branch 183 taken 0% (throw)
call   184 never executed
call   185 returned 100%
call   186 returned 100%
branch 187 taken 100% (fallthrough)
branch 188 taken 0% (throw)
call   189 never executed
call   190 returned 100%
call   191 returned 100%
branch 192 taken 100% (fallthrough)
branch 193 taken 0% (throw)
call   194 never executed
call   195 returned 100%
call   196 returned 100%
branch 197 taken 100% (fallthrough)
branch 198 taken 0% (throw)
call   199 never executed
call   200 returned 100%
call   201 returned 100%
branch 202 taken 100% (fallthrough)
branch 203 taken 0% (throw)
call   204 never executed
call   205 returned 100%
call   206 returned 100%
branch 207 taken 100% (fallthrough)
branch 208 taken 0% (throw)
call   209 never executed
call   210 returned 100%
call   211 returned 100%
branch 212 taken 100% (fallthrough)
branch 213 taken 0% (throw)
call   214 never executed
call   215 returned 100%
call   216 returned 100%
branch 217 taken 100% (fallthrough)
branch 218 taken 0% (throw)
call   219 never executed
call   220 returned 100%
call   221 returned 100%
branch 222 taken 100% (fallthrough)
branch 223 taken 0% (throw)
call   224 never executed
call   225 returned 100%
call   226 returned 100%
branch 227 taken 100% (fallthrough)
branch 228 taken 0% (throw)
call   229 never executed
call   230 returned 100%
call   231 returned 100%
branch 232 taken 100% (fallthrough)
branch 233 taken 0% (throw)
call   234 never executed
call   235 returned 100%
call   236 returned 100%
branch 237 taken 100% (fallthrough)
branch 238 taken 0% (throw)
call   239 never executed
call   240 returned 100%
call   241 returned 100%
branch 242 taken 100% (fallthrough)
branch 243 taken 0% (throw)
call   244 never executed
call   245 returned 100%
call   246 returned 100%
branch 247 taken 100% (fallthrough)
branch 248 taken 0% (throw)
call   249 never executed
call   250 returned 100%
call   251 returned 100%
branch 252 taken 100% (fallthrough)
branch 253 taken 0% (throw)
call   254 never executed
call   255 returned 100%
call   256 returned 100%
branch 257 taken 100% (fallthrough)
branch 258 taken 0% (throw)
call   259 never executed
call   260 returned 100%
call   261 returned 100%
branch 262 taken 100% (fallthrough)
branch 263 taken 0% (throw)
call   264 never executed
call   265 returned 100%
call   266 returned 100%
branch 267 taken 100% (fallthrough)
branch 268 taken 0% (throw)
call   269 never executed
call   270 returned 100%
call   271 returned 100%
branch 272 taken 100% (fallthrough)
branch 273 taken 0% (throw)
call   274 never executed
call   275 returned 100%
call   276 returned 100%
branch 277 taken 100% (fallthrough)
branch 278 taken 0% (throw)
call   279 never executed
call   280 returned 100%
call   281 returned 100%
branch 282 taken 100% (fallthrough)
branch 283 taken 0% (throw)
call   284 never executed
call   285 returned 100%
call   286 returned 100%
branch 287 taken 100% (fallthrough)
branch 288 taken 0% (throw)
call   289 never executed
call   290 returned 100%
call   291 returned 100%
branch 292 taken 100% (fallthrough)
branch 293 taken 0% (throw)
call   294 never executed
call   295 returned 100%
call   296 returned 100%
branch 297 taken 100% (fallthrough)
branch 298 taken 0% (throw)
call   299 never executed
call   300 returned 100%
call   301 returned 100%
branch 302 taken 100% (fallthrough)
branch 303 taken 0% (throw)
call   304 never executed
call   305 returned 100%
call   306 returned 100%
branch 307 taken 100% (fallthrough)
branch 308 taken 0% (throw)
call   309 never executed
call   310 returned 100%
call   311 returned 100%
branch 312 taken 100% (fallthrough)
branch 313 taken 0% (throw)
call   314 never executed
call   315 returned 100%
call   316 returned 100%
branch 317 taken 100% (fallthrough)
branch 318 taken 0% (throw)
call   319 never executed
call   320 returned 100%
call   321 returned 100%
branch 322 taken 100% (fallthrough)
branch 323 taken 0% (throw)
call   324 never executed
call   325 returned 100%
call   326 returned 100%
branch 327 taken 100% (fallthrough)
branch 328 taken 0% (throw)
call   329 never executed
call   330 returned 100%
call   331 returned 100%
branch 332 taken 100% (fallthrough)
branch 333 taken 0% (throw)
call   334 never executed
call   335 returned 100%
call   336 returned 100%
branch 337 taken 100% (fallthrough)
branch 338 taken 0% (throw)
call   339 never executed
call   340 returned 100%
call   341 returned 100%
branch 342 taken 100% (fallthrough)
branch 343 taken 0% (throw)
call   344 never executed
call   345 returned 100%
call   346 returned 100%
branch 347 taken 100% (fallthrough)
branch 348 taken 0% (throw)
call   349 never executed
call   350 returned 100%
call   351 returned 100%
branch 352 taken 100% (fallthrough)
branch 353 taken 0% (throw)
call   354 never executed
call   355 returned 100%
call   356 returned 100%
branch 357 taken 100% (fallthrough)
branch 358 taken 0% (throw)
call   359 never executed
call   360 returned 100%
call   361 returned 100%
branch 362 taken 100% (fallthrough)
branch 363 taken 0% (throw)
call   364 never executed
call   365 returned 100%
call   366 returned 100%
branch 367 taken 100% (fallthrough)
branch 368 taken 0% (throw)
call   369 never executed
call   370 returned 100%
call   371 returned 100%
branch 372 taken 100% (fallthrough)
branch 373 taken 0% (throw)
call   374 never executed
call   375 returned 100%
call   376 returned 100%
branch 377 taken 100% (fallthrough)
branch 378 taken 0% (throw)
call   379 never executed
call   380 returned 100%
call   381 returned 100%
branch 382 taken 100% (fallthrough)
branch 383 taken 0% (throw)
call   384 never executed
call   385 returned 100%
call   386 returned 100%
branch 387 taken 100% (fallthrough)
branch 388 taken 0% (throw)
call   389 never executed
call   390 returned 100%
call   391 returned 100%
branch 392 taken 100% (fallthrough)
branch 393 taken 0% (throw)
call   394 never executed
call   395 returned 100%
call   396 returned 100%
branch 397 taken 100% (fallthrough)
branch 398 taken 0% (throw)
call   399 never executed
call   400 returned 100%
call   401 returned 100%
branch 402 taken 100% (fallthrough)
branch 403 taken 0% (throw)
call   404 never executed
call   405 returned 100%
call   406 returned 100%
branch 407 taken 100% (fallthrough)
branch 408 taken 0% (throw)
call   409 never executed
call   410 returned 100%
call   411 returned 100%
branch 412 taken 100% (fallthrough)
branch 413 taken 0% (throw)
call   414 never executed
call   415 returned 100%
call   416 returned 100%
branch 417 taken 100% (fallthrough)
branch 418 taken 0% (throw)
call   419 never executed
call   420 returned 100%
call   421 returned 100%
branch 422 taken 100% (fallthrough)
branch 423 taken 0% (throw)
call   424 never executed
call   425 returned 100%
call   426 returned 100%
branch 427 taken 100% (fallthrough)
branch 428 taken 0% (throw)
call   429 never executed
call   430 returned 100%
call   431 returned 100%
branch 432 taken 100% (fallthrough)
branch 433 taken 0% (throw)
call   434 never executed
call   435 returned 100%
call   436 returned 100%
branch 437 taken 100% (fallthrough)
branch 438 taken 0% (throw)
call   439 never executed
call   440 returned 100%
call   441 returned 100%
branch 442 taken 100% (fallthrough)
branch 443 taken 0% (throw)
call   444 never executed
call   445 returned 100%
call   446 returned 100%
branch 447 taken 100% (fallthrough)
branch 448 taken 0% (throw)
call   449 never executed
        -:  455:};
        -:  456:
        -:  457:#if GTEST_OS_WINDOWS
        -:  458:
        -:  459:// Predicate-formatters for implementing the HRESULT checking macros
        -:  460:// {ASSERT|EXPECT}_HRESULT_{SUCCEEDED|FAILED}
        -:  461:// We pass a long instead of HRESULT to avoid causing an
        -:  462:// include dependency for the HRESULT type.
        -:  463:GTEST_API_ AssertionResult IsHRESULTSuccess(const char* expr,
        -:  464:                                            long hr);  // NOLINT
        -:  465:GTEST_API_ AssertionResult IsHRESULTFailure(const char* expr,
        -:  466:                                            long hr);  // NOLINT
        -:  467:
        -:  468:#endif  // GTEST_OS_WINDOWS
        -:  469:
        -:  470:// Types of SetUpTestCase() and TearDownTestCase() functions.
        -:  471:typedef void (*SetUpTestCaseFunc)();
        -:  472:typedef void (*TearDownTestCaseFunc)();
        -:  473:
        -:  474:// Creates a new TestInfo object and registers it with Google Test;
        -:  475:// returns the created object.
        -:  476://
        -:  477:// Arguments:
        -:  478://
        -:  479://   test_case_name:   name of the test case
        -:  480://   name:             name of the test
        -:  481://   type_param        the name of the test's type parameter, or NULL if
        -:  482://                     this is not a typed or a type-parameterized test.
        -:  483://   value_param       text representation of the test's value parameter,
        -:  484://                     or NULL if this is not a type-parameterized test.
        -:  485://   fixture_class_id: ID of the test fixture class
        -:  486://   set_up_tc:        pointer to the function that sets up the test case
        -:  487://   tear_down_tc:     pointer to the function that tears down the test case
        -:  488://   factory:          pointer to the factory that creates a test object.
        -:  489://                     The newly created TestInfo instance will assume
        -:  490://                     ownership of the factory object.
        -:  491:GTEST_API_ TestInfo* MakeAndRegisterTestInfo(
        -:  492:    const char* test_case_name,
        -:  493:    const char* name,
        -:  494:    const char* type_param,
        -:  495:    const char* value_param,
        -:  496:    TypeId fixture_class_id,
        -:  497:    SetUpTestCaseFunc set_up_tc,
        -:  498:    TearDownTestCaseFunc tear_down_tc,
        -:  499:    TestFactoryBase* factory);
        -:  500:
        -:  501:// If *pstr starts with the given prefix, modifies *pstr to be right
        -:  502:// past the prefix and returns true; otherwise leaves *pstr unchanged
        -:  503:// and returns false.  None of pstr, *pstr, and prefix can be NULL.
        -:  504:GTEST_API_ bool SkipPrefix(const char* prefix, const char** pstr);
        -:  505:
        -:  506:#if GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P
        -:  507:
        -:  508:// State of the definition of a type-parameterized test case.
        -:  509:class GTEST_API_ TypedTestCasePState {
        -:  510: public:
        -:  511:  TypedTestCasePState() : registered_(false) {}
        -:  512:
        -:  513:  // Adds the given test name to defined_test_names_ and return true
        -:  514:  // if the test case hasn't been registered; otherwise aborts the
        -:  515:  // program.
        -:  516:  bool AddTestName(const char* file, int line, const char* case_name,
        -:  517:                   const char* test_name) {
        -:  518:    if (registered_) {
        -:  519:      fprintf(stderr, "%s Test %s must be defined before "
        -:  520:              "REGISTER_TYPED_TEST_CASE_P(%s, ...).\n",
        -:  521:              FormatFileLocation(file, line).c_str(), test_name, case_name);
        -:  522:      fflush(stderr);
        -:  523:      posix::Abort();
        -:  524:    }
        -:  525:    defined_test_names_.insert(test_name);
        -:  526:    return true;
        -:  527:  }
        -:  528:
        -:  529:  // Verifies that registered_tests match the test names in
        -:  530:  // defined_test_names_; returns registered_tests if successful, or
        -:  531:  // aborts the program otherwise.
        -:  532:  const char* VerifyRegisteredTestNames(
        -:  533:      const char* file, int line, const char* registered_tests);
        -:  534:
        -:  535: private:
        -:  536:  bool registered_;
        -:  537:  ::std::set<const char*> defined_test_names_;
        -:  538:};
        -:  539:
        -:  540:// Skips to the first non-space char after the first comma in 'str';
        -:  541:// returns NULL if no comma is found in 'str'.
        -:  542:inline const char* SkipComma(const char* str) {
        -:  543:  const char* comma = strchr(str, ',');
        -:  544:  if (comma == NULL) {
        -:  545:    return NULL;
        -:  546:  }
        -:  547:  while (IsSpace(*(++comma))) {}
        -:  548:  return comma;
        -:  549:}
        -:  550:
        -:  551:// Returns the prefix of 'str' before the first comma in it; returns
        -:  552:// the entire string if it contains no comma.
function _ZN7testing8internal19GetPrefixUntilCommaEPKc called 90 returned 100% blocks executed 52%
       90:  553:inline std::string GetPrefixUntilComma(const char* str) {
       90:  554:  const char* comma = strchr(str, ',');
call    0 returned 100%
       90:  555:  return comma == NULL ? str : std::string(str, comma);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 taken 100% (fallthrough)
branch 14 taken 0%
call   15 returned 100%
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
        -:  556:}
        -:  557:
        -:  558:// TypeParameterizedTest<Fixture, TestSel, Types>::Register()
        -:  559:// registers a list of type-parameterized tests with Google Test.  The
        -:  560:// return value is insignificant - we just need to return something
        -:  561:// such that we can call this function in a namespace scope.
        -:  562://
        -:  563:// Implementation note: The GTEST_TEMPLATE_ macro declares a template
        -:  564:// template parameter.  It's defined in gtest-type-util.h.
        -:  565:template <GTEST_TEMPLATE_ Fixture, class TestSel, typename Types>
        -:  566:class TypeParameterizedTest {
        -:  567: public:
        -:  568:  // 'index' is the index of the test in the type list 'Types'
        -:  569:  // specified in INSTANTIATE_TYPED_TEST_CASE_P(Prefix, TestCase,
        -:  570:  // Types).  Valid values for 'index' are [0, N - 1] where N is the
        -:  571:  // length of Types.
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI44Deque_Fixture_iter_plus_op_equal_test_4_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_arrow_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus4_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop5_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop4_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop3_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop2_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI25Deque_Fixture_test_1_TestEENS0_6Types1I8my_dequeIiSaIiEEEEE8RegisterEPKcSD_SD_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI44Deque_Fixture_iter_plus_op_equal_test_4_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_arrow_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus4_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop5_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop4_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop3_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop2_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI25Deque_Fixture_test_1_TestEENS0_6Types2ISt5dequeIiSaIiEE8my_dequeIiS8_EEEE8RegisterEPKcSF_SF_i called 1 returned 100% blocks executed 63%
       90:  572:  static bool Register(const char* prefix, const char* case_name,
        -:  573:                       const char* test_names, int index) {
        -:  574:    typedef typename Types::Head Type;
        -:  575:    typedef Fixture<Type> FixtureClass;
        -:  576:    typedef typename GTEST_BIND_(TestSel, Type) TestClass;
        -:  577:
        -:  578:    // First, registers the first type-parameterized test in the type
        -:  579:    // list.
       90:  580:    MakeAndRegisterTestInfo(
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 returned 100%
branch 19 taken 100% (fallthrough)
branch 20 taken 0% (throw)
call   21 returned 100%
branch 22 taken 100% (fallthrough)
branch 23 taken 0% (throw)
call   24 returned 100%
branch 25 taken 100% (fallthrough)
branch 26 taken 0% (throw)
call   27 returned 100%
branch 28 taken 100% (fallthrough)
branch 29 taken 0% (throw)
call   30 returned 100%
branch 31 taken 100% (fallthrough)
branch 32 taken 0% (throw)
call   33 returned 100%
branch 34 taken 100% (fallthrough)
branch 35 taken 0% (throw)
call   36 returned 100%
branch 37 taken 100% (fallthrough)
branch 38 taken 0% (throw)
call   39 returned 100%
branch 40 taken 100% (fallthrough)
branch 41 taken 0% (throw)
call   42 returned 100%
branch 43 taken 100% (fallthrough)
branch 44 taken 0% (throw)
call   45 returned 100%
branch 46 taken 100% (fallthrough)
branch 47 taken 0% (throw)
call   48 returned 100%
branch 49 taken 100% (fallthrough)
branch 50 taken 0% (throw)
call   51 returned 100%
branch 52 taken 100% (fallthrough)
branch 53 taken 0% (throw)
call   54 returned 100%
branch 55 taken 100% (fallthrough)
branch 56 taken 0% (throw)
call   57 returned 100%
branch 58 taken 100% (fallthrough)
branch 59 taken 0% (throw)
call   60 returned 100%
branch 61 taken 100% (fallthrough)
branch 62 taken 0% (throw)
call   63 returned 100%
branch 64 taken 100% (fallthrough)
branch 65 taken 0% (throw)
call   66 returned 100%
branch 67 taken 100% (fallthrough)
branch 68 taken 0% (throw)
call   69 returned 100%
branch 70 taken 100% (fallthrough)
branch 71 taken 0% (throw)
call   72 returned 100%
branch 73 taken 100% (fallthrough)
branch 74 taken 0% (throw)
call   75 returned 100%
branch 76 taken 100% (fallthrough)
branch 77 taken 0% (throw)
call   78 returned 100%
branch 79 taken 100% (fallthrough)
branch 80 taken 0% (throw)
call   81 returned 100%
branch 82 taken 100% (fallthrough)
branch 83 taken 0% (throw)
call   84 returned 100%
branch 85 taken 100% (fallthrough)
branch 86 taken 0% (throw)
call   87 returned 100%
branch 88 taken 100% (fallthrough)
branch 89 taken 0% (throw)
call   90 returned 100%
branch 91 taken 100% (fallthrough)
branch 92 taken 0% (throw)
call   93 returned 100%
branch 94 taken 100% (fallthrough)
branch 95 taken 0% (throw)
call   96 returned 100%
branch 97 taken 100% (fallthrough)
branch 98 taken 0% (throw)
call   99 returned 100%
branch 100 taken 100% (fallthrough)
branch 101 taken 0% (throw)
call   102 returned 100%
branch 103 taken 100% (fallthrough)
branch 104 taken 0% (throw)
call   105 returned 100%
branch 106 taken 100% (fallthrough)
branch 107 taken 0% (throw)
call   108 returned 100%
branch 109 taken 100% (fallthrough)
branch 110 taken 0% (throw)
call   111 returned 100%
branch 112 taken 100% (fallthrough)
branch 113 taken 0% (throw)
call   114 returned 100%
branch 115 taken 100% (fallthrough)
branch 116 taken 0% (throw)
call   117 returned 100%
branch 118 taken 100% (fallthrough)
branch 119 taken 0% (throw)
call   120 returned 100%
branch 121 taken 100% (fallthrough)
branch 122 taken 0% (throw)
call   123 returned 100%
branch 124 taken 100% (fallthrough)
branch 125 taken 0% (throw)
call   126 returned 100%
branch 127 taken 100% (fallthrough)
branch 128 taken 0% (throw)
call   129 returned 100%
branch 130 taken 100% (fallthrough)
branch 131 taken 0% (throw)
call   132 returned 100%
branch 133 taken 100% (fallthrough)
branch 134 taken 0% (throw)
call   135 returned 100%
branch 136 taken 100% (fallthrough)
branch 137 taken 0% (throw)
call   138 returned 100%
branch 139 taken 100% (fallthrough)
branch 140 taken 0% (throw)
call   141 returned 100%
branch 142 taken 100% (fallthrough)
branch 143 taken 0% (throw)
call   144 returned 100%
branch 145 taken 100% (fallthrough)
branch 146 taken 0% (throw)
call   147 returned 100%
branch 148 taken 100% (fallthrough)
branch 149 taken 0% (throw)
call   150 returned 100%
branch 151 taken 100% (fallthrough)
branch 152 taken 0% (throw)
call   153 returned 100%
branch 154 taken 100% (fallthrough)
branch 155 taken 0% (throw)
call   156 returned 100%
branch 157 taken 100% (fallthrough)
branch 158 taken 0% (throw)
call   159 returned 100%
branch 160 taken 100% (fallthrough)
branch 161 taken 0% (throw)
call   162 returned 100%
branch 163 taken 100% (fallthrough)
branch 164 taken 0% (throw)
call   165 returned 100%
branch 166 taken 100% (fallthrough)
branch 167 taken 0% (throw)
call   168 returned 100%
branch 169 taken 100% (fallthrough)
branch 170 taken 0% (throw)
call   171 returned 100%
branch 172 taken 100% (fallthrough)
branch 173 taken 0% (throw)
call   174 returned 100%
branch 175 taken 100% (fallthrough)
branch 176 taken 0% (throw)
call   177 returned 100%
branch 178 taken 100% (fallthrough)
branch 179 taken 0% (throw)
call   180 returned 100%
branch 181 taken 100% (fallthrough)
branch 182 taken 0% (throw)
call   183 returned 100%
branch 184 taken 100% (fallthrough)
branch 185 taken 0% (throw)
call   186 returned 100%
branch 187 taken 100% (fallthrough)
branch 188 taken 0% (throw)
call   189 returned 100%
branch 190 taken 100% (fallthrough)
branch 191 taken 0% (throw)
call   192 returned 100%
branch 193 taken 100% (fallthrough)
branch 194 taken 0% (throw)
call   195 returned 100%
branch 196 taken 100% (fallthrough)
branch 197 taken 0% (throw)
call   198 returned 100%
branch 199 taken 100% (fallthrough)
branch 200 taken 0% (throw)
call   201 returned 100%
branch 202 taken 100% (fallthrough)
branch 203 taken 0% (throw)
call   204 returned 100%
branch 205 taken 100% (fallthrough)
branch 206 taken 0% (throw)
call   207 returned 100%
branch 208 taken 100% (fallthrough)
branch 209 taken 0% (throw)
call   210 returned 100%
branch 211 taken 100% (fallthrough)
branch 212 taken 0% (throw)
call   213 returned 100%
branch 214 taken 100% (fallthrough)
branch 215 taken 0% (throw)
call   216 returned 100%
branch 217 taken 100% (fallthrough)
branch 218 taken 0% (throw)
call   219 returned 100%
branch 220 taken 100% (fallthrough)
branch 221 taken 0% (throw)
call   222 returned 100%
branch 223 taken 100% (fallthrough)
branch 224 taken 0% (throw)
call   225 returned 100%
branch 226 taken 100% (fallthrough)
branch 227 taken 0% (throw)
call   228 returned 100%
branch 229 taken 100% (fallthrough)
branch 230 taken 0% (throw)
call   231 returned 100%
branch 232 taken 100% (fallthrough)
branch 233 taken 0% (throw)
call   234 returned 100%
branch 235 taken 100% (fallthrough)
branch 236 taken 0% (throw)
call   237 returned 100%
branch 238 taken 100% (fallthrough)
branch 239 taken 0% (throw)
call   240 returned 100%
branch 241 taken 100% (fallthrough)
branch 242 taken 0% (throw)
call   243 returned 100%
branch 244 taken 100% (fallthrough)
branch 245 taken 0% (throw)
call   246 returned 100%
branch 247 taken 100% (fallthrough)
branch 248 taken 0% (throw)
call   249 returned 100%
branch 250 taken 100% (fallthrough)
branch 251 taken 0% (throw)
call   252 returned 100%
branch 253 taken 100% (fallthrough)
branch 254 taken 0% (throw)
call   255 returned 100%
branch 256 taken 100% (fallthrough)
branch 257 taken 0% (throw)
call   258 returned 100%
branch 259 taken 100% (fallthrough)
branch 260 taken 0% (throw)
call   261 returned 100%
branch 262 taken 100% (fallthrough)
branch 263 taken 0% (throw)
call   264 returned 100%
branch 265 taken 100% (fallthrough)
branch 266 taken 0% (throw)
call   267 returned 100%
branch 268 taken 100% (fallthrough)
branch 269 taken 0% (throw)
        -:  581:        (std::string(prefix) + (prefix[0] == '\0' ? "" : "/") + case_name + "/"
        -:  582:         + StreamableToString(index)).c_str(),
        -:  583:        GetPrefixUntilComma(test_names).c_str(),
        -:  584:        GetTypeName<Type>().c_str(),
        -:  585:        NULL,  // No value parameter.
        -:  586:        GetTypeId<FixtureClass>(),
        -:  587:        TestClass::SetUpTestCase,
        -:  588:        TestClass::TearDownTestCase,
      180:  589:        new TestFactoryImpl<TestClass>);
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 returned 100%
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
branch 12 taken 100% (fallthrough)
branch 13 taken 0%
call   14 returned 100%
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 returned 100%
branch 19 taken 100% (fallthrough)
branch 20 taken 0% (throw)
call   21 returned 100%
branch 22 taken 100% (fallthrough)
branch 23 taken 0% (throw)
call   24 returned 100%
branch 25 taken 100% (fallthrough)
branch 26 taken 0% (throw)
call   27 returned 100%
branch 28 taken 100% (fallthrough)
branch 29 taken 0% (throw)
call   30 returned 100%
call   31 returned 100%
call   32 returned 100%
call   33 returned 100%
call   34 returned 100%
call   35 returned 100%
call   36 returned 100%
call   37 returned 100%
call   38 returned 100%
call   39 returned 100%
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 returned 100%
call   50 returned 100%
call   51 returned 100%
call   52 returned 100%
call   53 returned 100%
call   54 returned 100%
branch 55 taken 100% (fallthrough)
branch 56 taken 0% (throw)
call   57 returned 100%
call   58 returned 100%
branch 59 taken 100% (fallthrough)
branch 60 taken 0% (throw)
branch 61 taken 100% (fallthrough)
branch 62 taken 0%
call   63 returned 100%
call   64 returned 100%
branch 65 taken 100% (fallthrough)
branch 66 taken 0% (throw)
call   67 returned 100%
branch 68 taken 100% (fallthrough)
branch 69 taken 0% (throw)
call   70 returned 100%
branch 71 taken 100% (fallthrough)
branch 72 taken 0% (throw)
call   73 returned 100%
branch 74 taken 100% (fallthrough)
branch 75 taken 0% (throw)
call   76 returned 100%
branch 77 taken 100% (fallthrough)
branch 78 taken 0% (throw)
call   79 returned 100%
call   80 returned 100%
call   81 returned 100%
call   82 returned 100%
call   83 returned 100%
call   84 returned 100%
call   85 returned 100%
call   86 returned 100%
call   87 returned 100%
call   88 returned 100%
call   89 never executed
call   90 never executed
call   91 never executed
call   92 never executed
call   93 never executed
call   94 never executed
call   95 never executed
call   96 never executed
call   97 never executed
call   98 returned 100%
call   99 returned 100%
call   100 returned 100%
call   101 returned 100%
call   102 returned 100%
call   103 returned 100%
branch 104 taken 100% (fallthrough)
branch 105 taken 0% (throw)
call   106 returned 100%
call   107 returned 100%
branch 108 taken 100% (fallthrough)
branch 109 taken 0% (throw)
branch 110 taken 100% (fallthrough)
branch 111 taken 0%
call   112 returned 100%
call   113 returned 100%
branch 114 taken 100% (fallthrough)
branch 115 taken 0% (throw)
call   116 returned 100%
branch 117 taken 100% (fallthrough)
branch 118 taken 0% (throw)
call   119 returned 100%
branch 120 taken 100% (fallthrough)
branch 121 taken 0% (throw)
call   122 returned 100%
branch 123 taken 100% (fallthrough)
branch 124 taken 0% (throw)
call   125 returned 100%
branch 126 taken 100% (fallthrough)
branch 127 taken 0% (throw)
call   128 returned 100%
call   129 returned 100%
call   130 returned 100%
call   131 returned 100%
call   132 returned 100%
call   133 returned 100%
call   134 returned 100%
call   135 returned 100%
call   136 returned 100%
call   137 returned 100%
call   138 never executed
call   139 never executed
call   140 never executed
call   141 never executed
call   142 never executed
call   143 never executed
call   144 never executed
call   145 never executed
call   146 never executed
call   147 returned 100%
call   148 returned 100%
call   149 returned 100%
call   150 returned 100%
call   151 returned 100%
call   152 returned 100%
branch 153 taken 100% (fallthrough)
branch 154 taken 0% (throw)
call   155 returned 100%
call   156 returned 100%
branch 157 taken 100% (fallthrough)
branch 158 taken 0% (throw)
branch 159 taken 100% (fallthrough)
branch 160 taken 0%
call   161 returned 100%
call   162 returned 100%
branch 163 taken 100% (fallthrough)
branch 164 taken 0% (throw)
call   165 returned 100%
branch 166 taken 100% (fallthrough)
branch 167 taken 0% (throw)
call   168 returned 100%
branch 169 taken 100% (fallthrough)
branch 170 taken 0% (throw)
call   171 returned 100%
branch 172 taken 100% (fallthrough)
branch 173 taken 0% (throw)
call   174 returned 100%
branch 175 taken 100% (fallthrough)
branch 176 taken 0% (throw)
call   177 returned 100%
call   178 returned 100%
call   179 returned 100%
call   180 returned 100%
call   181 returned 100%
call   182 returned 100%
call   183 returned 100%
call   184 returned 100%
call   185 returned 100%
call   186 returned 100%
call   187 never executed
call   188 never executed
call   189 never executed
call   190 never executed
call   191 never executed
call   192 never executed
call   193 never executed
call   194 never executed
call   195 never executed
call   196 returned 100%
call   197 returned 100%
call   198 returned 100%
call   199 returned 100%
call   200 returned 100%
call   201 returned 100%
branch 202 taken 100% (fallthrough)
branch 203 taken 0% (throw)
call   204 returned 100%
call   205 returned 100%
branch 206 taken 100% (fallthrough)
branch 207 taken 0% (throw)
branch 208 taken 100% (fallthrough)
branch 209 taken 0%
call   210 returned 100%
call   211 returned 100%
branch 212 taken 100% (fallthrough)
branch 213 taken 0% (throw)
call   214 returned 100%
branch 215 taken 100% (fallthrough)
branch 216 taken 0% (throw)
call   217 returned 100%
branch 218 taken 100% (fallthrough)
branch 219 taken 0% (throw)
call   220 returned 100%
branch 221 taken 100% (fallthrough)
branch 222 taken 0% (throw)
call   223 returned 100%
branch 224 taken 100% (fallthrough)
branch 225 taken 0% (throw)
call   226 returned 100%
call   227 returned 100%
call   228 returned 100%
call   229 returned 100%
call   230 returned 100%
call   231 returned 100%
call   232 returned 100%
call   233 returned 100%
call   234 returned 100%
call   235 returned 100%
call   236 never executed
call   237 never executed
call   238 never executed
call   239 never executed
call   240 never executed
call   241 never executed
call   242 never executed
call   243 never executed
call   244 never executed
call   245 returned 100%
call   246 returned 100%
call   247 returned 100%
call   248 returned 100%
call   249 returned 100%
call   250 returned 100%
branch 251 taken 100% (fallthrough)
branch 252 taken 0% (throw)
call   253 returned 100%
call   254 returned 100%
branch 255 taken 100% (fallthrough)
branch 256 taken 0% (throw)
branch 257 taken 100% (fallthrough)
branch 258 taken 0%
call   259 returned 100%
call   260 returned 100%
branch 261 taken 100% (fallthrough)
branch 262 taken 0% (throw)
call   263 returned 100%
branch 264 taken 100% (fallthrough)
branch 265 taken 0% (throw)
call   266 returned 100%
branch 267 taken 100% (fallthrough)
branch 268 taken 0% (throw)
call   269 returned 100%
branch 270 taken 100% (fallthrough)
branch 271 taken 0% (throw)
call   272 returned 100%
branch 273 taken 100% (fallthrough)
branch 274 taken 0% (throw)
call   275 returned 100%
call   276 returned 100%
call   277 returned 100%
call   278 returned 100%
call   279 returned 100%
call   280 returned 100%
call   281 returned 100%
call   282 returned 100%
call   283 returned 100%
call   284 returned 100%
call   285 never executed
call   286 never executed
call   287 never executed
call   288 never executed
call   289 never executed
call   290 never executed
call   291 never executed
call   292 never executed
call   293 never executed
call   294 returned 100%
call   295 returned 100%
call   296 returned 100%
call   297 returned 100%
call   298 returned 100%
call   299 returned 100%
branch 300 taken 100% (fallthrough)
branch 301 taken 0% (throw)
call   302 returned 100%
call   303 returned 100%
branch 304 taken 100% (fallthrough)
branch 305 taken 0% (throw)
branch 306 taken 100% (fallthrough)
branch 307 taken 0%
call   308 returned 100%
call   309 returned 100%
branch 310 taken 100% (fallthrough)
branch 311 taken 0% (throw)
call   312 returned 100%
branch 313 taken 100% (fallthrough)
branch 314 taken 0% (throw)
call   315 returned 100%
branch 316 taken 100% (fallthrough)
branch 317 taken 0% (throw)
call   318 returned 100%
branch 319 taken 100% (fallthrough)
branch 320 taken 0% (throw)
call   321 returned 100%
branch 322 taken 100% (fallthrough)
branch 323 taken 0% (throw)
call   324 returned 100%
call   325 returned 100%
call   326 returned 100%
call   327 returned 100%
call   328 returned 100%
call   329 returned 100%
call   330 returned 100%
call   331 returned 100%
call   332 returned 100%
call   333 returned 100%
call   334 never executed
call   335 never executed
call   336 never executed
call   337 never executed
call   338 never executed
call   339 never executed
call   340 never executed
call   341 never executed
call   342 never executed
call   343 returned 100%
call   344 returned 100%
call   345 returned 100%
call   346 returned 100%
call   347 returned 100%
call   348 returned 100%
branch 349 taken 100% (fallthrough)
branch 350 taken 0% (throw)
call   351 returned 100%
call   352 returned 100%
branch 353 taken 100% (fallthrough)
branch 354 taken 0% (throw)
branch 355 taken 100% (fallthrough)
branch 356 taken 0%
call   357 returned 100%
call   358 returned 100%
branch 359 taken 100% (fallthrough)
branch 360 taken 0% (throw)
call   361 returned 100%
branch 362 taken 100% (fallthrough)
branch 363 taken 0% (throw)
call   364 returned 100%
branch 365 taken 100% (fallthrough)
branch 366 taken 0% (throw)
call   367 returned 100%
branch 368 taken 100% (fallthrough)
branch 369 taken 0% (throw)
call   370 returned 100%
branch 371 taken 100% (fallthrough)
branch 372 taken 0% (throw)
call   373 returned 100%
call   374 returned 100%
call   375 returned 100%
call   376 returned 100%
call   377 returned 100%
call   378 returned 100%
call   379 returned 100%
call   380 returned 100%
call   381 returned 100%
call   382 returned 100%
call   383 never executed
call   384 never executed
call   385 never executed
call   386 never executed
call   387 never executed
call   388 never executed
call   389 never executed
call   390 never executed
call   391 never executed
call   392 returned 100%
call   393 returned 100%
call   394 returned 100%
call   395 returned 100%
call   396 returned 100%
call   397 returned 100%
branch 398 taken 100% (fallthrough)
branch 399 taken 0% (throw)
call   400 returned 100%
call   401 returned 100%
branch 402 taken 100% (fallthrough)
branch 403 taken 0% (throw)
branch 404 taken 100% (fallthrough)
branch 405 taken 0%
call   406 returned 100%
call   407 returned 100%
branch 408 taken 100% (fallthrough)
branch 409 taken 0% (throw)
call   410 returned 100%
branch 411 taken 100% (fallthrough)
branch 412 taken 0% (throw)
call   413 returned 100%
branch 414 taken 100% (fallthrough)
branch 415 taken 0% (throw)
call   416 returned 100%
branch 417 taken 100% (fallthrough)
branch 418 taken 0% (throw)
call   419 returned 100%
branch 420 taken 100% (fallthrough)
branch 421 taken 0% (throw)
call   422 returned 100%
call   423 returned 100%
call   424 returned 100%
call   425 returned 100%
call   426 returned 100%
call   427 returned 100%
call   428 returned 100%
call   429 returned 100%
call   430 returned 100%
call   431 returned 100%
call   432 never executed
call   433 never executed
call   434 never executed
call   435 never executed
call   436 never executed
call   437 never executed
call   438 never executed
call   439 never executed
call   440 never executed
call   441 returned 100%
call   442 returned 100%
call   443 returned 100%
call   444 returned 100%
call   445 returned 100%
call   446 returned 100%
branch 447 taken 100% (fallthrough)
branch 448 taken 0% (throw)
call   449 returned 100%
call   450 returned 100%
branch 451 taken 100% (fallthrough)
branch 452 taken 0% (throw)
branch 453 taken 100% (fallthrough)
branch 454 taken 0%
call   455 returned 100%
call   456 returned 100%
branch 457 taken 100% (fallthrough)
branch 458 taken 0% (throw)
call   459 returned 100%
branch 460 taken 100% (fallthrough)
branch 461 taken 0% (throw)
call   462 returned 100%
branch 463 taken 100% (fallthrough)
branch 464 taken 0% (throw)
call   465 returned 100%
branch 466 taken 100% (fallthrough)
branch 467 taken 0% (throw)
call   468 returned 100%
branch 469 taken 100% (fallthrough)
branch 470 taken 0% (throw)
call   471 returned 100%
call   472 returned 100%
call   473 returned 100%
call   474 returned 100%
call   475 returned 100%
call   476 returned 100%
call   477 returned 100%
call   478 returned 100%
call   479 returned 100%
call   480 returned 100%
call   481 never executed
call   482 never executed
call   483 never executed
call   484 never executed
call   485 never executed
call   486 never executed
call   487 never executed
call   488 never executed
call   489 never executed
call   490 returned 100%
call   491 returned 100%
call   492 returned 100%
call   493 returned 100%
call   494 returned 100%
call   495 returned 100%
branch 496 taken 100% (fallthrough)
branch 497 taken 0% (throw)
call   498 returned 100%
call   499 returned 100%
branch 500 taken 100% (fallthrough)
branch 501 taken 0% (throw)
branch 502 taken 100% (fallthrough)
branch 503 taken 0%
call   504 returned 100%
call   505 returned 100%
branch 506 taken 100% (fallthrough)
branch 507 taken 0% (throw)
call   508 returned 100%
branch 509 taken 100% (fallthrough)
branch 510 taken 0% (throw)
call   511 returned 100%
branch 512 taken 100% (fallthrough)
branch 513 taken 0% (throw)
call   514 returned 100%
branch 515 taken 100% (fallthrough)
branch 516 taken 0% (throw)
call   517 returned 100%
branch 518 taken 100% (fallthrough)
branch 519 taken 0% (throw)
call   520 returned 100%
call   521 returned 100%
call   522 returned 100%
call   523 returned 100%
call   524 returned 100%
call   525 returned 100%
call   526 returned 100%
call   527 returned 100%
call   528 returned 100%
call   529 returned 100%
call   530 never executed
call   531 never executed
call   532 never executed
call   533 never executed
call   534 never executed
call   535 never executed
call   536 never executed
call   537 never executed
call   538 never executed
call   539 returned 100%
call   540 returned 100%
call   541 returned 100%
call   542 returned 100%
call   543 returned 100%
call   544 returned 100%
branch 545 taken 100% (fallthrough)
branch 546 taken 0% (throw)
call   547 returned 100%
call   548 returned 100%
branch 549 taken 100% (fallthrough)
branch 550 taken 0% (throw)
branch 551 taken 100% (fallthrough)
branch 552 taken 0%
call   553 returned 100%
call   554 returned 100%
branch 555 taken 100% (fallthrough)
branch 556 taken 0% (throw)
call   557 returned 100%
branch 558 taken 100% (fallthrough)
branch 559 taken 0% (throw)
call   560 returned 100%
branch 561 taken 100% (fallthrough)
branch 562 taken 0% (throw)
call   563 returned 100%
branch 564 taken 100% (fallthrough)
branch 565 taken 0% (throw)
call   566 returned 100%
branch 567 taken 100% (fallthrough)
branch 568 taken 0% (throw)
call   569 returned 100%
call   570 returned 100%
call   571 returned 100%
call   572 returned 100%
call   573 returned 100%
call   574 returned 100%
call   575 returned 100%
call   576 returned 100%
call   577 returned 100%
call   578 returned 100%
call   579 never executed
call   580 never executed
call   581 never executed
call   582 never executed
call   583 never executed
call   584 never executed
call   585 never executed
call   586 never executed
call   587 never executed
call   588 returned 100%
call   589 returned 100%
call   590 returned 100%
call   591 returned 100%
call   592 returned 100%
call   593 returned 100%
branch 594 taken 100% (fallthrough)
branch 595 taken 0% (throw)
call   596 returned 100%
call   597 returned 100%
branch 598 taken 100% (fallthrough)
branch 599 taken 0% (throw)
branch 600 taken 100% (fallthrough)
branch 601 taken 0%
call   602 returned 100%
call   603 returned 100%
branch 604 taken 100% (fallthrough)
branch 605 taken 0% (throw)
call   606 returned 100%
branch 607 taken 100% (fallthrough)
branch 608 taken 0% (throw)
call   609 returned 100%
branch 610 taken 100% (fallthrough)
branch 611 taken 0% (throw)
call   612 returned 100%
branch 613 taken 100% (fallthrough)
branch 614 taken 0% (throw)
call   615 returned 100%
branch 616 taken 100% (fallthrough)
branch 617 taken 0% (throw)
call   618 returned 100%
call   619 returned 100%
call   620 returned 100%
call   621 returned 100%
call   622 returned 100%
call   623 returned 100%
call   624 returned 100%
call   625 returned 100%
call   626 returned 100%
call   627 returned 100%
call   628 never executed
call   629 never executed
call   630 never executed
call   631 never executed
call   632 never executed
call   633 never executed
call   634 never executed
call   635 never executed
call   636 never executed
call   637 returned 100%
call   638 returned 100%
call   639 returned 100%
call   640 returned 100%
call   641 returned 100%
call   642 returned 100%
branch 643 taken 100% (fallthrough)
branch 644 taken 0% (throw)
call   645 returned 100%
call   646 returned 100%
branch 647 taken 100% (fallthrough)
branch 648 taken 0% (throw)
branch 649 taken 100% (fallthrough)
branch 650 taken 0%
call   651 returned 100%
call   652 returned 100%
branch 653 taken 100% (fallthrough)
branch 654 taken 0% (throw)
call   655 returned 100%
branch 656 taken 100% (fallthrough)
branch 657 taken 0% (throw)
call   658 returned 100%
branch 659 taken 100% (fallthrough)
branch 660 taken 0% (throw)
call   661 returned 100%
branch 662 taken 100% (fallthrough)
branch 663 taken 0% (throw)
call   664 returned 100%
branch 665 taken 100% (fallthrough)
branch 666 taken 0% (throw)
call   667 returned 100%
call   668 returned 100%
call   669 returned 100%
call   670 returned 100%
call   671 returned 100%
call   672 returned 100%
call   673 returned 100%
call   674 returned 100%
call   675 returned 100%
call   676 returned 100%
call   677 never executed
call   678 never executed
call   679 never executed
call   680 never executed
call   681 never executed
call   682 never executed
call   683 never executed
call   684 never executed
call   685 never executed
call   686 returned 100%
call   687 returned 100%
call   688 returned 100%
call   689 returned 100%
call   690 returned 100%
call   691 returned 100%
branch 692 taken 100% (fallthrough)
branch 693 taken 0% (throw)
call   694 returned 100%
call   695 returned 100%
branch 696 taken 100% (fallthrough)
branch 697 taken 0% (throw)
branch 698 taken 100% (fallthrough)
branch 699 taken 0%
call   700 returned 100%
call   701 returned 100%
branch 702 taken 100% (fallthrough)
branch 703 taken 0% (throw)
call   704 returned 100%
branch 705 taken 100% (fallthrough)
branch 706 taken 0% (throw)
call   707 returned 100%
branch 708 taken 100% (fallthrough)
branch 709 taken 0% (throw)
call   710 returned 100%
branch 711 taken 100% (fallthrough)
branch 712 taken 0% (throw)
call   713 returned 100%
branch 714 taken 100% (fallthrough)
branch 715 taken 0% (throw)
call   716 returned 100%
call   717 returned 100%
call   718 returned 100%
call   719 returned 100%
call   720 returned 100%
call   721 returned 100%
call   722 returned 100%
call   723 returned 100%
call   724 returned 100%
call   725 returned 100%
call   726 never executed
call   727 never executed
call   728 never executed
call   729 never executed
call   730 never executed
call   731 never executed
call   732 never executed
call   733 never executed
call   734 never executed
call   735 returned 100%
call   736 returned 100%
call   737 returned 100%
call   738 returned 100%
call   739 returned 100%
call   740 returned 100%
branch 741 taken 100% (fallthrough)
branch 742 taken 0% (throw)
call   743 returned 100%
call   744 returned 100%
branch 745 taken 100% (fallthrough)
branch 746 taken 0% (throw)
branch 747 taken 100% (fallthrough)
branch 748 taken 0%
call   749 returned 100%
call   750 returned 100%
branch 751 taken 100% (fallthrough)
branch 752 taken 0% (throw)
call   753 returned 100%
branch 754 taken 100% (fallthrough)
branch 755 taken 0% (throw)
call   756 returned 100%
branch 757 taken 100% (fallthrough)
branch 758 taken 0% (throw)
call   759 returned 100%
branch 760 taken 100% (fallthrough)
branch 761 taken 0% (throw)
call   762 returned 100%
branch 763 taken 100% (fallthrough)
branch 764 taken 0% (throw)
call   765 returned 100%
call   766 returned 100%
call   767 returned 100%
call   768 returned 100%
call   769 returned 100%
call   770 returned 100%
call   771 returned 100%
call   772 returned 100%
call   773 returned 100%
call   774 returned 100%
call   775 never executed
call   776 never executed
call   777 never executed
call   778 never executed
call   779 never executed
call   780 never executed
call   781 never executed
call   782 never executed
call   783 never executed
call   784 returned 100%
call   785 returned 100%
call   786 returned 100%
call   787 returned 100%
call   788 returned 100%
call   789 returned 100%
branch 790 taken 100% (fallthrough)
branch 791 taken 0% (throw)
call   792 returned 100%
call   793 returned 100%
branch 794 taken 100% (fallthrough)
branch 795 taken 0% (throw)
branch 796 taken 100% (fallthrough)
branch 797 taken 0%
call   798 returned 100%
call   799 returned 100%
branch 800 taken 100% (fallthrough)
branch 801 taken 0% (throw)
call   802 returned 100%
branch 803 taken 100% (fallthrough)
branch 804 taken 0% (throw)
call   805 returned 100%
branch 806 taken 100% (fallthrough)
branch 807 taken 0% (throw)
call   808 returned 100%
branch 809 taken 100% (fallthrough)
branch 810 taken 0% (throw)
call   811 returned 100%
branch 812 taken 100% (fallthrough)
branch 813 taken 0% (throw)
call   814 returned 100%
call   815 returned 100%
call   816 returned 100%
call   817 returned 100%
call   818 returned 100%
call   819 returned 100%
call   820 returned 100%
call   821 returned 100%
call   822 returned 100%
call   823 returned 100%
call   824 never executed
call   825 never executed
call   826 never executed
call   827 never executed
call   828 never executed
call   829 never executed
call   830 never executed
call   831 never executed
call   832 never executed
call   833 returned 100%
call   834 returned 100%
call   835 returned 100%
call   836 returned 100%
call   837 returned 100%
call   838 returned 100%
branch 839 taken 100% (fallthrough)
branch 840 taken 0% (throw)
call   841 returned 100%
call   842 returned 100%
branch 843 taken 100% (fallthrough)
branch 844 taken 0% (throw)
branch 845 taken 100% (fallthrough)
branch 846 taken 0%
call   847 returned 100%
call   848 returned 100%
branch 849 taken 100% (fallthrough)
branch 850 taken 0% (throw)
call   851 returned 100%
branch 852 taken 100% (fallthrough)
branch 853 taken 0% (throw)
call   854 returned 100%
branch 855 taken 100% (fallthrough)
branch 856 taken 0% (throw)
call   857 returned 100%
branch 858 taken 100% (fallthrough)
branch 859 taken 0% (throw)
call   860 returned 100%
branch 861 taken 100% (fallthrough)
branch 862 taken 0% (throw)
call   863 returned 100%
call   864 returned 100%
call   865 returned 100%
call   866 returned 100%
call   867 returned 100%
call   868 returned 100%
call   869 returned 100%
call   870 returned 100%
call   871 returned 100%
call   872 returned 100%
call   873 never executed
call   874 never executed
call   875 never executed
call   876 never executed
call   877 never executed
call   878 never executed
call   879 never executed
call   880 never executed
call   881 never executed
call   882 returned 100%
call   883 returned 100%
call   884 returned 100%
call   885 returned 100%
call   886 returned 100%
call   887 returned 100%
branch 888 taken 100% (fallthrough)
branch 889 taken 0% (throw)
call   890 returned 100%
call   891 returned 100%
branch 892 taken 100% (fallthrough)
branch 893 taken 0% (throw)
branch 894 taken 100% (fallthrough)
branch 895 taken 0%
call   896 returned 100%
call   897 returned 100%
branch 898 taken 100% (fallthrough)
branch 899 taken 0% (throw)
call   900 returned 100%
branch 901 taken 100% (fallthrough)
branch 902 taken 0% (throw)
call   903 returned 100%
branch 904 taken 100% (fallthrough)
branch 905 taken 0% (throw)
call   906 returned 100%
branch 907 taken 100% (fallthrough)
branch 908 taken 0% (throw)
call   909 returned 100%
branch 910 taken 100% (fallthrough)
branch 911 taken 0% (throw)
call   912 returned 100%
call   913 returned 100%
call   914 returned 100%
call   915 returned 100%
call   916 returned 100%
call   917 returned 100%
call   918 returned 100%
call   919 returned 100%
call   920 returned 100%
call   921 returned 100%
call   922 never executed
call   923 never executed
call   924 never executed
call   925 never executed
call   926 never executed
call   927 never executed
call   928 never executed
call   929 never executed
call   930 never executed
call   931 returned 100%
call   932 returned 100%
call   933 returned 100%
call   934 returned 100%
call   935 returned 100%
call   936 returned 100%
branch 937 taken 100% (fallthrough)
branch 938 taken 0% (throw)
call   939 returned 100%
call   940 returned 100%
branch 941 taken 100% (fallthrough)
branch 942 taken 0% (throw)
branch 943 taken 100% (fallthrough)
branch 944 taken 0%
call   945 returned 100%
call   946 returned 100%
branch 947 taken 100% (fallthrough)
branch 948 taken 0% (throw)
call   949 returned 100%
branch 950 taken 100% (fallthrough)
branch 951 taken 0% (throw)
call   952 returned 100%
branch 953 taken 100% (fallthrough)
branch 954 taken 0% (throw)
call   955 returned 100%
branch 956 taken 100% (fallthrough)
branch 957 taken 0% (throw)
call   958 returned 100%
branch 959 taken 100% (fallthrough)
branch 960 taken 0% (throw)
call   961 returned 100%
call   962 returned 100%
call   963 returned 100%
call   964 returned 100%
call   965 returned 100%
call   966 returned 100%
call   967 returned 100%
call   968 returned 100%
call   969 returned 100%
call   970 returned 100%
call   971 never executed
call   972 never executed
call   973 never executed
call   974 never executed
call   975 never executed
call   976 never executed
call   977 never executed
call   978 never executed
call   979 never executed
call   980 returned 100%
call   981 returned 100%
call   982 returned 100%
call   983 returned 100%
call   984 returned 100%
call   985 returned 100%
branch 986 taken 100% (fallthrough)
branch 987 taken 0% (throw)
call   988 returned 100%
call   989 returned 100%
branch 990 taken 100% (fallthrough)
branch 991 taken 0% (throw)
branch 992 taken 100% (fallthrough)
branch 993 taken 0%
call   994 returned 100%
call   995 returned 100%
branch 996 taken 100% (fallthrough)
branch 997 taken 0% (throw)
call   998 returned 100%
branch 999 taken 100% (fallthrough)
branch 1000 taken 0% (throw)
call   1001 returned 100%
branch 1002 taken 100% (fallthrough)
branch 1003 taken 0% (throw)
call   1004 returned 100%
branch 1005 taken 100% (fallthrough)
branch 1006 taken 0% (throw)
call   1007 returned 100%
branch 1008 taken 100% (fallthrough)
branch 1009 taken 0% (throw)
call   1010 returned 100%
call   1011 returned 100%
call   1012 returned 100%
call   1013 returned 100%
call   1014 returned 100%
call   1015 returned 100%
call   1016 returned 100%
call   1017 returned 100%
call   1018 returned 100%
call   1019 returned 100%
call   1020 never executed
call   1021 never executed
call   1022 never executed
call   1023 never executed
call   1024 never executed
call   1025 never executed
call   1026 never executed
call   1027 never executed
call   1028 never executed
call   1029 returned 100%
call   1030 returned 100%
call   1031 returned 100%
call   1032 returned 100%
call   1033 returned 100%
call   1034 returned 100%
branch 1035 taken 100% (fallthrough)
branch 1036 taken 0% (throw)
call   1037 returned 100%
call   1038 returned 100%
branch 1039 taken 100% (fallthrough)
branch 1040 taken 0% (throw)
branch 1041 taken 100% (fallthrough)
branch 1042 taken 0%
call   1043 returned 100%
call   1044 returned 100%
branch 1045 taken 100% (fallthrough)
branch 1046 taken 0% (throw)
call   1047 returned 100%
branch 1048 taken 100% (fallthrough)
branch 1049 taken 0% (throw)
call   1050 returned 100%
branch 1051 taken 100% (fallthrough)
branch 1052 taken 0% (throw)
call   1053 returned 100%
branch 1054 taken 100% (fallthrough)
branch 1055 taken 0% (throw)
call   1056 returned 100%
branch 1057 taken 100% (fallthrough)
branch 1058 taken 0% (throw)
call   1059 returned 100%
call   1060 returned 100%
call   1061 returned 100%
call   1062 returned 100%
call   1063 returned 100%
call   1064 returned 100%
call   1065 returned 100%
call   1066 returned 100%
call   1067 returned 100%
call   1068 returned 100%
call   1069 never executed
call   1070 never executed
call   1071 never executed
call   1072 never executed
call   1073 never executed
call   1074 never executed
call   1075 never executed
call   1076 never executed
call   1077 never executed
call   1078 returned 100%
call   1079 returned 100%
call   1080 returned 100%
call   1081 returned 100%
call   1082 returned 100%
call   1083 returned 100%
branch 1084 taken 100% (fallthrough)
branch 1085 taken 0% (throw)
call   1086 returned 100%
call   1087 returned 100%
branch 1088 taken 100% (fallthrough)
branch 1089 taken 0% (throw)
branch 1090 taken 100% (fallthrough)
branch 1091 taken 0%
call   1092 returned 100%
call   1093 returned 100%
branch 1094 taken 100% (fallthrough)
branch 1095 taken 0% (throw)
call   1096 returned 100%
branch 1097 taken 100% (fallthrough)
branch 1098 taken 0% (throw)
call   1099 returned 100%
branch 1100 taken 100% (fallthrough)
branch 1101 taken 0% (throw)
call   1102 returned 100%
branch 1103 taken 100% (fallthrough)
branch 1104 taken 0% (throw)
call   1105 returned 100%
branch 1106 taken 100% (fallthrough)
branch 1107 taken 0% (throw)
call   1108 returned 100%
call   1109 returned 100%
call   1110 returned 100%
call   1111 returned 100%
call   1112 returned 100%
call   1113 returned 100%
call   1114 returned 100%
call   1115 returned 100%
call   1116 returned 100%
call   1117 returned 100%
call   1118 never executed
call   1119 never executed
call   1120 never executed
call   1121 never executed
call   1122 never executed
call   1123 never executed
call   1124 never executed
call   1125 never executed
call   1126 never executed
call   1127 returned 100%
call   1128 returned 100%
call   1129 returned 100%
call   1130 returned 100%
call   1131 returned 100%
call   1132 returned 100%
branch 1133 taken 100% (fallthrough)
branch 1134 taken 0% (throw)
call   1135 returned 100%
call   1136 returned 100%
branch 1137 taken 100% (fallthrough)
branch 1138 taken 0% (throw)
branch 1139 taken 100% (fallthrough)
branch 1140 taken 0%
call   1141 returned 100%
call   1142 returned 100%
branch 1143 taken 100% (fallthrough)
branch 1144 taken 0% (throw)
call   1145 returned 100%
branch 1146 taken 100% (fallthrough)
branch 1147 taken 0% (throw)
call   1148 returned 100%
branch 1149 taken 100% (fallthrough)
branch 1150 taken 0% (throw)
call   1151 returned 100%
branch 1152 taken 100% (fallthrough)
branch 1153 taken 0% (throw)
call   1154 returned 100%
branch 1155 taken 100% (fallthrough)
branch 1156 taken 0% (throw)
call   1157 returned 100%
call   1158 returned 100%
call   1159 returned 100%
call   1160 returned 100%
call   1161 returned 100%
call   1162 returned 100%
call   1163 returned 100%
call   1164 returned 100%
call   1165 returned 100%
call   1166 returned 100%
call   1167 never executed
call   1168 never executed
call   1169 never executed
call   1170 never executed
call   1171 never executed
call   1172 never executed
call   1173 never executed
call   1174 never executed
call   1175 never executed
call   1176 returned 100%
call   1177 returned 100%
call   1178 returned 100%
call   1179 returned 100%
call   1180 returned 100%
call   1181 returned 100%
branch 1182 taken 100% (fallthrough)
branch 1183 taken 0% (throw)
call   1184 returned 100%
call   1185 returned 100%
branch 1186 taken 100% (fallthrough)
branch 1187 taken 0% (throw)
branch 1188 taken 100% (fallthrough)
branch 1189 taken 0%
call   1190 returned 100%
call   1191 returned 100%
branch 1192 taken 100% (fallthrough)
branch 1193 taken 0% (throw)
call   1194 returned 100%
branch 1195 taken 100% (fallthrough)
branch 1196 taken 0% (throw)
call   1197 returned 100%
branch 1198 taken 100% (fallthrough)
branch 1199 taken 0% (throw)
call   1200 returned 100%
branch 1201 taken 100% (fallthrough)
branch 1202 taken 0% (throw)
call   1203 returned 100%
branch 1204 taken 100% (fallthrough)
branch 1205 taken 0% (throw)
call   1206 returned 100%
call   1207 returned 100%
call   1208 returned 100%
call   1209 returned 100%
call   1210 returned 100%
call   1211 returned 100%
call   1212 returned 100%
call   1213 returned 100%
call   1214 returned 100%
call   1215 returned 100%
call   1216 never executed
call   1217 never executed
call   1218 never executed
call   1219 never executed
call   1220 never executed
call   1221 never executed
call   1222 never executed
call   1223 never executed
call   1224 never executed
call   1225 returned 100%
call   1226 returned 100%
call   1227 returned 100%
call   1228 returned 100%
call   1229 returned 100%
call   1230 returned 100%
branch 1231 taken 100% (fallthrough)
branch 1232 taken 0% (throw)
call   1233 returned 100%
call   1234 returned 100%
branch 1235 taken 100% (fallthrough)
branch 1236 taken 0% (throw)
branch 1237 taken 100% (fallthrough)
branch 1238 taken 0%
call   1239 returned 100%
call   1240 returned 100%
branch 1241 taken 100% (fallthrough)
branch 1242 taken 0% (throw)
call   1243 returned 100%
branch 1244 taken 100% (fallthrough)
branch 1245 taken 0% (throw)
call   1246 returned 100%
branch 1247 taken 100% (fallthrough)
branch 1248 taken 0% (throw)
call   1249 returned 100%
branch 1250 taken 100% (fallthrough)
branch 1251 taken 0% (throw)
call   1252 returned 100%
branch 1253 taken 100% (fallthrough)
branch 1254 taken 0% (throw)
call   1255 returned 100%
call   1256 returned 100%
call   1257 returned 100%
call   1258 returned 100%
call   1259 returned 100%
call   1260 returned 100%
call   1261 returned 100%
call   1262 returned 100%
call   1263 returned 100%
call   1264 returned 100%
call   1265 never executed
call   1266 never executed
call   1267 never executed
call   1268 never executed
call   1269 never executed
call   1270 never executed
call   1271 never executed
call   1272 never executed
call   1273 never executed
call   1274 returned 100%
call   1275 returned 100%
call   1276 returned 100%
call   1277 returned 100%
call   1278 returned 100%
call   1279 returned 100%
branch 1280 taken 100% (fallthrough)
branch 1281 taken 0% (throw)
call   1282 returned 100%
call   1283 returned 100%
branch 1284 taken 100% (fallthrough)
branch 1285 taken 0% (throw)
branch 1286 taken 100% (fallthrough)
branch 1287 taken 0%
call   1288 returned 100%
call   1289 returned 100%
branch 1290 taken 100% (fallthrough)
branch 1291 taken 0% (throw)
call   1292 returned 100%
branch 1293 taken 100% (fallthrough)
branch 1294 taken 0% (throw)
call   1295 returned 100%
branch 1296 taken 100% (fallthrough)
branch 1297 taken 0% (throw)
call   1298 returned 100%
branch 1299 taken 100% (fallthrough)
branch 1300 taken 0% (throw)
call   1301 returned 100%
branch 1302 taken 100% (fallthrough)
branch 1303 taken 0% (throw)
call   1304 returned 100%
call   1305 returned 100%
call   1306 returned 100%
call   1307 returned 100%
call   1308 returned 100%
call   1309 returned 100%
call   1310 returned 100%
call   1311 returned 100%
call   1312 returned 100%
call   1313 returned 100%
call   1314 never executed
call   1315 never executed
call   1316 never executed
call   1317 never executed
call   1318 never executed
call   1319 never executed
call   1320 never executed
call   1321 never executed
call   1322 never executed
call   1323 returned 100%
call   1324 returned 100%
call   1325 returned 100%
call   1326 returned 100%
call   1327 returned 100%
call   1328 returned 100%
branch 1329 taken 100% (fallthrough)
branch 1330 taken 0% (throw)
call   1331 returned 100%
call   1332 returned 100%
branch 1333 taken 100% (fallthrough)
branch 1334 taken 0% (throw)
branch 1335 taken 100% (fallthrough)
branch 1336 taken 0%
call   1337 returned 100%
call   1338 returned 100%
branch 1339 taken 100% (fallthrough)
branch 1340 taken 0% (throw)
call   1341 returned 100%
branch 1342 taken 100% (fallthrough)
branch 1343 taken 0% (throw)
call   1344 returned 100%
branch 1345 taken 100% (fallthrough)
branch 1346 taken 0% (throw)
call   1347 returned 100%
branch 1348 taken 100% (fallthrough)
branch 1349 taken 0% (throw)
call   1350 returned 100%
branch 1351 taken 100% (fallthrough)
branch 1352 taken 0% (throw)
call   1353 returned 100%
call   1354 returned 100%
call   1355 returned 100%
call   1356 returned 100%
call   1357 returned 100%
call   1358 returned 100%
call   1359 returned 100%
call   1360 returned 100%
call   1361 returned 100%
call   1362 returned 100%
call   1363 never executed
call   1364 never executed
call   1365 never executed
call   1366 never executed
call   1367 never executed
call   1368 never executed
call   1369 never executed
call   1370 never executed
call   1371 never executed
call   1372 returned 100%
call   1373 returned 100%
call   1374 returned 100%
call   1375 returned 100%
call   1376 returned 100%
call   1377 returned 100%
branch 1378 taken 100% (fallthrough)
branch 1379 taken 0% (throw)
call   1380 returned 100%
call   1381 returned 100%
branch 1382 taken 100% (fallthrough)
branch 1383 taken 0% (throw)
branch 1384 taken 100% (fallthrough)
branch 1385 taken 0%
call   1386 returned 100%
call   1387 returned 100%
branch 1388 taken 100% (fallthrough)
branch 1389 taken 0% (throw)
call   1390 returned 100%
branch 1391 taken 100% (fallthrough)
branch 1392 taken 0% (throw)
call   1393 returned 100%
branch 1394 taken 100% (fallthrough)
branch 1395 taken 0% (throw)
call   1396 returned 100%
branch 1397 taken 100% (fallthrough)
branch 1398 taken 0% (throw)
call   1399 returned 100%
branch 1400 taken 100% (fallthrough)
branch 1401 taken 0% (throw)
call   1402 returned 100%
call   1403 returned 100%
call   1404 returned 100%
call   1405 returned 100%
call   1406 returned 100%
call   1407 returned 100%
call   1408 returned 100%
call   1409 returned 100%
call   1410 returned 100%
call   1411 returned 100%
call   1412 never executed
call   1413 never executed
call   1414 never executed
call   1415 never executed
call   1416 never executed
call   1417 never executed
call   1418 never executed
call   1419 never executed
call   1420 never executed
call   1421 returned 100%
call   1422 returned 100%
call   1423 returned 100%
call   1424 returned 100%
call   1425 returned 100%
call   1426 returned 100%
branch 1427 taken 100% (fallthrough)
branch 1428 taken 0% (throw)
call   1429 returned 100%
call   1430 returned 100%
branch 1431 taken 100% (fallthrough)
branch 1432 taken 0% (throw)
branch 1433 taken 100% (fallthrough)
branch 1434 taken 0%
call   1435 returned 100%
call   1436 returned 100%
branch 1437 taken 100% (fallthrough)
branch 1438 taken 0% (throw)
call   1439 returned 100%
branch 1440 taken 100% (fallthrough)
branch 1441 taken 0% (throw)
call   1442 returned 100%
branch 1443 taken 100% (fallthrough)
branch 1444 taken 0% (throw)
call   1445 returned 100%
branch 1446 taken 100% (fallthrough)
branch 1447 taken 0% (throw)
call   1448 returned 100%
branch 1449 taken 100% (fallthrough)
branch 1450 taken 0% (throw)
call   1451 returned 100%
call   1452 returned 100%
call   1453 returned 100%
call   1454 returned 100%
call   1455 returned 100%
call   1456 returned 100%
call   1457 returned 100%
call   1458 returned 100%
call   1459 returned 100%
call   1460 returned 100%
call   1461 never executed
call   1462 never executed
call   1463 never executed
call   1464 never executed
call   1465 never executed
call   1466 never executed
call   1467 never executed
call   1468 never executed
call   1469 never executed
call   1470 returned 100%
call   1471 returned 100%
call   1472 returned 100%
call   1473 returned 100%
call   1474 returned 100%
call   1475 returned 100%
branch 1476 taken 100% (fallthrough)
branch 1477 taken 0% (throw)
call   1478 returned 100%
call   1479 returned 100%
branch 1480 taken 100% (fallthrough)
branch 1481 taken 0% (throw)
branch 1482 taken 100% (fallthrough)
branch 1483 taken 0%
call   1484 returned 100%
call   1485 returned 100%
branch 1486 taken 100% (fallthrough)
branch 1487 taken 0% (throw)
call   1488 returned 100%
branch 1489 taken 100% (fallthrough)
branch 1490 taken 0% (throw)
call   1491 returned 100%
branch 1492 taken 100% (fallthrough)
branch 1493 taken 0% (throw)
call   1494 returned 100%
branch 1495 taken 100% (fallthrough)
branch 1496 taken 0% (throw)
call   1497 returned 100%
branch 1498 taken 100% (fallthrough)
branch 1499 taken 0% (throw)
call   1500 returned 100%
call   1501 returned 100%
call   1502 returned 100%
call   1503 returned 100%
call   1504 returned 100%
call   1505 returned 100%
call   1506 returned 100%
call   1507 returned 100%
call   1508 returned 100%
call   1509 returned 100%
call   1510 never executed
call   1511 never executed
call   1512 never executed
call   1513 never executed
call   1514 never executed
call   1515 never executed
call   1516 never executed
call   1517 never executed
call   1518 never executed
call   1519 returned 100%
call   1520 returned 100%
call   1521 returned 100%
call   1522 returned 100%
call   1523 returned 100%
call   1524 returned 100%
branch 1525 taken 100% (fallthrough)
branch 1526 taken 0% (throw)
call   1527 returned 100%
call   1528 returned 100%
branch 1529 taken 100% (fallthrough)
branch 1530 taken 0% (throw)
branch 1531 taken 100% (fallthrough)
branch 1532 taken 0%
call   1533 returned 100%
call   1534 returned 100%
branch 1535 taken 100% (fallthrough)
branch 1536 taken 0% (throw)
call   1537 returned 100%
branch 1538 taken 100% (fallthrough)
branch 1539 taken 0% (throw)
call   1540 returned 100%
branch 1541 taken 100% (fallthrough)
branch 1542 taken 0% (throw)
call   1543 returned 100%
branch 1544 taken 100% (fallthrough)
branch 1545 taken 0% (throw)
call   1546 returned 100%
branch 1547 taken 100% (fallthrough)
branch 1548 taken 0% (throw)
call   1549 returned 100%
call   1550 returned 100%
call   1551 returned 100%
call   1552 returned 100%
call   1553 returned 100%
call   1554 returned 100%
call   1555 returned 100%
call   1556 returned 100%
call   1557 returned 100%
call   1558 returned 100%
call   1559 never executed
call   1560 never executed
call   1561 never executed
call   1562 never executed
call   1563 never executed
call   1564 never executed
call   1565 never executed
call   1566 never executed
call   1567 never executed
call   1568 returned 100%
call   1569 returned 100%
call   1570 returned 100%
call   1571 returned 100%
call   1572 returned 100%
call   1573 returned 100%
branch 1574 taken 100% (fallthrough)
branch 1575 taken 0% (throw)
call   1576 returned 100%
call   1577 returned 100%
branch 1578 taken 100% (fallthrough)
branch 1579 taken 0% (throw)
branch 1580 taken 100% (fallthrough)
branch 1581 taken 0%
call   1582 returned 100%
call   1583 returned 100%
branch 1584 taken 100% (fallthrough)
branch 1585 taken 0% (throw)
call   1586 returned 100%
branch 1587 taken 100% (fallthrough)
branch 1588 taken 0% (throw)
call   1589 returned 100%
branch 1590 taken 100% (fallthrough)
branch 1591 taken 0% (throw)
call   1592 returned 100%
branch 1593 taken 100% (fallthrough)
branch 1594 taken 0% (throw)
call   1595 returned 100%
branch 1596 taken 100% (fallthrough)
branch 1597 taken 0% (throw)
call   1598 returned 100%
call   1599 returned 100%
call   1600 returned 100%
call   1601 returned 100%
call   1602 returned 100%
call   1603 returned 100%
call   1604 returned 100%
call   1605 returned 100%
call   1606 returned 100%
call   1607 returned 100%
call   1608 never executed
call   1609 never executed
call   1610 never executed
call   1611 never executed
call   1612 never executed
call   1613 never executed
call   1614 never executed
call   1615 never executed
call   1616 never executed
call   1617 returned 100%
call   1618 returned 100%
call   1619 returned 100%
call   1620 returned 100%
call   1621 returned 100%
call   1622 returned 100%
branch 1623 taken 100% (fallthrough)
branch 1624 taken 0% (throw)
call   1625 returned 100%
call   1626 returned 100%
branch 1627 taken 100% (fallthrough)
branch 1628 taken 0% (throw)
branch 1629 taken 100% (fallthrough)
branch 1630 taken 0%
call   1631 returned 100%
call   1632 returned 100%
branch 1633 taken 100% (fallthrough)
branch 1634 taken 0% (throw)
call   1635 returned 100%
branch 1636 taken 100% (fallthrough)
branch 1637 taken 0% (throw)
call   1638 returned 100%
branch 1639 taken 100% (fallthrough)
branch 1640 taken 0% (throw)
call   1641 returned 100%
branch 1642 taken 100% (fallthrough)
branch 1643 taken 0% (throw)
call   1644 returned 100%
branch 1645 taken 100% (fallthrough)
branch 1646 taken 0% (throw)
call   1647 returned 100%
call   1648 returned 100%
call   1649 returned 100%
call   1650 returned 100%
call   1651 returned 100%
call   1652 returned 100%
call   1653 returned 100%
call   1654 returned 100%
call   1655 returned 100%
call   1656 returned 100%
call   1657 never executed
call   1658 never executed
call   1659 never executed
call   1660 never executed
call   1661 never executed
call   1662 never executed
call   1663 never executed
call   1664 never executed
call   1665 never executed
call   1666 returned 100%
call   1667 returned 100%
call   1668 returned 100%
call   1669 returned 100%
call   1670 returned 100%
call   1671 returned 100%
branch 1672 taken 100% (fallthrough)
branch 1673 taken 0% (throw)
call   1674 returned 100%
call   1675 returned 100%
branch 1676 taken 100% (fallthrough)
branch 1677 taken 0% (throw)
branch 1678 taken 100% (fallthrough)
branch 1679 taken 0%
call   1680 returned 100%
call   1681 returned 100%
branch 1682 taken 100% (fallthrough)
branch 1683 taken 0% (throw)
call   1684 returned 100%
branch 1685 taken 100% (fallthrough)
branch 1686 taken 0% (throw)
call   1687 returned 100%
branch 1688 taken 100% (fallthrough)
branch 1689 taken 0% (throw)
call   1690 returned 100%
branch 1691 taken 100% (fallthrough)
branch 1692 taken 0% (throw)
call   1693 returned 100%
branch 1694 taken 100% (fallthrough)
branch 1695 taken 0% (throw)
call   1696 returned 100%
call   1697 returned 100%
call   1698 returned 100%
call   1699 returned 100%
call   1700 returned 100%
call   1701 returned 100%
call   1702 returned 100%
call   1703 returned 100%
call   1704 returned 100%
call   1705 returned 100%
call   1706 never executed
call   1707 never executed
call   1708 never executed
call   1709 never executed
call   1710 never executed
call   1711 never executed
call   1712 never executed
call   1713 never executed
call   1714 never executed
call   1715 returned 100%
call   1716 returned 100%
call   1717 returned 100%
call   1718 returned 100%
call   1719 returned 100%
call   1720 returned 100%
branch 1721 taken 100% (fallthrough)
branch 1722 taken 0% (throw)
call   1723 returned 100%
call   1724 returned 100%
branch 1725 taken 100% (fallthrough)
branch 1726 taken 0% (throw)
branch 1727 taken 100% (fallthrough)
branch 1728 taken 0%
call   1729 returned 100%
call   1730 returned 100%
branch 1731 taken 100% (fallthrough)
branch 1732 taken 0% (throw)
call   1733 returned 100%
branch 1734 taken 100% (fallthrough)
branch 1735 taken 0% (throw)
call   1736 returned 100%
branch 1737 taken 100% (fallthrough)
branch 1738 taken 0% (throw)
call   1739 returned 100%
branch 1740 taken 100% (fallthrough)
branch 1741 taken 0% (throw)
call   1742 returned 100%
branch 1743 taken 100% (fallthrough)
branch 1744 taken 0% (throw)
call   1745 returned 100%
call   1746 returned 100%
call   1747 returned 100%
call   1748 returned 100%
call   1749 returned 100%
call   1750 returned 100%
call   1751 returned 100%
call   1752 returned 100%
call   1753 returned 100%
call   1754 returned 100%
call   1755 never executed
call   1756 never executed
call   1757 never executed
call   1758 never executed
call   1759 never executed
call   1760 never executed
call   1761 never executed
call   1762 never executed
call   1763 never executed
call   1764 returned 100%
call   1765 returned 100%
call   1766 returned 100%
call   1767 returned 100%
call   1768 returned 100%
call   1769 returned 100%
branch 1770 taken 100% (fallthrough)
branch 1771 taken 0% (throw)
call   1772 returned 100%
call   1773 returned 100%
branch 1774 taken 100% (fallthrough)
branch 1775 taken 0% (throw)
branch 1776 taken 100% (fallthrough)
branch 1777 taken 0%
call   1778 returned 100%
call   1779 returned 100%
branch 1780 taken 100% (fallthrough)
branch 1781 taken 0% (throw)
call   1782 returned 100%
branch 1783 taken 100% (fallthrough)
branch 1784 taken 0% (throw)
call   1785 returned 100%
branch 1786 taken 100% (fallthrough)
branch 1787 taken 0% (throw)
call   1788 returned 100%
branch 1789 taken 100% (fallthrough)
branch 1790 taken 0% (throw)
call   1791 returned 100%
branch 1792 taken 100% (fallthrough)
branch 1793 taken 0% (throw)
call   1794 returned 100%
call   1795 returned 100%
call   1796 returned 100%
call   1797 returned 100%
call   1798 returned 100%
call   1799 returned 100%
call   1800 returned 100%
call   1801 returned 100%
call   1802 returned 100%
call   1803 returned 100%
call   1804 never executed
call   1805 never executed
call   1806 never executed
call   1807 never executed
call   1808 never executed
call   1809 never executed
call   1810 never executed
call   1811 never executed
call   1812 never executed
call   1813 returned 100%
call   1814 returned 100%
call   1815 returned 100%
call   1816 returned 100%
call   1817 returned 100%
call   1818 returned 100%
branch 1819 taken 100% (fallthrough)
branch 1820 taken 0% (throw)
call   1821 returned 100%
call   1822 returned 100%
branch 1823 taken 100% (fallthrough)
branch 1824 taken 0% (throw)
branch 1825 taken 100% (fallthrough)
branch 1826 taken 0%
call   1827 returned 100%
call   1828 returned 100%
branch 1829 taken 100% (fallthrough)
branch 1830 taken 0% (throw)
call   1831 returned 100%
branch 1832 taken 100% (fallthrough)
branch 1833 taken 0% (throw)
call   1834 returned 100%
branch 1835 taken 100% (fallthrough)
branch 1836 taken 0% (throw)
call   1837 returned 100%
branch 1838 taken 100% (fallthrough)
branch 1839 taken 0% (throw)
call   1840 returned 100%
branch 1841 taken 100% (fallthrough)
branch 1842 taken 0% (throw)
call   1843 returned 100%
call   1844 returned 100%
call   1845 returned 100%
call   1846 returned 100%
call   1847 returned 100%
call   1848 returned 100%
call   1849 returned 100%
call   1850 returned 100%
call   1851 returned 100%
call   1852 returned 100%
call   1853 never executed
call   1854 never executed
call   1855 never executed
call   1856 never executed
call   1857 never executed
call   1858 never executed
call   1859 never executed
call   1860 never executed
call   1861 never executed
call   1862 returned 100%
call   1863 returned 100%
call   1864 returned 100%
call   1865 returned 100%
call   1866 returned 100%
call   1867 returned 100%
branch 1868 taken 100% (fallthrough)
branch 1869 taken 0% (throw)
call   1870 returned 100%
call   1871 returned 100%
branch 1872 taken 100% (fallthrough)
branch 1873 taken 0% (throw)
branch 1874 taken 100% (fallthrough)
branch 1875 taken 0%
call   1876 returned 100%
call   1877 returned 100%
branch 1878 taken 100% (fallthrough)
branch 1879 taken 0% (throw)
call   1880 returned 100%
branch 1881 taken 100% (fallthrough)
branch 1882 taken 0% (throw)
call   1883 returned 100%
branch 1884 taken 100% (fallthrough)
branch 1885 taken 0% (throw)
call   1886 returned 100%
branch 1887 taken 100% (fallthrough)
branch 1888 taken 0% (throw)
call   1889 returned 100%
branch 1890 taken 100% (fallthrough)
branch 1891 taken 0% (throw)
call   1892 returned 100%
call   1893 returned 100%
call   1894 returned 100%
call   1895 returned 100%
call   1896 returned 100%
call   1897 returned 100%
call   1898 returned 100%
call   1899 returned 100%
call   1900 returned 100%
call   1901 returned 100%
call   1902 never executed
call   1903 never executed
call   1904 never executed
call   1905 never executed
call   1906 never executed
call   1907 never executed
call   1908 never executed
call   1909 never executed
call   1910 never executed
call   1911 returned 100%
call   1912 returned 100%
call   1913 returned 100%
call   1914 returned 100%
call   1915 returned 100%
call   1916 returned 100%
branch 1917 taken 100% (fallthrough)
branch 1918 taken 0% (throw)
call   1919 returned 100%
call   1920 returned 100%
branch 1921 taken 100% (fallthrough)
branch 1922 taken 0% (throw)
branch 1923 taken 100% (fallthrough)
branch 1924 taken 0%
call   1925 returned 100%
call   1926 returned 100%
branch 1927 taken 100% (fallthrough)
branch 1928 taken 0% (throw)
call   1929 returned 100%
branch 1930 taken 100% (fallthrough)
branch 1931 taken 0% (throw)
call   1932 returned 100%
branch 1933 taken 100% (fallthrough)
branch 1934 taken 0% (throw)
call   1935 returned 100%
branch 1936 taken 100% (fallthrough)
branch 1937 taken 0% (throw)
call   1938 returned 100%
branch 1939 taken 100% (fallthrough)
branch 1940 taken 0% (throw)
call   1941 returned 100%
call   1942 returned 100%
call   1943 returned 100%
call   1944 returned 100%
call   1945 returned 100%
call   1946 returned 100%
call   1947 returned 100%
call   1948 returned 100%
call   1949 returned 100%
call   1950 returned 100%
call   1951 never executed
call   1952 never executed
call   1953 never executed
call   1954 never executed
call   1955 never executed
call   1956 never executed
call   1957 never executed
call   1958 never executed
call   1959 never executed
call   1960 returned 100%
call   1961 returned 100%
call   1962 returned 100%
call   1963 returned 100%
call   1964 returned 100%
call   1965 returned 100%
branch 1966 taken 100% (fallthrough)
branch 1967 taken 0% (throw)
call   1968 returned 100%
call   1969 returned 100%
branch 1970 taken 100% (fallthrough)
branch 1971 taken 0% (throw)
branch 1972 taken 100% (fallthrough)
branch 1973 taken 0%
call   1974 returned 100%
call   1975 returned 100%
branch 1976 taken 100% (fallthrough)
branch 1977 taken 0% (throw)
call   1978 returned 100%
branch 1979 taken 100% (fallthrough)
branch 1980 taken 0% (throw)
call   1981 returned 100%
branch 1982 taken 100% (fallthrough)
branch 1983 taken 0% (throw)
call   1984 returned 100%
branch 1985 taken 100% (fallthrough)
branch 1986 taken 0% (throw)
call   1987 returned 100%
branch 1988 taken 100% (fallthrough)
branch 1989 taken 0% (throw)
call   1990 returned 100%
call   1991 returned 100%
call   1992 returned 100%
call   1993 returned 100%
call   1994 returned 100%
call   1995 returned 100%
call   1996 returned 100%
call   1997 returned 100%
call   1998 returned 100%
call   1999 returned 100%
call   2000 never executed
call   2001 never executed
call   2002 never executed
call   2003 never executed
call   2004 never executed
call   2005 never executed
call   2006 never executed
call   2007 never executed
call   2008 never executed
call   2009 returned 100%
call   2010 returned 100%
call   2011 returned 100%
call   2012 returned 100%
call   2013 returned 100%
call   2014 returned 100%
branch 2015 taken 100% (fallthrough)
branch 2016 taken 0% (throw)
call   2017 returned 100%
call   2018 returned 100%
branch 2019 taken 100% (fallthrough)
branch 2020 taken 0% (throw)
branch 2021 taken 100% (fallthrough)
branch 2022 taken 0%
call   2023 returned 100%
call   2024 returned 100%
branch 2025 taken 100% (fallthrough)
branch 2026 taken 0% (throw)
call   2027 returned 100%
branch 2028 taken 100% (fallthrough)
branch 2029 taken 0% (throw)
call   2030 returned 100%
branch 2031 taken 100% (fallthrough)
branch 2032 taken 0% (throw)
call   2033 returned 100%
branch 2034 taken 100% (fallthrough)
branch 2035 taken 0% (throw)
call   2036 returned 100%
branch 2037 taken 100% (fallthrough)
branch 2038 taken 0% (throw)
call   2039 returned 100%
call   2040 returned 100%
call   2041 returned 100%
call   2042 returned 100%
call   2043 returned 100%
call   2044 returned 100%
call   2045 returned 100%
call   2046 returned 100%
call   2047 returned 100%
call   2048 returned 100%
call   2049 never executed
call   2050 never executed
call   2051 never executed
call   2052 never executed
call   2053 never executed
call   2054 never executed
call   2055 never executed
call   2056 never executed
call   2057 never executed
call   2058 returned 100%
call   2059 returned 100%
call   2060 returned 100%
call   2061 returned 100%
call   2062 returned 100%
call   2063 returned 100%
branch 2064 taken 100% (fallthrough)
branch 2065 taken 0% (throw)
call   2066 returned 100%
call   2067 returned 100%
branch 2068 taken 100% (fallthrough)
branch 2069 taken 0% (throw)
branch 2070 taken 100% (fallthrough)
branch 2071 taken 0%
call   2072 returned 100%
call   2073 returned 100%
branch 2074 taken 100% (fallthrough)
branch 2075 taken 0% (throw)
call   2076 returned 100%
branch 2077 taken 100% (fallthrough)
branch 2078 taken 0% (throw)
call   2079 returned 100%
branch 2080 taken 100% (fallthrough)
branch 2081 taken 0% (throw)
call   2082 returned 100%
branch 2083 taken 100% (fallthrough)
branch 2084 taken 0% (throw)
call   2085 returned 100%
branch 2086 taken 100% (fallthrough)
branch 2087 taken 0% (throw)
call   2088 returned 100%
call   2089 returned 100%
call   2090 returned 100%
call   2091 returned 100%
call   2092 returned 100%
call   2093 returned 100%
call   2094 returned 100%
call   2095 returned 100%
call   2096 returned 100%
call   2097 returned 100%
call   2098 never executed
call   2099 never executed
call   2100 never executed
call   2101 never executed
call   2102 never executed
call   2103 never executed
call   2104 never executed
call   2105 never executed
call   2106 never executed
call   2107 returned 100%
call   2108 returned 100%
call   2109 returned 100%
call   2110 returned 100%
call   2111 returned 100%
call   2112 returned 100%
branch 2113 taken 100% (fallthrough)
branch 2114 taken 0% (throw)
call   2115 returned 100%
call   2116 returned 100%
branch 2117 taken 100% (fallthrough)
branch 2118 taken 0% (throw)
branch 2119 taken 100% (fallthrough)
branch 2120 taken 0%
call   2121 returned 100%
call   2122 returned 100%
branch 2123 taken 100% (fallthrough)
branch 2124 taken 0% (throw)
call   2125 returned 100%
branch 2126 taken 100% (fallthrough)
branch 2127 taken 0% (throw)
call   2128 returned 100%
branch 2129 taken 100% (fallthrough)
branch 2130 taken 0% (throw)
call   2131 returned 100%
branch 2132 taken 100% (fallthrough)
branch 2133 taken 0% (throw)
call   2134 returned 100%
branch 2135 taken 100% (fallthrough)
branch 2136 taken 0% (throw)
call   2137 returned 100%
call   2138 returned 100%
call   2139 returned 100%
call   2140 returned 100%
call   2141 returned 100%
call   2142 returned 100%
call   2143 returned 100%
call   2144 returned 100%
call   2145 returned 100%
call   2146 returned 100%
call   2147 never executed
call   2148 never executed
call   2149 never executed
call   2150 never executed
call   2151 never executed
call   2152 never executed
call   2153 never executed
call   2154 never executed
call   2155 never executed
call   2156 returned 100%
call   2157 returned 100%
call   2158 returned 100%
call   2159 returned 100%
call   2160 returned 100%
call   2161 returned 100%
branch 2162 taken 100% (fallthrough)
branch 2163 taken 0% (throw)
call   2164 returned 100%
call   2165 returned 100%
branch 2166 taken 100% (fallthrough)
branch 2167 taken 0% (throw)
branch 2168 taken 100% (fallthrough)
branch 2169 taken 0%
call   2170 returned 100%
call   2171 returned 100%
branch 2172 taken 100% (fallthrough)
branch 2173 taken 0% (throw)
call   2174 returned 100%
branch 2175 taken 100% (fallthrough)
branch 2176 taken 0% (throw)
call   2177 returned 100%
branch 2178 taken 100% (fallthrough)
branch 2179 taken 0% (throw)
call   2180 returned 100%
branch 2181 taken 100% (fallthrough)
branch 2182 taken 0% (throw)
call   2183 returned 100%
branch 2184 taken 100% (fallthrough)
branch 2185 taken 0% (throw)
call   2186 returned 100%
call   2187 returned 100%
call   2188 returned 100%
call   2189 returned 100%
call   2190 returned 100%
call   2191 returned 100%
call   2192 returned 100%
call   2193 returned 100%
call   2194 returned 100%
call   2195 returned 100%
call   2196 never executed
call   2197 never executed
call   2198 never executed
call   2199 never executed
call   2200 never executed
call   2201 never executed
call   2202 never executed
call   2203 never executed
call   2204 never executed
call   2205 returned 100%
call   2206 returned 100%
call   2207 returned 100%
call   2208 returned 100%
call   2209 returned 100%
call   2210 returned 100%
branch 2211 taken 100% (fallthrough)
branch 2212 taken 0% (throw)
call   2213 returned 100%
call   2214 returned 100%
branch 2215 taken 100% (fallthrough)
branch 2216 taken 0% (throw)
branch 2217 taken 100% (fallthrough)
branch 2218 taken 0%
call   2219 returned 100%
call   2220 returned 100%
branch 2221 taken 100% (fallthrough)
branch 2222 taken 0% (throw)
call   2223 returned 100%
branch 2224 taken 100% (fallthrough)
branch 2225 taken 0% (throw)
call   2226 returned 100%
branch 2227 taken 100% (fallthrough)
branch 2228 taken 0% (throw)
call   2229 returned 100%
branch 2230 taken 100% (fallthrough)
branch 2231 taken 0% (throw)
call   2232 returned 100%
branch 2233 taken 100% (fallthrough)
branch 2234 taken 0% (throw)
call   2235 returned 100%
call   2236 returned 100%
call   2237 returned 100%
call   2238 returned 100%
call   2239 returned 100%
call   2240 returned 100%
call   2241 returned 100%
call   2242 returned 100%
call   2243 returned 100%
call   2244 returned 100%
call   2245 never executed
call   2246 never executed
call   2247 never executed
call   2248 never executed
call   2249 never executed
call   2250 never executed
call   2251 never executed
call   2252 never executed
call   2253 never executed
call   2254 returned 100%
call   2255 returned 100%
call   2256 returned 100%
call   2257 returned 100%
call   2258 returned 100%
call   2259 returned 100%
branch 2260 taken 100% (fallthrough)
branch 2261 taken 0% (throw)
call   2262 returned 100%
call   2263 returned 100%
branch 2264 taken 100% (fallthrough)
branch 2265 taken 0% (throw)
branch 2266 taken 100% (fallthrough)
branch 2267 taken 0%
call   2268 returned 100%
call   2269 returned 100%
branch 2270 taken 100% (fallthrough)
branch 2271 taken 0% (throw)
call   2272 returned 100%
branch 2273 taken 100% (fallthrough)
branch 2274 taken 0% (throw)
call   2275 returned 100%
branch 2276 taken 100% (fallthrough)
branch 2277 taken 0% (throw)
call   2278 returned 100%
branch 2279 taken 100% (fallthrough)
branch 2280 taken 0% (throw)
call   2281 returned 100%
branch 2282 taken 100% (fallthrough)
branch 2283 taken 0% (throw)
call   2284 returned 100%
call   2285 returned 100%
call   2286 returned 100%
call   2287 returned 100%
call   2288 returned 100%
call   2289 returned 100%
call   2290 returned 100%
call   2291 returned 100%
call   2292 returned 100%
call   2293 returned 100%
call   2294 never executed
call   2295 never executed
call   2296 never executed
call   2297 never executed
call   2298 never executed
call   2299 never executed
call   2300 never executed
call   2301 never executed
call   2302 never executed
call   2303 returned 100%
call   2304 returned 100%
call   2305 returned 100%
call   2306 returned 100%
call   2307 returned 100%
call   2308 returned 100%
branch 2309 taken 100% (fallthrough)
branch 2310 taken 0% (throw)
call   2311 returned 100%
call   2312 returned 100%
branch 2313 taken 100% (fallthrough)
branch 2314 taken 0% (throw)
branch 2315 taken 100% (fallthrough)
branch 2316 taken 0%
call   2317 returned 100%
call   2318 returned 100%
branch 2319 taken 100% (fallthrough)
branch 2320 taken 0% (throw)
call   2321 returned 100%
branch 2322 taken 100% (fallthrough)
branch 2323 taken 0% (throw)
call   2324 returned 100%
branch 2325 taken 100% (fallthrough)
branch 2326 taken 0% (throw)
call   2327 returned 100%
branch 2328 taken 100% (fallthrough)
branch 2329 taken 0% (throw)
call   2330 returned 100%
branch 2331 taken 100% (fallthrough)
branch 2332 taken 0% (throw)
call   2333 returned 100%
call   2334 returned 100%
call   2335 returned 100%
call   2336 returned 100%
call   2337 returned 100%
call   2338 returned 100%
call   2339 returned 100%
call   2340 returned 100%
call   2341 returned 100%
call   2342 returned 100%
call   2343 never executed
call   2344 never executed
call   2345 never executed
call   2346 never executed
call   2347 never executed
call   2348 never executed
call   2349 never executed
call   2350 never executed
call   2351 never executed
call   2352 returned 100%
call   2353 returned 100%
call   2354 returned 100%
call   2355 returned 100%
call   2356 returned 100%
call   2357 returned 100%
branch 2358 taken 100% (fallthrough)
branch 2359 taken 0% (throw)
call   2360 returned 100%
call   2361 returned 100%
branch 2362 taken 100% (fallthrough)
branch 2363 taken 0% (throw)
branch 2364 taken 100% (fallthrough)
branch 2365 taken 0%
call   2366 returned 100%
call   2367 returned 100%
branch 2368 taken 100% (fallthrough)
branch 2369 taken 0% (throw)
call   2370 returned 100%
branch 2371 taken 100% (fallthrough)
branch 2372 taken 0% (throw)
call   2373 returned 100%
branch 2374 taken 100% (fallthrough)
branch 2375 taken 0% (throw)
call   2376 returned 100%
branch 2377 taken 100% (fallthrough)
branch 2378 taken 0% (throw)
call   2379 returned 100%
branch 2380 taken 100% (fallthrough)
branch 2381 taken 0% (throw)
call   2382 returned 100%
call   2383 returned 100%
call   2384 returned 100%
call   2385 returned 100%
call   2386 returned 100%
call   2387 returned 100%
call   2388 returned 100%
call   2389 returned 100%
call   2390 returned 100%
call   2391 returned 100%
call   2392 never executed
call   2393 never executed
call   2394 never executed
call   2395 never executed
call   2396 never executed
call   2397 never executed
call   2398 never executed
call   2399 never executed
call   2400 never executed
call   2401 returned 100%
call   2402 returned 100%
call   2403 returned 100%
call   2404 returned 100%
call   2405 returned 100%
call   2406 returned 100%
branch 2407 taken 100% (fallthrough)
branch 2408 taken 0% (throw)
call   2409 returned 100%
call   2410 returned 100%
branch 2411 taken 100% (fallthrough)
branch 2412 taken 0% (throw)
branch 2413 taken 100% (fallthrough)
branch 2414 taken 0%
call   2415 returned 100%
call   2416 returned 100%
branch 2417 taken 100% (fallthrough)
branch 2418 taken 0% (throw)
call   2419 returned 100%
branch 2420 taken 100% (fallthrough)
branch 2421 taken 0% (throw)
call   2422 returned 100%
branch 2423 taken 100% (fallthrough)
branch 2424 taken 0% (throw)
call   2425 returned 100%
branch 2426 taken 100% (fallthrough)
branch 2427 taken 0% (throw)
call   2428 returned 100%
branch 2429 taken 100% (fallthrough)
branch 2430 taken 0% (throw)
call   2431 returned 100%
call   2432 returned 100%
call   2433 returned 100%
call   2434 returned 100%
call   2435 returned 100%
call   2436 returned 100%
call   2437 returned 100%
call   2438 returned 100%
call   2439 returned 100%
call   2440 returned 100%
call   2441 never executed
call   2442 never executed
call   2443 never executed
call   2444 never executed
call   2445 never executed
call   2446 never executed
call   2447 never executed
call   2448 never executed
call   2449 never executed
call   2450 returned 100%
call   2451 returned 100%
call   2452 returned 100%
call   2453 returned 100%
call   2454 returned 100%
call   2455 returned 100%
branch 2456 taken 100% (fallthrough)
branch 2457 taken 0% (throw)
call   2458 returned 100%
call   2459 returned 100%
branch 2460 taken 100% (fallthrough)
branch 2461 taken 0% (throw)
branch 2462 taken 100% (fallthrough)
branch 2463 taken 0%
call   2464 returned 100%
call   2465 returned 100%
branch 2466 taken 100% (fallthrough)
branch 2467 taken 0% (throw)
call   2468 returned 100%
branch 2469 taken 100% (fallthrough)
branch 2470 taken 0% (throw)
call   2471 returned 100%
branch 2472 taken 100% (fallthrough)
branch 2473 taken 0% (throw)
call   2474 returned 100%
branch 2475 taken 100% (fallthrough)
branch 2476 taken 0% (throw)
call   2477 returned 100%
branch 2478 taken 100% (fallthrough)
branch 2479 taken 0% (throw)
call   2480 returned 100%
call   2481 returned 100%
call   2482 returned 100%
call   2483 returned 100%
call   2484 returned 100%
call   2485 returned 100%
call   2486 returned 100%
call   2487 returned 100%
call   2488 returned 100%
call   2489 returned 100%
call   2490 never executed
call   2491 never executed
call   2492 never executed
call   2493 never executed
call   2494 never executed
call   2495 never executed
call   2496 never executed
call   2497 never executed
call   2498 never executed
call   2499 returned 100%
call   2500 returned 100%
call   2501 returned 100%
call   2502 returned 100%
call   2503 returned 100%
call   2504 returned 100%
branch 2505 taken 100% (fallthrough)
branch 2506 taken 0% (throw)
call   2507 returned 100%
call   2508 returned 100%
branch 2509 taken 100% (fallthrough)
branch 2510 taken 0% (throw)
branch 2511 taken 100% (fallthrough)
branch 2512 taken 0%
call   2513 returned 100%
call   2514 returned 100%
branch 2515 taken 100% (fallthrough)
branch 2516 taken 0% (throw)
call   2517 returned 100%
branch 2518 taken 100% (fallthrough)
branch 2519 taken 0% (throw)
call   2520 returned 100%
branch 2521 taken 100% (fallthrough)
branch 2522 taken 0% (throw)
call   2523 returned 100%
branch 2524 taken 100% (fallthrough)
branch 2525 taken 0% (throw)
call   2526 returned 100%
branch 2527 taken 100% (fallthrough)
branch 2528 taken 0% (throw)
call   2529 returned 100%
call   2530 returned 100%
call   2531 returned 100%
call   2532 returned 100%
call   2533 returned 100%
call   2534 returned 100%
call   2535 returned 100%
call   2536 returned 100%
call   2537 returned 100%
call   2538 returned 100%
call   2539 never executed
call   2540 never executed
call   2541 never executed
call   2542 never executed
call   2543 never executed
call   2544 never executed
call   2545 never executed
call   2546 never executed
call   2547 never executed
call   2548 returned 100%
call   2549 returned 100%
call   2550 returned 100%
call   2551 returned 100%
call   2552 returned 100%
call   2553 returned 100%
branch 2554 taken 100% (fallthrough)
branch 2555 taken 0% (throw)
call   2556 returned 100%
call   2557 returned 100%
branch 2558 taken 100% (fallthrough)
branch 2559 taken 0% (throw)
branch 2560 taken 100% (fallthrough)
branch 2561 taken 0%
call   2562 returned 100%
call   2563 returned 100%
branch 2564 taken 100% (fallthrough)
branch 2565 taken 0% (throw)
call   2566 returned 100%
branch 2567 taken 100% (fallthrough)
branch 2568 taken 0% (throw)
call   2569 returned 100%
branch 2570 taken 100% (fallthrough)
branch 2571 taken 0% (throw)
call   2572 returned 100%
branch 2573 taken 100% (fallthrough)
branch 2574 taken 0% (throw)
call   2575 returned 100%
branch 2576 taken 100% (fallthrough)
branch 2577 taken 0% (throw)
call   2578 returned 100%
call   2579 returned 100%
call   2580 returned 100%
call   2581 returned 100%
call   2582 returned 100%
call   2583 returned 100%
call   2584 returned 100%
call   2585 returned 100%
call   2586 returned 100%
call   2587 returned 100%
call   2588 never executed
call   2589 never executed
call   2590 never executed
call   2591 never executed
call   2592 never executed
call   2593 never executed
call   2594 never executed
call   2595 never executed
call   2596 never executed
call   2597 returned 100%
call   2598 returned 100%
call   2599 returned 100%
call   2600 returned 100%
call   2601 returned 100%
call   2602 returned 100%
branch 2603 taken 100% (fallthrough)
branch 2604 taken 0% (throw)
call   2605 returned 100%
call   2606 returned 100%
branch 2607 taken 100% (fallthrough)
branch 2608 taken 0% (throw)
branch 2609 taken 100% (fallthrough)
branch 2610 taken 0%
call   2611 returned 100%
call   2612 returned 100%
branch 2613 taken 100% (fallthrough)
branch 2614 taken 0% (throw)
call   2615 returned 100%
branch 2616 taken 100% (fallthrough)
branch 2617 taken 0% (throw)
call   2618 returned 100%
branch 2619 taken 100% (fallthrough)
branch 2620 taken 0% (throw)
call   2621 returned 100%
branch 2622 taken 100% (fallthrough)
branch 2623 taken 0% (throw)
call   2624 returned 100%
branch 2625 taken 100% (fallthrough)
branch 2626 taken 0% (throw)
call   2627 returned 100%
call   2628 returned 100%
call   2629 returned 100%
call   2630 returned 100%
call   2631 returned 100%
call   2632 returned 100%
call   2633 returned 100%
call   2634 returned 100%
call   2635 returned 100%
call   2636 returned 100%
call   2637 never executed
call   2638 never executed
call   2639 never executed
call   2640 never executed
call   2641 never executed
call   2642 never executed
call   2643 never executed
call   2644 never executed
call   2645 never executed
call   2646 returned 100%
call   2647 returned 100%
call   2648 returned 100%
call   2649 returned 100%
call   2650 returned 100%
call   2651 returned 100%
branch 2652 taken 100% (fallthrough)
branch 2653 taken 0% (throw)
call   2654 returned 100%
call   2655 returned 100%
branch 2656 taken 100% (fallthrough)
branch 2657 taken 0% (throw)
branch 2658 taken 100% (fallthrough)
branch 2659 taken 0%
call   2660 returned 100%
call   2661 returned 100%
branch 2662 taken 100% (fallthrough)
branch 2663 taken 0% (throw)
call   2664 returned 100%
branch 2665 taken 100% (fallthrough)
branch 2666 taken 0% (throw)
call   2667 returned 100%
branch 2668 taken 100% (fallthrough)
branch 2669 taken 0% (throw)
call   2670 returned 100%
branch 2671 taken 100% (fallthrough)
branch 2672 taken 0% (throw)
call   2673 returned 100%
branch 2674 taken 100% (fallthrough)
branch 2675 taken 0% (throw)
call   2676 returned 100%
call   2677 returned 100%
call   2678 returned 100%
call   2679 returned 100%
call   2680 returned 100%
call   2681 returned 100%
call   2682 returned 100%
call   2683 returned 100%
call   2684 returned 100%
call   2685 returned 100%
call   2686 never executed
call   2687 never executed
call   2688 never executed
call   2689 never executed
call   2690 never executed
call   2691 never executed
call   2692 never executed
call   2693 never executed
call   2694 never executed
call   2695 returned 100%
call   2696 returned 100%
call   2697 returned 100%
call   2698 returned 100%
call   2699 returned 100%
call   2700 returned 100%
branch 2701 taken 100% (fallthrough)
branch 2702 taken 0% (throw)
call   2703 returned 100%
call   2704 returned 100%
branch 2705 taken 100% (fallthrough)
branch 2706 taken 0% (throw)
branch 2707 taken 100% (fallthrough)
branch 2708 taken 0%
call   2709 returned 100%
call   2710 returned 100%
branch 2711 taken 100% (fallthrough)
branch 2712 taken 0% (throw)
call   2713 returned 100%
branch 2714 taken 100% (fallthrough)
branch 2715 taken 0% (throw)
call   2716 returned 100%
branch 2717 taken 100% (fallthrough)
branch 2718 taken 0% (throw)
call   2719 returned 100%
branch 2720 taken 100% (fallthrough)
branch 2721 taken 0% (throw)
call   2722 returned 100%
branch 2723 taken 100% (fallthrough)
branch 2724 taken 0% (throw)
call   2725 returned 100%
call   2726 returned 100%
call   2727 returned 100%
call   2728 returned 100%
call   2729 returned 100%
call   2730 returned 100%
call   2731 returned 100%
call   2732 returned 100%
call   2733 returned 100%
call   2734 returned 100%
call   2735 never executed
call   2736 never executed
call   2737 never executed
call   2738 never executed
call   2739 never executed
call   2740 never executed
call   2741 never executed
call   2742 never executed
call   2743 never executed
call   2744 returned 100%
call   2745 returned 100%
call   2746 returned 100%
call   2747 returned 100%
call   2748 returned 100%
call   2749 returned 100%
branch 2750 taken 100% (fallthrough)
branch 2751 taken 0% (throw)
call   2752 returned 100%
call   2753 returned 100%
branch 2754 taken 100% (fallthrough)
branch 2755 taken 0% (throw)
branch 2756 taken 100% (fallthrough)
branch 2757 taken 0%
call   2758 returned 100%
call   2759 returned 100%
branch 2760 taken 100% (fallthrough)
branch 2761 taken 0% (throw)
call   2762 returned 100%
branch 2763 taken 100% (fallthrough)
branch 2764 taken 0% (throw)
call   2765 returned 100%
branch 2766 taken 100% (fallthrough)
branch 2767 taken 0% (throw)
call   2768 returned 100%
branch 2769 taken 100% (fallthrough)
branch 2770 taken 0% (throw)
call   2771 returned 100%
branch 2772 taken 100% (fallthrough)
branch 2773 taken 0% (throw)
call   2774 returned 100%
call   2775 returned 100%
call   2776 returned 100%
call   2777 returned 100%
call   2778 returned 100%
call   2779 returned 100%
call   2780 returned 100%
call   2781 returned 100%
call   2782 returned 100%
call   2783 returned 100%
call   2784 never executed
call   2785 never executed
call   2786 never executed
call   2787 never executed
call   2788 never executed
call   2789 never executed
call   2790 never executed
call   2791 never executed
call   2792 never executed
call   2793 returned 100%
call   2794 returned 100%
call   2795 returned 100%
call   2796 returned 100%
call   2797 returned 100%
call   2798 returned 100%
branch 2799 taken 100% (fallthrough)
branch 2800 taken 0% (throw)
call   2801 returned 100%
call   2802 returned 100%
branch 2803 taken 100% (fallthrough)
branch 2804 taken 0% (throw)
branch 2805 taken 100% (fallthrough)
branch 2806 taken 0%
call   2807 returned 100%
call   2808 returned 100%
branch 2809 taken 100% (fallthrough)
branch 2810 taken 0% (throw)
call   2811 returned 100%
branch 2812 taken 100% (fallthrough)
branch 2813 taken 0% (throw)
call   2814 returned 100%
branch 2815 taken 100% (fallthrough)
branch 2816 taken 0% (throw)
call   2817 returned 100%
branch 2818 taken 100% (fallthrough)
branch 2819 taken 0% (throw)
call   2820 returned 100%
branch 2821 taken 100% (fallthrough)
branch 2822 taken 0% (throw)
call   2823 returned 100%
call   2824 returned 100%
call   2825 returned 100%
call   2826 returned 100%
call   2827 returned 100%
call   2828 returned 100%
call   2829 returned 100%
call   2830 returned 100%
call   2831 returned 100%
call   2832 returned 100%
call   2833 never executed
call   2834 never executed
call   2835 never executed
call   2836 never executed
call   2837 never executed
call   2838 never executed
call   2839 never executed
call   2840 never executed
call   2841 never executed
call   2842 returned 100%
call   2843 returned 100%
call   2844 returned 100%
call   2845 returned 100%
call   2846 returned 100%
call   2847 returned 100%
branch 2848 taken 100% (fallthrough)
branch 2849 taken 0% (throw)
call   2850 returned 100%
call   2851 returned 100%
branch 2852 taken 100% (fallthrough)
branch 2853 taken 0% (throw)
branch 2854 taken 100% (fallthrough)
branch 2855 taken 0%
call   2856 returned 100%
call   2857 returned 100%
branch 2858 taken 100% (fallthrough)
branch 2859 taken 0% (throw)
call   2860 returned 100%
branch 2861 taken 100% (fallthrough)
branch 2862 taken 0% (throw)
call   2863 returned 100%
branch 2864 taken 100% (fallthrough)
branch 2865 taken 0% (throw)
call   2866 returned 100%
branch 2867 taken 100% (fallthrough)
branch 2868 taken 0% (throw)
call   2869 returned 100%
branch 2870 taken 100% (fallthrough)
branch 2871 taken 0% (throw)
call   2872 returned 100%
call   2873 returned 100%
call   2874 returned 100%
call   2875 returned 100%
call   2876 returned 100%
call   2877 returned 100%
call   2878 returned 100%
call   2879 returned 100%
call   2880 returned 100%
call   2881 returned 100%
call   2882 never executed
call   2883 never executed
call   2884 never executed
call   2885 never executed
call   2886 never executed
call   2887 never executed
call   2888 never executed
call   2889 never executed
call   2890 never executed
call   2891 returned 100%
call   2892 returned 100%
call   2893 returned 100%
call   2894 returned 100%
call   2895 returned 100%
call   2896 returned 100%
branch 2897 taken 100% (fallthrough)
branch 2898 taken 0% (throw)
call   2899 returned 100%
call   2900 returned 100%
branch 2901 taken 100% (fallthrough)
branch 2902 taken 0% (throw)
branch 2903 taken 100% (fallthrough)
branch 2904 taken 0%
call   2905 returned 100%
call   2906 returned 100%
branch 2907 taken 100% (fallthrough)
branch 2908 taken 0% (throw)
call   2909 returned 100%
branch 2910 taken 100% (fallthrough)
branch 2911 taken 0% (throw)
call   2912 returned 100%
branch 2913 taken 100% (fallthrough)
branch 2914 taken 0% (throw)
call   2915 returned 100%
branch 2916 taken 100% (fallthrough)
branch 2917 taken 0% (throw)
call   2918 returned 100%
branch 2919 taken 100% (fallthrough)
branch 2920 taken 0% (throw)
call   2921 returned 100%
call   2922 returned 100%
call   2923 returned 100%
call   2924 returned 100%
call   2925 returned 100%
call   2926 returned 100%
call   2927 returned 100%
call   2928 returned 100%
call   2929 returned 100%
call   2930 returned 100%
call   2931 never executed
call   2932 never executed
call   2933 never executed
call   2934 never executed
call   2935 never executed
call   2936 never executed
call   2937 never executed
call   2938 never executed
call   2939 never executed
call   2940 returned 100%
call   2941 returned 100%
call   2942 returned 100%
call   2943 returned 100%
call   2944 returned 100%
call   2945 returned 100%
branch 2946 taken 100% (fallthrough)
branch 2947 taken 0% (throw)
call   2948 returned 100%
call   2949 returned 100%
branch 2950 taken 100% (fallthrough)
branch 2951 taken 0% (throw)
branch 2952 taken 100% (fallthrough)
branch 2953 taken 0%
call   2954 returned 100%
call   2955 returned 100%
branch 2956 taken 100% (fallthrough)
branch 2957 taken 0% (throw)
call   2958 returned 100%
branch 2959 taken 100% (fallthrough)
branch 2960 taken 0% (throw)
call   2961 returned 100%
branch 2962 taken 100% (fallthrough)
branch 2963 taken 0% (throw)
call   2964 returned 100%
branch 2965 taken 100% (fallthrough)
branch 2966 taken 0% (throw)
call   2967 returned 100%
branch 2968 taken 100% (fallthrough)
branch 2969 taken 0% (throw)
call   2970 returned 100%
call   2971 returned 100%
call   2972 returned 100%
call   2973 returned 100%
call   2974 returned 100%
call   2975 returned 100%
call   2976 returned 100%
call   2977 returned 100%
call   2978 returned 100%
call   2979 returned 100%
call   2980 never executed
call   2981 never executed
call   2982 never executed
call   2983 never executed
call   2984 never executed
call   2985 never executed
call   2986 never executed
call   2987 never executed
call   2988 never executed
call   2989 returned 100%
call   2990 returned 100%
call   2991 returned 100%
call   2992 returned 100%
call   2993 returned 100%
call   2994 returned 100%
branch 2995 taken 100% (fallthrough)
branch 2996 taken 0% (throw)
call   2997 returned 100%
call   2998 returned 100%
branch 2999 taken 100% (fallthrough)
branch 3000 taken 0% (throw)
branch 3001 taken 100% (fallthrough)
branch 3002 taken 0%
call   3003 returned 100%
call   3004 returned 100%
branch 3005 taken 100% (fallthrough)
branch 3006 taken 0% (throw)
call   3007 returned 100%
branch 3008 taken 100% (fallthrough)
branch 3009 taken 0% (throw)
call   3010 returned 100%
branch 3011 taken 100% (fallthrough)
branch 3012 taken 0% (throw)
call   3013 returned 100%
branch 3014 taken 100% (fallthrough)
branch 3015 taken 0% (throw)
call   3016 returned 100%
branch 3017 taken 100% (fallthrough)
branch 3018 taken 0% (throw)
call   3019 returned 100%
call   3020 returned 100%
call   3021 returned 100%
call   3022 returned 100%
call   3023 returned 100%
call   3024 returned 100%
call   3025 returned 100%
call   3026 returned 100%
call   3027 returned 100%
call   3028 returned 100%
call   3029 never executed
call   3030 never executed
call   3031 never executed
call   3032 never executed
call   3033 never executed
call   3034 never executed
call   3035 never executed
call   3036 never executed
call   3037 never executed
call   3038 returned 100%
call   3039 returned 100%
call   3040 returned 100%
call   3041 returned 100%
call   3042 returned 100%
call   3043 returned 100%
branch 3044 taken 100% (fallthrough)
branch 3045 taken 0% (throw)
call   3046 returned 100%
call   3047 returned 100%
branch 3048 taken 100% (fallthrough)
branch 3049 taken 0% (throw)
branch 3050 taken 100% (fallthrough)
branch 3051 taken 0%
call   3052 returned 100%
call   3053 returned 100%
branch 3054 taken 100% (fallthrough)
branch 3055 taken 0% (throw)
call   3056 returned 100%
branch 3057 taken 100% (fallthrough)
branch 3058 taken 0% (throw)
call   3059 returned 100%
branch 3060 taken 100% (fallthrough)
branch 3061 taken 0% (throw)
call   3062 returned 100%
branch 3063 taken 100% (fallthrough)
branch 3064 taken 0% (throw)
call   3065 returned 100%
branch 3066 taken 100% (fallthrough)
branch 3067 taken 0% (throw)
call   3068 returned 100%
call   3069 returned 100%
call   3070 returned 100%
call   3071 returned 100%
call   3072 returned 100%
call   3073 returned 100%
call   3074 returned 100%
call   3075 returned 100%
call   3076 returned 100%
call   3077 returned 100%
call   3078 never executed
call   3079 never executed
call   3080 never executed
call   3081 never executed
call   3082 never executed
call   3083 never executed
call   3084 never executed
call   3085 never executed
call   3086 never executed
call   3087 returned 100%
call   3088 returned 100%
call   3089 returned 100%
call   3090 returned 100%
call   3091 returned 100%
call   3092 returned 100%
branch 3093 taken 100% (fallthrough)
branch 3094 taken 0% (throw)
call   3095 returned 100%
call   3096 returned 100%
branch 3097 taken 100% (fallthrough)
branch 3098 taken 0% (throw)
branch 3099 taken 100% (fallthrough)
branch 3100 taken 0%
call   3101 returned 100%
call   3102 returned 100%
branch 3103 taken 100% (fallthrough)
branch 3104 taken 0% (throw)
call   3105 returned 100%
branch 3106 taken 100% (fallthrough)
branch 3107 taken 0% (throw)
call   3108 returned 100%
branch 3109 taken 100% (fallthrough)
branch 3110 taken 0% (throw)
call   3111 returned 100%
branch 3112 taken 100% (fallthrough)
branch 3113 taken 0% (throw)
call   3114 returned 100%
branch 3115 taken 100% (fallthrough)
branch 3116 taken 0% (throw)
call   3117 returned 100%
call   3118 returned 100%
call   3119 returned 100%
call   3120 returned 100%
call   3121 returned 100%
call   3122 returned 100%
call   3123 returned 100%
call   3124 returned 100%
call   3125 returned 100%
call   3126 returned 100%
call   3127 never executed
call   3128 never executed
call   3129 never executed
call   3130 never executed
call   3131 never executed
call   3132 never executed
call   3133 never executed
call   3134 never executed
call   3135 never executed
call   3136 returned 100%
call   3137 returned 100%
call   3138 returned 100%
call   3139 returned 100%
call   3140 returned 100%
call   3141 returned 100%
branch 3142 taken 100% (fallthrough)
branch 3143 taken 0% (throw)
call   3144 returned 100%
call   3145 returned 100%
branch 3146 taken 100% (fallthrough)
branch 3147 taken 0% (throw)
branch 3148 taken 100% (fallthrough)
branch 3149 taken 0%
call   3150 returned 100%
call   3151 returned 100%
branch 3152 taken 100% (fallthrough)
branch 3153 taken 0% (throw)
call   3154 returned 100%
branch 3155 taken 100% (fallthrough)
branch 3156 taken 0% (throw)
call   3157 returned 100%
branch 3158 taken 100% (fallthrough)
branch 3159 taken 0% (throw)
call   3160 returned 100%
branch 3161 taken 100% (fallthrough)
branch 3162 taken 0% (throw)
call   3163 returned 100%
branch 3164 taken 100% (fallthrough)
branch 3165 taken 0% (throw)
call   3166 returned 100%
call   3167 returned 100%
call   3168 returned 100%
call   3169 returned 100%
call   3170 returned 100%
call   3171 returned 100%
call   3172 returned 100%
call   3173 returned 100%
call   3174 returned 100%
call   3175 returned 100%
call   3176 never executed
call   3177 never executed
call   3178 never executed
call   3179 never executed
call   3180 never executed
call   3181 never executed
call   3182 never executed
call   3183 never executed
call   3184 never executed
call   3185 returned 100%
call   3186 returned 100%
call   3187 returned 100%
call   3188 returned 100%
call   3189 returned 100%
call   3190 returned 100%
branch 3191 taken 100% (fallthrough)
branch 3192 taken 0% (throw)
call   3193 returned 100%
call   3194 returned 100%
branch 3195 taken 100% (fallthrough)
branch 3196 taken 0% (throw)
branch 3197 taken 100% (fallthrough)
branch 3198 taken 0%
call   3199 returned 100%
call   3200 returned 100%
branch 3201 taken 100% (fallthrough)
branch 3202 taken 0% (throw)
call   3203 returned 100%
branch 3204 taken 100% (fallthrough)
branch 3205 taken 0% (throw)
call   3206 returned 100%
branch 3207 taken 100% (fallthrough)
branch 3208 taken 0% (throw)
call   3209 returned 100%
branch 3210 taken 100% (fallthrough)
branch 3211 taken 0% (throw)
call   3212 returned 100%
branch 3213 taken 100% (fallthrough)
branch 3214 taken 0% (throw)
call   3215 returned 100%
call   3216 returned 100%
call   3217 returned 100%
call   3218 returned 100%
call   3219 returned 100%
call   3220 returned 100%
call   3221 returned 100%
call   3222 returned 100%
call   3223 returned 100%
call   3224 returned 100%
call   3225 never executed
call   3226 never executed
call   3227 never executed
call   3228 never executed
call   3229 never executed
call   3230 never executed
call   3231 never executed
call   3232 never executed
call   3233 never executed
call   3234 returned 100%
call   3235 returned 100%
call   3236 returned 100%
call   3237 returned 100%
call   3238 returned 100%
call   3239 returned 100%
branch 3240 taken 100% (fallthrough)
branch 3241 taken 0% (throw)
call   3242 returned 100%
call   3243 returned 100%
branch 3244 taken 100% (fallthrough)
branch 3245 taken 0% (throw)
branch 3246 taken 100% (fallthrough)
branch 3247 taken 0%
call   3248 returned 100%
call   3249 returned 100%
branch 3250 taken 100% (fallthrough)
branch 3251 taken 0% (throw)
call   3252 returned 100%
branch 3253 taken 100% (fallthrough)
branch 3254 taken 0% (throw)
call   3255 returned 100%
branch 3256 taken 100% (fallthrough)
branch 3257 taken 0% (throw)
call   3258 returned 100%
branch 3259 taken 100% (fallthrough)
branch 3260 taken 0% (throw)
call   3261 returned 100%
branch 3262 taken 100% (fallthrough)
branch 3263 taken 0% (throw)
call   3264 returned 100%
call   3265 returned 100%
call   3266 returned 100%
call   3267 returned 100%
call   3268 returned 100%
call   3269 returned 100%
call   3270 returned 100%
call   3271 returned 100%
call   3272 returned 100%
call   3273 returned 100%
call   3274 never executed
call   3275 never executed
call   3276 never executed
call   3277 never executed
call   3278 never executed
call   3279 never executed
call   3280 never executed
call   3281 never executed
call   3282 never executed
call   3283 returned 100%
call   3284 returned 100%
call   3285 returned 100%
call   3286 returned 100%
call   3287 returned 100%
call   3288 returned 100%
branch 3289 taken 100% (fallthrough)
branch 3290 taken 0% (throw)
call   3291 returned 100%
call   3292 returned 100%
branch 3293 taken 100% (fallthrough)
branch 3294 taken 0% (throw)
branch 3295 taken 100% (fallthrough)
branch 3296 taken 0%
call   3297 returned 100%
call   3298 returned 100%
branch 3299 taken 100% (fallthrough)
branch 3300 taken 0% (throw)
call   3301 returned 100%
branch 3302 taken 100% (fallthrough)
branch 3303 taken 0% (throw)
call   3304 returned 100%
branch 3305 taken 100% (fallthrough)
branch 3306 taken 0% (throw)
call   3307 returned 100%
branch 3308 taken 100% (fallthrough)
branch 3309 taken 0% (throw)
call   3310 returned 100%
branch 3311 taken 100% (fallthrough)
branch 3312 taken 0% (throw)
call   3313 returned 100%
call   3314 returned 100%
call   3315 returned 100%
call   3316 returned 100%
call   3317 returned 100%
call   3318 returned 100%
call   3319 returned 100%
call   3320 returned 100%
call   3321 returned 100%
call   3322 returned 100%
call   3323 never executed
call   3324 never executed
call   3325 never executed
call   3326 never executed
call   3327 never executed
call   3328 never executed
call   3329 never executed
call   3330 never executed
call   3331 never executed
call   3332 returned 100%
call   3333 returned 100%
call   3334 returned 100%
call   3335 returned 100%
call   3336 returned 100%
call   3337 returned 100%
branch 3338 taken 100% (fallthrough)
branch 3339 taken 0% (throw)
call   3340 returned 100%
call   3341 returned 100%
branch 3342 taken 100% (fallthrough)
branch 3343 taken 0% (throw)
branch 3344 taken 100% (fallthrough)
branch 3345 taken 0%
call   3346 returned 100%
call   3347 returned 100%
branch 3348 taken 100% (fallthrough)
branch 3349 taken 0% (throw)
call   3350 returned 100%
branch 3351 taken 100% (fallthrough)
branch 3352 taken 0% (throw)
call   3353 returned 100%
branch 3354 taken 100% (fallthrough)
branch 3355 taken 0% (throw)
call   3356 returned 100%
branch 3357 taken 100% (fallthrough)
branch 3358 taken 0% (throw)
call   3359 returned 100%
branch 3360 taken 100% (fallthrough)
branch 3361 taken 0% (throw)
call   3362 returned 100%
call   3363 returned 100%
call   3364 returned 100%
call   3365 returned 100%
call   3366 returned 100%
call   3367 returned 100%
call   3368 returned 100%
call   3369 returned 100%
call   3370 returned 100%
call   3371 returned 100%
call   3372 never executed
call   3373 never executed
call   3374 never executed
call   3375 never executed
call   3376 never executed
call   3377 never executed
call   3378 never executed
call   3379 never executed
call   3380 never executed
call   3381 returned 100%
call   3382 returned 100%
call   3383 returned 100%
call   3384 returned 100%
call   3385 returned 100%
call   3386 returned 100%
branch 3387 taken 100% (fallthrough)
branch 3388 taken 0% (throw)
call   3389 returned 100%
call   3390 returned 100%
branch 3391 taken 100% (fallthrough)
branch 3392 taken 0% (throw)
branch 3393 taken 100% (fallthrough)
branch 3394 taken 0%
call   3395 returned 100%
call   3396 returned 100%
branch 3397 taken 100% (fallthrough)
branch 3398 taken 0% (throw)
call   3399 returned 100%
branch 3400 taken 100% (fallthrough)
branch 3401 taken 0% (throw)
call   3402 returned 100%
branch 3403 taken 100% (fallthrough)
branch 3404 taken 0% (throw)
call   3405 returned 100%
branch 3406 taken 100% (fallthrough)
branch 3407 taken 0% (throw)
call   3408 returned 100%
branch 3409 taken 100% (fallthrough)
branch 3410 taken 0% (throw)
call   3411 returned 100%
call   3412 returned 100%
call   3413 returned 100%
call   3414 returned 100%
call   3415 returned 100%
call   3416 returned 100%
call   3417 returned 100%
call   3418 returned 100%
call   3419 returned 100%
call   3420 returned 100%
call   3421 never executed
call   3422 never executed
call   3423 never executed
call   3424 never executed
call   3425 never executed
call   3426 never executed
call   3427 never executed
call   3428 never executed
call   3429 never executed
call   3430 returned 100%
call   3431 returned 100%
call   3432 returned 100%
call   3433 returned 100%
call   3434 returned 100%
call   3435 returned 100%
branch 3436 taken 100% (fallthrough)
branch 3437 taken 0% (throw)
call   3438 returned 100%
call   3439 returned 100%
branch 3440 taken 100% (fallthrough)
branch 3441 taken 0% (throw)
branch 3442 taken 100% (fallthrough)
branch 3443 taken 0%
call   3444 returned 100%
call   3445 returned 100%
branch 3446 taken 100% (fallthrough)
branch 3447 taken 0% (throw)
call   3448 returned 100%
branch 3449 taken 100% (fallthrough)
branch 3450 taken 0% (throw)
call   3451 returned 100%
branch 3452 taken 100% (fallthrough)
branch 3453 taken 0% (throw)
call   3454 returned 100%
branch 3455 taken 100% (fallthrough)
branch 3456 taken 0% (throw)
call   3457 returned 100%
branch 3458 taken 100% (fallthrough)
branch 3459 taken 0% (throw)
call   3460 returned 100%
call   3461 returned 100%
call   3462 returned 100%
call   3463 returned 100%
call   3464 returned 100%
call   3465 returned 100%
call   3466 returned 100%
call   3467 returned 100%
call   3468 returned 100%
call   3469 returned 100%
call   3470 never executed
call   3471 never executed
call   3472 never executed
call   3473 never executed
call   3474 never executed
call   3475 never executed
call   3476 never executed
call   3477 never executed
call   3478 never executed
call   3479 returned 100%
call   3480 returned 100%
call   3481 returned 100%
call   3482 returned 100%
call   3483 returned 100%
call   3484 returned 100%
branch 3485 taken 100% (fallthrough)
branch 3486 taken 0% (throw)
call   3487 returned 100%
call   3488 returned 100%
branch 3489 taken 100% (fallthrough)
branch 3490 taken 0% (throw)
branch 3491 taken 100% (fallthrough)
branch 3492 taken 0%
call   3493 returned 100%
call   3494 returned 100%
branch 3495 taken 100% (fallthrough)
branch 3496 taken 0% (throw)
call   3497 returned 100%
branch 3498 taken 100% (fallthrough)
branch 3499 taken 0% (throw)
call   3500 returned 100%
branch 3501 taken 100% (fallthrough)
branch 3502 taken 0% (throw)
call   3503 returned 100%
branch 3504 taken 100% (fallthrough)
branch 3505 taken 0% (throw)
call   3506 returned 100%
branch 3507 taken 100% (fallthrough)
branch 3508 taken 0% (throw)
call   3509 returned 100%
call   3510 returned 100%
call   3511 returned 100%
call   3512 returned 100%
call   3513 returned 100%
call   3514 returned 100%
call   3515 returned 100%
call   3516 returned 100%
call   3517 returned 100%
call   3518 returned 100%
call   3519 never executed
call   3520 never executed
call   3521 never executed
call   3522 never executed
call   3523 never executed
call   3524 never executed
call   3525 never executed
call   3526 never executed
call   3527 never executed
call   3528 returned 100%
call   3529 returned 100%
call   3530 returned 100%
call   3531 returned 100%
call   3532 returned 100%
call   3533 returned 100%
branch 3534 taken 100% (fallthrough)
branch 3535 taken 0% (throw)
call   3536 returned 100%
call   3537 returned 100%
branch 3538 taken 100% (fallthrough)
branch 3539 taken 0% (throw)
branch 3540 taken 100% (fallthrough)
branch 3541 taken 0%
call   3542 returned 100%
call   3543 returned 100%
branch 3544 taken 100% (fallthrough)
branch 3545 taken 0% (throw)
call   3546 returned 100%
branch 3547 taken 100% (fallthrough)
branch 3548 taken 0% (throw)
call   3549 returned 100%
branch 3550 taken 100% (fallthrough)
branch 3551 taken 0% (throw)
call   3552 returned 100%
branch 3553 taken 100% (fallthrough)
branch 3554 taken 0% (throw)
call   3555 returned 100%
branch 3556 taken 100% (fallthrough)
branch 3557 taken 0% (throw)
call   3558 returned 100%
call   3559 returned 100%
call   3560 returned 100%
call   3561 returned 100%
call   3562 returned 100%
call   3563 returned 100%
call   3564 returned 100%
call   3565 returned 100%
call   3566 returned 100%
call   3567 returned 100%
call   3568 never executed
call   3569 never executed
call   3570 never executed
call   3571 never executed
call   3572 never executed
call   3573 never executed
call   3574 never executed
call   3575 never executed
call   3576 never executed
call   3577 returned 100%
call   3578 returned 100%
call   3579 returned 100%
call   3580 returned 100%
call   3581 returned 100%
call   3582 returned 100%
branch 3583 taken 100% (fallthrough)
branch 3584 taken 0% (throw)
call   3585 returned 100%
call   3586 returned 100%
branch 3587 taken 100% (fallthrough)
branch 3588 taken 0% (throw)
branch 3589 taken 100% (fallthrough)
branch 3590 taken 0%
call   3591 returned 100%
call   3592 returned 100%
branch 3593 taken 100% (fallthrough)
branch 3594 taken 0% (throw)
call   3595 returned 100%
branch 3596 taken 100% (fallthrough)
branch 3597 taken 0% (throw)
call   3598 returned 100%
branch 3599 taken 100% (fallthrough)
branch 3600 taken 0% (throw)
call   3601 returned 100%
branch 3602 taken 100% (fallthrough)
branch 3603 taken 0% (throw)
call   3604 returned 100%
branch 3605 taken 100% (fallthrough)
branch 3606 taken 0% (throw)
call   3607 returned 100%
call   3608 returned 100%
call   3609 returned 100%
call   3610 returned 100%
call   3611 returned 100%
call   3612 returned 100%
call   3613 returned 100%
call   3614 returned 100%
call   3615 returned 100%
call   3616 returned 100%
call   3617 never executed
call   3618 never executed
call   3619 never executed
call   3620 never executed
call   3621 never executed
call   3622 never executed
call   3623 never executed
call   3624 never executed
call   3625 never executed
call   3626 returned 100%
call   3627 returned 100%
call   3628 returned 100%
call   3629 returned 100%
call   3630 returned 100%
call   3631 returned 100%
branch 3632 taken 100% (fallthrough)
branch 3633 taken 0% (throw)
call   3634 returned 100%
call   3635 returned 100%
branch 3636 taken 100% (fallthrough)
branch 3637 taken 0% (throw)
branch 3638 taken 100% (fallthrough)
branch 3639 taken 0%
call   3640 returned 100%
call   3641 returned 100%
branch 3642 taken 100% (fallthrough)
branch 3643 taken 0% (throw)
call   3644 returned 100%
branch 3645 taken 100% (fallthrough)
branch 3646 taken 0% (throw)
call   3647 returned 100%
branch 3648 taken 100% (fallthrough)
branch 3649 taken 0% (throw)
call   3650 returned 100%
branch 3651 taken 100% (fallthrough)
branch 3652 taken 0% (throw)
call   3653 returned 100%
branch 3654 taken 100% (fallthrough)
branch 3655 taken 0% (throw)
call   3656 returned 100%
call   3657 returned 100%
call   3658 returned 100%
call   3659 returned 100%
call   3660 returned 100%
call   3661 returned 100%
call   3662 returned 100%
call   3663 returned 100%
call   3664 returned 100%
call   3665 returned 100%
call   3666 never executed
call   3667 never executed
call   3668 never executed
call   3669 never executed
call   3670 never executed
call   3671 never executed
call   3672 never executed
call   3673 never executed
call   3674 never executed
call   3675 returned 100%
call   3676 returned 100%
call   3677 returned 100%
call   3678 returned 100%
call   3679 returned 100%
call   3680 returned 100%
branch 3681 taken 100% (fallthrough)
branch 3682 taken 0% (throw)
call   3683 returned 100%
call   3684 returned 100%
branch 3685 taken 100% (fallthrough)
branch 3686 taken 0% (throw)
branch 3687 taken 100% (fallthrough)
branch 3688 taken 0%
call   3689 returned 100%
call   3690 returned 100%
branch 3691 taken 100% (fallthrough)
branch 3692 taken 0% (throw)
call   3693 returned 100%
branch 3694 taken 100% (fallthrough)
branch 3695 taken 0% (throw)
call   3696 returned 100%
branch 3697 taken 100% (fallthrough)
branch 3698 taken 0% (throw)
call   3699 returned 100%
branch 3700 taken 100% (fallthrough)
branch 3701 taken 0% (throw)
call   3702 returned 100%
branch 3703 taken 100% (fallthrough)
branch 3704 taken 0% (throw)
call   3705 returned 100%
call   3706 returned 100%
call   3707 returned 100%
call   3708 returned 100%
call   3709 returned 100%
call   3710 returned 100%
call   3711 returned 100%
call   3712 returned 100%
call   3713 returned 100%
call   3714 returned 100%
call   3715 never executed
call   3716 never executed
call   3717 never executed
call   3718 never executed
call   3719 never executed
call   3720 never executed
call   3721 never executed
call   3722 never executed
call   3723 never executed
call   3724 returned 100%
call   3725 returned 100%
call   3726 returned 100%
call   3727 returned 100%
call   3728 returned 100%
call   3729 returned 100%
branch 3730 taken 100% (fallthrough)
branch 3731 taken 0% (throw)
call   3732 returned 100%
call   3733 returned 100%
branch 3734 taken 100% (fallthrough)
branch 3735 taken 0% (throw)
branch 3736 taken 100% (fallthrough)
branch 3737 taken 0%
call   3738 returned 100%
call   3739 returned 100%
branch 3740 taken 100% (fallthrough)
branch 3741 taken 0% (throw)
call   3742 returned 100%
branch 3743 taken 100% (fallthrough)
branch 3744 taken 0% (throw)
call   3745 returned 100%
branch 3746 taken 100% (fallthrough)
branch 3747 taken 0% (throw)
call   3748 returned 100%
branch 3749 taken 100% (fallthrough)
branch 3750 taken 0% (throw)
call   3751 returned 100%
branch 3752 taken 100% (fallthrough)
branch 3753 taken 0% (throw)
call   3754 returned 100%
call   3755 returned 100%
call   3756 returned 100%
call   3757 returned 100%
call   3758 returned 100%
call   3759 returned 100%
call   3760 returned 100%
call   3761 returned 100%
call   3762 returned 100%
call   3763 returned 100%
call   3764 never executed
call   3765 never executed
call   3766 never executed
call   3767 never executed
call   3768 never executed
call   3769 never executed
call   3770 never executed
call   3771 never executed
call   3772 never executed
call   3773 returned 100%
call   3774 returned 100%
call   3775 returned 100%
call   3776 returned 100%
call   3777 returned 100%
call   3778 returned 100%
branch 3779 taken 100% (fallthrough)
branch 3780 taken 0% (throw)
call   3781 returned 100%
call   3782 returned 100%
branch 3783 taken 100% (fallthrough)
branch 3784 taken 0% (throw)
branch 3785 taken 100% (fallthrough)
branch 3786 taken 0%
call   3787 returned 100%
call   3788 returned 100%
branch 3789 taken 100% (fallthrough)
branch 3790 taken 0% (throw)
call   3791 returned 100%
branch 3792 taken 100% (fallthrough)
branch 3793 taken 0% (throw)
call   3794 returned 100%
branch 3795 taken 100% (fallthrough)
branch 3796 taken 0% (throw)
call   3797 returned 100%
branch 3798 taken 100% (fallthrough)
branch 3799 taken 0% (throw)
call   3800 returned 100%
branch 3801 taken 100% (fallthrough)
branch 3802 taken 0% (throw)
call   3803 returned 100%
call   3804 returned 100%
call   3805 returned 100%
call   3806 returned 100%
call   3807 returned 100%
call   3808 returned 100%
call   3809 returned 100%
call   3810 returned 100%
call   3811 returned 100%
call   3812 returned 100%
call   3813 never executed
call   3814 never executed
call   3815 never executed
call   3816 never executed
call   3817 never executed
call   3818 never executed
call   3819 never executed
call   3820 never executed
call   3821 never executed
call   3822 returned 100%
call   3823 returned 100%
call   3824 returned 100%
call   3825 returned 100%
call   3826 returned 100%
call   3827 returned 100%
branch 3828 taken 100% (fallthrough)
branch 3829 taken 0% (throw)
call   3830 returned 100%
call   3831 returned 100%
branch 3832 taken 100% (fallthrough)
branch 3833 taken 0% (throw)
branch 3834 taken 100% (fallthrough)
branch 3835 taken 0%
call   3836 returned 100%
call   3837 returned 100%
branch 3838 taken 100% (fallthrough)
branch 3839 taken 0% (throw)
call   3840 returned 100%
branch 3841 taken 100% (fallthrough)
branch 3842 taken 0% (throw)
call   3843 returned 100%
branch 3844 taken 100% (fallthrough)
branch 3845 taken 0% (throw)
call   3846 returned 100%
branch 3847 taken 100% (fallthrough)
branch 3848 taken 0% (throw)
call   3849 returned 100%
branch 3850 taken 100% (fallthrough)
branch 3851 taken 0% (throw)
call   3852 returned 100%
call   3853 returned 100%
call   3854 returned 100%
call   3855 returned 100%
call   3856 returned 100%
call   3857 returned 100%
call   3858 returned 100%
call   3859 returned 100%
call   3860 returned 100%
call   3861 returned 100%
call   3862 never executed
call   3863 never executed
call   3864 never executed
call   3865 never executed
call   3866 never executed
call   3867 never executed
call   3868 never executed
call   3869 never executed
call   3870 never executed
call   3871 returned 100%
call   3872 returned 100%
call   3873 returned 100%
call   3874 returned 100%
call   3875 returned 100%
call   3876 returned 100%
branch 3877 taken 100% (fallthrough)
branch 3878 taken 0% (throw)
call   3879 returned 100%
call   3880 returned 100%
branch 3881 taken 100% (fallthrough)
branch 3882 taken 0% (throw)
branch 3883 taken 100% (fallthrough)
branch 3884 taken 0%
call   3885 returned 100%
call   3886 returned 100%
branch 3887 taken 100% (fallthrough)
branch 3888 taken 0% (throw)
call   3889 returned 100%
branch 3890 taken 100% (fallthrough)
branch 3891 taken 0% (throw)
call   3892 returned 100%
branch 3893 taken 100% (fallthrough)
branch 3894 taken 0% (throw)
call   3895 returned 100%
branch 3896 taken 100% (fallthrough)
branch 3897 taken 0% (throw)
call   3898 returned 100%
branch 3899 taken 100% (fallthrough)
branch 3900 taken 0% (throw)
call   3901 returned 100%
call   3902 returned 100%
call   3903 returned 100%
call   3904 returned 100%
call   3905 returned 100%
call   3906 returned 100%
call   3907 returned 100%
call   3908 returned 100%
call   3909 returned 100%
call   3910 returned 100%
call   3911 never executed
call   3912 never executed
call   3913 never executed
call   3914 never executed
call   3915 never executed
call   3916 never executed
call   3917 never executed
call   3918 never executed
call   3919 never executed
call   3920 returned 100%
call   3921 returned 100%
call   3922 returned 100%
call   3923 returned 100%
call   3924 returned 100%
call   3925 returned 100%
branch 3926 taken 100% (fallthrough)
branch 3927 taken 0% (throw)
call   3928 returned 100%
call   3929 returned 100%
branch 3930 taken 100% (fallthrough)
branch 3931 taken 0% (throw)
branch 3932 taken 100% (fallthrough)
branch 3933 taken 0%
call   3934 returned 100%
call   3935 returned 100%
branch 3936 taken 100% (fallthrough)
branch 3937 taken 0% (throw)
call   3938 returned 100%
branch 3939 taken 100% (fallthrough)
branch 3940 taken 0% (throw)
call   3941 returned 100%
branch 3942 taken 100% (fallthrough)
branch 3943 taken 0% (throw)
call   3944 returned 100%
branch 3945 taken 100% (fallthrough)
branch 3946 taken 0% (throw)
call   3947 returned 100%
branch 3948 taken 100% (fallthrough)
branch 3949 taken 0% (throw)
call   3950 returned 100%
call   3951 returned 100%
call   3952 returned 100%
call   3953 returned 100%
call   3954 returned 100%
call   3955 returned 100%
call   3956 returned 100%
call   3957 returned 100%
call   3958 returned 100%
call   3959 returned 100%
call   3960 never executed
call   3961 never executed
call   3962 never executed
call   3963 never executed
call   3964 never executed
call   3965 never executed
call   3966 never executed
call   3967 never executed
call   3968 never executed
call   3969 returned 100%
call   3970 returned 100%
call   3971 returned 100%
call   3972 returned 100%
call   3973 returned 100%
call   3974 returned 100%
branch 3975 taken 100% (fallthrough)
branch 3976 taken 0% (throw)
call   3977 returned 100%
call   3978 returned 100%
branch 3979 taken 100% (fallthrough)
branch 3980 taken 0% (throw)
branch 3981 taken 100% (fallthrough)
branch 3982 taken 0%
call   3983 returned 100%
call   3984 returned 100%
branch 3985 taken 100% (fallthrough)
branch 3986 taken 0% (throw)
call   3987 returned 100%
branch 3988 taken 100% (fallthrough)
branch 3989 taken 0% (throw)
call   3990 returned 100%
branch 3991 taken 100% (fallthrough)
branch 3992 taken 0% (throw)
call   3993 returned 100%
branch 3994 taken 100% (fallthrough)
branch 3995 taken 0% (throw)
call   3996 returned 100%
branch 3997 taken 100% (fallthrough)
branch 3998 taken 0% (throw)
call   3999 returned 100%
call   4000 returned 100%
call   4001 returned 100%
call   4002 returned 100%
call   4003 returned 100%
call   4004 returned 100%
call   4005 returned 100%
call   4006 returned 100%
call   4007 returned 100%
call   4008 returned 100%
call   4009 never executed
call   4010 never executed
call   4011 never executed
call   4012 never executed
call   4013 never executed
call   4014 never executed
call   4015 never executed
call   4016 never executed
call   4017 never executed
call   4018 returned 100%
call   4019 returned 100%
call   4020 returned 100%
call   4021 returned 100%
call   4022 returned 100%
call   4023 returned 100%
branch 4024 taken 100% (fallthrough)
branch 4025 taken 0% (throw)
call   4026 returned 100%
call   4027 returned 100%
branch 4028 taken 100% (fallthrough)
branch 4029 taken 0% (throw)
branch 4030 taken 100% (fallthrough)
branch 4031 taken 0%
call   4032 returned 100%
call   4033 returned 100%
branch 4034 taken 100% (fallthrough)
branch 4035 taken 0% (throw)
call   4036 returned 100%
branch 4037 taken 100% (fallthrough)
branch 4038 taken 0% (throw)
call   4039 returned 100%
branch 4040 taken 100% (fallthrough)
branch 4041 taken 0% (throw)
call   4042 returned 100%
branch 4043 taken 100% (fallthrough)
branch 4044 taken 0% (throw)
call   4045 returned 100%
branch 4046 taken 100% (fallthrough)
branch 4047 taken 0% (throw)
call   4048 returned 100%
call   4049 returned 100%
call   4050 returned 100%
call   4051 returned 100%
call   4052 returned 100%
call   4053 returned 100%
call   4054 returned 100%
call   4055 returned 100%
call   4056 returned 100%
call   4057 returned 100%
call   4058 never executed
call   4059 never executed
call   4060 never executed
call   4061 never executed
call   4062 never executed
call   4063 never executed
call   4064 never executed
call   4065 never executed
call   4066 never executed
call   4067 returned 100%
call   4068 returned 100%
call   4069 returned 100%
call   4070 returned 100%
call   4071 returned 100%
call   4072 returned 100%
branch 4073 taken 100% (fallthrough)
branch 4074 taken 0% (throw)
call   4075 returned 100%
call   4076 returned 100%
branch 4077 taken 100% (fallthrough)
branch 4078 taken 0% (throw)
branch 4079 taken 100% (fallthrough)
branch 4080 taken 0%
call   4081 returned 100%
call   4082 returned 100%
branch 4083 taken 100% (fallthrough)
branch 4084 taken 0% (throw)
call   4085 returned 100%
branch 4086 taken 100% (fallthrough)
branch 4087 taken 0% (throw)
call   4088 returned 100%
branch 4089 taken 100% (fallthrough)
branch 4090 taken 0% (throw)
call   4091 returned 100%
branch 4092 taken 100% (fallthrough)
branch 4093 taken 0% (throw)
call   4094 returned 100%
branch 4095 taken 100% (fallthrough)
branch 4096 taken 0% (throw)
call   4097 returned 100%
call   4098 returned 100%
call   4099 returned 100%
call   4100 returned 100%
call   4101 returned 100%
call   4102 returned 100%
call   4103 returned 100%
call   4104 returned 100%
call   4105 returned 100%
call   4106 returned 100%
call   4107 never executed
call   4108 never executed
call   4109 never executed
call   4110 never executed
call   4111 never executed
call   4112 never executed
call   4113 never executed
call   4114 never executed
call   4115 never executed
call   4116 returned 100%
call   4117 returned 100%
call   4118 returned 100%
call   4119 returned 100%
call   4120 returned 100%
call   4121 returned 100%
branch 4122 taken 100% (fallthrough)
branch 4123 taken 0% (throw)
call   4124 returned 100%
call   4125 returned 100%
branch 4126 taken 100% (fallthrough)
branch 4127 taken 0% (throw)
branch 4128 taken 100% (fallthrough)
branch 4129 taken 0%
call   4130 returned 100%
call   4131 returned 100%
branch 4132 taken 100% (fallthrough)
branch 4133 taken 0% (throw)
call   4134 returned 100%
branch 4135 taken 100% (fallthrough)
branch 4136 taken 0% (throw)
call   4137 returned 100%
branch 4138 taken 100% (fallthrough)
branch 4139 taken 0% (throw)
call   4140 returned 100%
branch 4141 taken 100% (fallthrough)
branch 4142 taken 0% (throw)
call   4143 returned 100%
branch 4144 taken 100% (fallthrough)
branch 4145 taken 0% (throw)
call   4146 returned 100%
call   4147 returned 100%
call   4148 returned 100%
call   4149 returned 100%
call   4150 returned 100%
call   4151 returned 100%
call   4152 returned 100%
call   4153 returned 100%
call   4154 returned 100%
call   4155 returned 100%
call   4156 never executed
call   4157 never executed
call   4158 never executed
call   4159 never executed
call   4160 never executed
call   4161 never executed
call   4162 never executed
call   4163 never executed
call   4164 never executed
call   4165 returned 100%
call   4166 returned 100%
call   4167 returned 100%
call   4168 returned 100%
call   4169 returned 100%
call   4170 returned 100%
branch 4171 taken 100% (fallthrough)
branch 4172 taken 0% (throw)
call   4173 returned 100%
call   4174 returned 100%
branch 4175 taken 100% (fallthrough)
branch 4176 taken 0% (throw)
branch 4177 taken 100% (fallthrough)
branch 4178 taken 0%
call   4179 returned 100%
call   4180 returned 100%
branch 4181 taken 100% (fallthrough)
branch 4182 taken 0% (throw)
call   4183 returned 100%
branch 4184 taken 100% (fallthrough)
branch 4185 taken 0% (throw)
call   4186 returned 100%
branch 4187 taken 100% (fallthrough)
branch 4188 taken 0% (throw)
call   4189 returned 100%
branch 4190 taken 100% (fallthrough)
branch 4191 taken 0% (throw)
call   4192 returned 100%
branch 4193 taken 100% (fallthrough)
branch 4194 taken 0% (throw)
call   4195 returned 100%
call   4196 returned 100%
call   4197 returned 100%
call   4198 returned 100%
call   4199 returned 100%
call   4200 returned 100%
call   4201 returned 100%
call   4202 returned 100%
call   4203 returned 100%
call   4204 returned 100%
call   4205 never executed
call   4206 never executed
call   4207 never executed
call   4208 never executed
call   4209 never executed
call   4210 never executed
call   4211 never executed
call   4212 never executed
call   4213 never executed
call   4214 returned 100%
call   4215 returned 100%
call   4216 returned 100%
call   4217 returned 100%
call   4218 returned 100%
call   4219 returned 100%
branch 4220 taken 100% (fallthrough)
branch 4221 taken 0% (throw)
call   4222 returned 100%
call   4223 returned 100%
branch 4224 taken 100% (fallthrough)
branch 4225 taken 0% (throw)
branch 4226 taken 100% (fallthrough)
branch 4227 taken 0%
call   4228 returned 100%
call   4229 returned 100%
branch 4230 taken 100% (fallthrough)
branch 4231 taken 0% (throw)
call   4232 returned 100%
branch 4233 taken 100% (fallthrough)
branch 4234 taken 0% (throw)
call   4235 returned 100%
branch 4236 taken 100% (fallthrough)
branch 4237 taken 0% (throw)
call   4238 returned 100%
branch 4239 taken 100% (fallthrough)
branch 4240 taken 0% (throw)
call   4241 returned 100%
branch 4242 taken 100% (fallthrough)
branch 4243 taken 0% (throw)
call   4244 returned 100%
call   4245 returned 100%
call   4246 returned 100%
call   4247 returned 100%
call   4248 returned 100%
call   4249 returned 100%
call   4250 returned 100%
call   4251 returned 100%
call   4252 returned 100%
call   4253 returned 100%
call   4254 never executed
call   4255 never executed
call   4256 never executed
call   4257 never executed
call   4258 never executed
call   4259 never executed
call   4260 never executed
call   4261 never executed
call   4262 never executed
call   4263 returned 100%
call   4264 returned 100%
call   4265 returned 100%
call   4266 returned 100%
call   4267 returned 100%
call   4268 returned 100%
branch 4269 taken 100% (fallthrough)
branch 4270 taken 0% (throw)
call   4271 returned 100%
call   4272 returned 100%
branch 4273 taken 100% (fallthrough)
branch 4274 taken 0% (throw)
branch 4275 taken 100% (fallthrough)
branch 4276 taken 0%
call   4277 returned 100%
call   4278 returned 100%
branch 4279 taken 100% (fallthrough)
branch 4280 taken 0% (throw)
call   4281 returned 100%
branch 4282 taken 100% (fallthrough)
branch 4283 taken 0% (throw)
call   4284 returned 100%
branch 4285 taken 100% (fallthrough)
branch 4286 taken 0% (throw)
call   4287 returned 100%
branch 4288 taken 100% (fallthrough)
branch 4289 taken 0% (throw)
call   4290 returned 100%
branch 4291 taken 100% (fallthrough)
branch 4292 taken 0% (throw)
call   4293 returned 100%
call   4294 returned 100%
call   4295 returned 100%
call   4296 returned 100%
call   4297 returned 100%
call   4298 returned 100%
call   4299 returned 100%
call   4300 returned 100%
call   4301 returned 100%
call   4302 returned 100%
call   4303 never executed
call   4304 never executed
call   4305 never executed
call   4306 never executed
call   4307 never executed
call   4308 never executed
call   4309 never executed
call   4310 never executed
call   4311 never executed
call   4312 returned 100%
call   4313 returned 100%
call   4314 returned 100%
call   4315 returned 100%
call   4316 returned 100%
call   4317 returned 100%
branch 4318 taken 100% (fallthrough)
branch 4319 taken 0% (throw)
call   4320 returned 100%
call   4321 returned 100%
branch 4322 taken 100% (fallthrough)
branch 4323 taken 0% (throw)
branch 4324 taken 100% (fallthrough)
branch 4325 taken 0%
call   4326 returned 100%
call   4327 returned 100%
branch 4328 taken 100% (fallthrough)
branch 4329 taken 0% (throw)
call   4330 returned 100%
branch 4331 taken 100% (fallthrough)
branch 4332 taken 0% (throw)
call   4333 returned 100%
branch 4334 taken 100% (fallthrough)
branch 4335 taken 0% (throw)
call   4336 returned 100%
branch 4337 taken 100% (fallthrough)
branch 4338 taken 0% (throw)
call   4339 returned 100%
branch 4340 taken 100% (fallthrough)
branch 4341 taken 0% (throw)
call   4342 returned 100%
call   4343 returned 100%
call   4344 returned 100%
call   4345 returned 100%
call   4346 returned 100%
call   4347 returned 100%
call   4348 returned 100%
call   4349 returned 100%
call   4350 returned 100%
call   4351 returned 100%
call   4352 never executed
call   4353 never executed
call   4354 never executed
call   4355 never executed
call   4356 never executed
call   4357 never executed
call   4358 never executed
call   4359 never executed
call   4360 never executed
call   4361 returned 100%
call   4362 returned 100%
call   4363 returned 100%
call   4364 returned 100%
call   4365 returned 100%
call   4366 returned 100%
branch 4367 taken 100% (fallthrough)
branch 4368 taken 0% (throw)
call   4369 returned 100%
call   4370 returned 100%
branch 4371 taken 100% (fallthrough)
branch 4372 taken 0% (throw)
branch 4373 taken 100% (fallthrough)
branch 4374 taken 0%
call   4375 returned 100%
call   4376 returned 100%
branch 4377 taken 100% (fallthrough)
branch 4378 taken 0% (throw)
call   4379 returned 100%
branch 4380 taken 100% (fallthrough)
branch 4381 taken 0% (throw)
call   4382 returned 100%
branch 4383 taken 100% (fallthrough)
branch 4384 taken 0% (throw)
call   4385 returned 100%
branch 4386 taken 100% (fallthrough)
branch 4387 taken 0% (throw)
call   4388 returned 100%
branch 4389 taken 100% (fallthrough)
branch 4390 taken 0% (throw)
call   4391 returned 100%
call   4392 returned 100%
call   4393 returned 100%
call   4394 returned 100%
call   4395 returned 100%
call   4396 returned 100%
call   4397 returned 100%
call   4398 returned 100%
call   4399 returned 100%
call   4400 returned 100%
call   4401 never executed
call   4402 never executed
call   4403 never executed
call   4404 never executed
call   4405 never executed
call   4406 never executed
call   4407 never executed
call   4408 never executed
call   4409 never executed
        -:  590:
        -:  591:    // Next, recurses (at compile time) with the tail of the type list.
        -:  592:    return TypeParameterizedTest<Fixture, TestSel, typename Types::Tail>
       90:  593:        ::Register(prefix, case_name, test_names, index + 1);
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
call    9 returned 100%
call   10 returned 100%
call   11 returned 100%
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
call   15 returned 100%
call   16 returned 100%
call   17 returned 100%
call   18 returned 100%
call   19 returned 100%
call   20 returned 100%
call   21 returned 100%
call   22 returned 100%
call   23 returned 100%
call   24 returned 100%
call   25 returned 100%
call   26 returned 100%
call   27 returned 100%
call   28 returned 100%
call   29 returned 100%
call   30 returned 100%
call   31 returned 100%
call   32 returned 100%
call   33 returned 100%
call   34 returned 100%
call   35 returned 100%
call   36 returned 100%
call   37 returned 100%
call   38 returned 100%
call   39 returned 100%
call   40 returned 100%
call   41 returned 100%
call   42 returned 100%
call   43 returned 100%
call   44 returned 100%
call   45 returned 100%
call   46 returned 100%
call   47 returned 100%
call   48 returned 100%
call   49 returned 100%
call   50 returned 100%
call   51 returned 100%
call   52 returned 100%
call   53 returned 100%
call   54 returned 100%
call   55 returned 100%
call   56 returned 100%
call   57 returned 100%
call   58 returned 100%
call   59 returned 100%
call   60 returned 100%
call   61 returned 100%
call   62 returned 100%
call   63 returned 100%
call   64 returned 100%
call   65 returned 100%
call   66 returned 100%
call   67 returned 100%
call   68 returned 100%
call   69 returned 100%
call   70 returned 100%
call   71 returned 100%
call   72 returned 100%
call   73 returned 100%
call   74 returned 100%
call   75 returned 100%
call   76 returned 100%
call   77 returned 100%
call   78 returned 100%
call   79 returned 100%
call   80 returned 100%
call   81 returned 100%
call   82 returned 100%
call   83 returned 100%
call   84 returned 100%
call   85 returned 100%
call   86 returned 100%
call   87 returned 100%
call   88 returned 100%
call   89 returned 100%
        -:  594:  }
        -:  595:};
        -:  596:
        -:  597:// The base case for the compile time recursion.
        -:  598:template <GTEST_TEMPLATE_ Fixture, class TestSel>
        -:  599:class TypeParameterizedTest<Fixture, TestSel, Types0> {
        -:  600: public:
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusequal1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI44Deque_Fixture_iter_plus_op_equal_test_4_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI34Deque_Fixture_iter_plusequal1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI39Deque_Fixture_iter_minusminuspost1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI35Deque_Fixture_iter_minusminus1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI37Deque_Fixture_iter_postplusplus1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_plusplus1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_arrow_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_star1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus4_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_minus1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI29Deque_Fixture_iter_plus1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI33Deque_Fixture_iter_notequal1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_iter_equal1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop5_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop4_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI30Deque_Fixture_lessthanop1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop3_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop2_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI27Deque_Fixture_equalop1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
function _ZN7testing8internal21TypeParameterizedTestI13Deque_FixtureNS0_11TemplateSelI25Deque_Fixture_test_1_TestEENS0_6Types0EE8RegisterEPKcS9_S9_i called 1 returned 100% blocks executed 100%
       45:  601:  static bool Register(const char* /*prefix*/, const char* /*case_name*/,
        -:  602:                       const char* /*test_names*/, int /*index*/) {
       45:  603:    return true;
        -:  604:  }
        -:  605:};
        -:  606:
        -:  607:// TypeParameterizedTestCase<Fixture, Tests, Types>::Register()
        -:  608:// registers *all combinations* of 'Tests' and 'Types' with Google
        -:  609:// Test.  The return value is insignificant - we just need to return
        -:  610:// something such that we can call this function in a namespace scope.
        -:  611:template <GTEST_TEMPLATE_ Fixture, typename Tests, typename Types>
        -:  612:class TypeParameterizedTestCase {
        -:  613: public:
        -:  614:  static bool Register(const char* prefix, const char* case_name,
        -:  615:                       const char* test_names) {
        -:  616:    typedef typename Tests::Head Head;
        -:  617:
        -:  618:    // First, register the first test in 'Test' for each type in 'Types'.
        -:  619:    TypeParameterizedTest<Fixture, Head, Types>::Register(
        -:  620:        prefix, case_name, test_names, 0);
        -:  621:
        -:  622:    // Next, recurses (at compile time) with the tail of the test list.
        -:  623:    return TypeParameterizedTestCase<Fixture, typename Tests::Tail, Types>
        -:  624:        ::Register(prefix, case_name, SkipComma(test_names));
        -:  625:  }
        -:  626:};
        -:  627:
        -:  628:// The base case for the compile time recursion.
        -:  629:template <GTEST_TEMPLATE_ Fixture, typename Types>
        -:  630:class TypeParameterizedTestCase<Fixture, Templates0, Types> {
        -:  631: public:
        -:  632:  static bool Register(const char* /*prefix*/, const char* /*case_name*/,
        -:  633:                       const char* /*test_names*/) {
        -:  634:    return true;
        -:  635:  }
        -:  636:};
        -:  637:
        -:  638:#endif  // GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P
        -:  639:
        -:  640:// Returns the current OS stack trace as an std::string.
        -:  641://
        -:  642:// The maximum number of stack frames to be included is specified by
        -:  643:// the gtest_stack_trace_depth flag.  The skip_count parameter
        -:  644:// specifies the number of top frames to be skipped, which doesn't
        -:  645:// count against the number of frames to be included.
        -:  646://
        -:  647:// For example, if Foo() calls Bar(), which in turn calls
        -:  648:// GetCurrentOsStackTraceExceptTop(..., 1), Foo() will be included in
        -:  649:// the trace but Bar() and GetCurrentOsStackTraceExceptTop() won't.
        -:  650:GTEST_API_ std::string GetCurrentOsStackTraceExceptTop(
        -:  651:    UnitTest* unit_test, int skip_count);
        -:  652:
        -:  653:// Helpers for suppressing warnings on unreachable code or constant
        -:  654:// condition.
        -:  655:
        -:  656:// Always returns true.
        -:  657:GTEST_API_ bool AlwaysTrue();
        -:  658:
        -:  659:// Always returns false.
        -:  660:inline bool AlwaysFalse() { return !AlwaysTrue(); }
        -:  661:
        -:  662:// Helper for suppressing false warning from Clang on a const char*
        -:  663:// variable declared in a conditional expression always being NULL in
        -:  664:// the else branch.
        -:  665:struct GTEST_API_ ConstCharPtr {
        -:  666:  ConstCharPtr(const char* str) : value(str) {}
        -:  667:  operator bool() const { return true; }
        -:  668:  const char* value;
        -:  669:};
        -:  670:
        -:  671:// A simple Linear Congruential Generator for generating random
        -:  672:// numbers with a uniform distribution.  Unlike rand() and srand(), it
        -:  673:// doesn't use global state (and therefore can't interfere with user
        -:  674:// code).  Unlike rand_r(), it's portable.  An LCG isn't very random,
        -:  675:// but it's good enough for our purposes.
        -:  676:class GTEST_API_ Random {
        -:  677: public:
        -:  678:  static const UInt32 kMaxRange = 1u << 31;
        -:  679:
        -:  680:  explicit Random(UInt32 seed) : state_(seed) {}
        -:  681:
        -:  682:  void Reseed(UInt32 seed) { state_ = seed; }
        -:  683:
        -:  684:  // Generates a random number from [0, range).  Crashes if 'range' is
        -:  685:  // 0 or greater than kMaxRange.
        -:  686:  UInt32 Generate(UInt32 range);
        -:  687:
        -:  688: private:
        -:  689:  UInt32 state_;
        -:  690:  GTEST_DISALLOW_COPY_AND_ASSIGN_(Random);
        -:  691:};
        -:  692:
        -:  693:// Defining a variable of type CompileAssertTypesEqual<T1, T2> will cause a
        -:  694:// compiler error iff T1 and T2 are different types.
        -:  695:template <typename T1, typename T2>
        -:  696:struct CompileAssertTypesEqual;
        -:  697:
        -:  698:template <typename T>
        -:  699:struct CompileAssertTypesEqual<T, T> {
        -:  700:};
        -:  701:
        -:  702:// Removes the reference from a type if it is a reference type,
        -:  703:// otherwise leaves it unchanged.  This is the same as
        -:  704:// tr1::remove_reference, which is not widely available yet.
        -:  705:template <typename T>
        -:  706:struct RemoveReference { typedef T type; };  // NOLINT
        -:  707:template <typename T>
        -:  708:struct RemoveReference<T&> { typedef T type; };  // NOLINT
        -:  709:
        -:  710:// A handy wrapper around RemoveReference that works when the argument
        -:  711:// T depends on template parameters.
        -:  712:#define GTEST_REMOVE_REFERENCE_(T) \
        -:  713:    typename ::testing::internal::RemoveReference<T>::type
        -:  714:
        -:  715:// Removes const from a type if it is a const type, otherwise leaves
        -:  716:// it unchanged.  This is the same as tr1::remove_const, which is not
        -:  717:// widely available yet.
        -:  718:template <typename T>
        -:  719:struct RemoveConst { typedef T type; };  // NOLINT
        -:  720:template <typename T>
        -:  721:struct RemoveConst<const T> { typedef T type; };  // NOLINT
        -:  722:
        -:  723:// MSVC 8.0, Sun C++, and IBM XL C++ have a bug which causes the above
        -:  724:// definition to fail to remove the const in 'const int[3]' and 'const
        -:  725:// char[3][4]'.  The following specialization works around the bug.
        -:  726:template <typename T, size_t N>
        -:  727:struct RemoveConst<const T[N]> {
        -:  728:  typedef typename RemoveConst<T>::type type[N];
        -:  729:};
        -:  730:
        -:  731:#if defined(_MSC_VER) && _MSC_VER < 1400
        -:  732:// This is the only specialization that allows VC++ 7.1 to remove const in
        -:  733:// 'const int[3] and 'const int[3][4]'.  However, it causes trouble with GCC
        -:  734:// and thus needs to be conditionally compiled.
        -:  735:template <typename T, size_t N>
        -:  736:struct RemoveConst<T[N]> {
        -:  737:  typedef typename RemoveConst<T>::type type[N];
        -:  738:};
        -:  739:#endif
        -:  740:
        -:  741:// A handy wrapper around RemoveConst that works when the argument
        -:  742:// T depends on template parameters.
        -:  743:#define GTEST_REMOVE_CONST_(T) \
        -:  744:    typename ::testing::internal::RemoveConst<T>::type
        -:  745:
        -:  746:// Turns const U&, U&, const U, and U all into U.
        -:  747:#define GTEST_REMOVE_REFERENCE_AND_CONST_(T) \
        -:  748:    GTEST_REMOVE_CONST_(GTEST_REMOVE_REFERENCE_(T))
        -:  749:
        -:  750:// Adds reference to a type if it is not a reference type,
        -:  751:// otherwise leaves it unchanged.  This is the same as
        -:  752:// tr1::add_reference, which is not widely available yet.
        -:  753:template <typename T>
        -:  754:struct AddReference { typedef T& type; };  // NOLINT
        -:  755:template <typename T>
        -:  756:struct AddReference<T&> { typedef T& type; };  // NOLINT
        -:  757:
        -:  758:// A handy wrapper around AddReference that works when the argument T
        -:  759:// depends on template parameters.
        -:  760:#define GTEST_ADD_REFERENCE_(T) \
        -:  761:    typename ::testing::internal::AddReference<T>::type
        -:  762:
        -:  763:// Adds a reference to const on top of T as necessary.  For example,
        -:  764:// it transforms
        -:  765://
        -:  766://   char         ==> const char&
        -:  767://   const char   ==> const char&
        -:  768://   char&        ==> const char&
        -:  769://   const char&  ==> const char&
        -:  770://
        -:  771:// The argument T must depend on some template parameters.
        -:  772:#define GTEST_REFERENCE_TO_CONST_(T) \
        -:  773:    GTEST_ADD_REFERENCE_(const GTEST_REMOVE_REFERENCE_(T))
        -:  774:
        -:  775:// ImplicitlyConvertible<From, To>::value is a compile-time bool
        -:  776:// constant that's true iff type From can be implicitly converted to
        -:  777:// type To.
        -:  778:template <typename From, typename To>
        -:  779:class ImplicitlyConvertible {
        -:  780: private:
        -:  781:  // We need the following helper functions only for their types.
        -:  782:  // They have no implementations.
        -:  783:
        -:  784:  // MakeFrom() is an expression whose type is From.  We cannot simply
        -:  785:  // use From(), as the type From may not have a public default
        -:  786:  // constructor.
        -:  787:  static From MakeFrom();
        -:  788:
        -:  789:  // These two functions are overloaded.  Given an expression
        -:  790:  // Helper(x), the compiler will pick the first version if x can be
        -:  791:  // implicitly converted to type To; otherwise it will pick the
        -:  792:  // second version.
        -:  793:  //
        -:  794:  // The first version returns a value of size 1, and the second
        -:  795:  // version returns a value of size 2.  Therefore, by checking the
        -:  796:  // size of Helper(x), which can be done at compile time, we can tell
        -:  797:  // which version of Helper() is used, and hence whether x can be
        -:  798:  // implicitly converted to type To.
        -:  799:  static char Helper(To);
        -:  800:  static char (&Helper(...))[2];  // NOLINT
        -:  801:
        -:  802:  // We have to put the 'public' section after the 'private' section,
        -:  803:  // or MSVC refuses to compile the code.
        -:  804: public:
        -:  805:  // MSVC warns about implicitly converting from double to int for
        -:  806:  // possible loss of data, so we need to temporarily disable the
        -:  807:  // warning.
        -:  808:#ifdef _MSC_VER
        -:  809:# pragma warning(push)          // Saves the current warning state.
        -:  810:# pragma warning(disable:4244)  // Temporarily disables warning 4244.
        -:  811:
        -:  812:  static const bool value =
        -:  813:      sizeof(Helper(ImplicitlyConvertible::MakeFrom())) == 1;
        -:  814:# pragma warning(pop)           // Restores the warning state.
        -:  815:#elif defined(__BORLANDC__)
        -:  816:  // C++Builder cannot use member overload resolution during template
        -:  817:  // instantiation.  The simplest workaround is to use its C++0x type traits
        -:  818:  // functions (C++Builder 2009 and above only).
        -:  819:  static const bool value = __is_convertible(From, To);
        -:  820:#else
        -:  821:  static const bool value =
        -:  822:      sizeof(Helper(ImplicitlyConvertible::MakeFrom())) == 1;
        -:  823:#endif  // _MSV_VER
        -:  824:};
        -:  825:template <typename From, typename To>
        -:  826:const bool ImplicitlyConvertible<From, To>::value;
        -:  827:
        -:  828:// IsAProtocolMessage<T>::value is a compile-time bool constant that's
        -:  829:// true iff T is type ProtocolMessage, proto2::Message, or a subclass
        -:  830:// of those.
        -:  831:template <typename T>
        -:  832:struct IsAProtocolMessage
        -:  833:    : public bool_constant<
        -:  834:  ImplicitlyConvertible<const T*, const ::ProtocolMessage*>::value ||
        -:  835:  ImplicitlyConvertible<const T*, const ::proto2::Message*>::value> {
        -:  836:};
        -:  837:
        -:  838:// When the compiler sees expression IsContainerTest<C>(0), if C is an
        -:  839:// STL-style container class, the first overload of IsContainerTest
        -:  840:// will be viable (since both C::iterator* and C::const_iterator* are
        -:  841:// valid types and NULL can be implicitly converted to them).  It will
        -:  842:// be picked over the second overload as 'int' is a perfect match for
        -:  843:// the type of argument 0.  If C::iterator or C::const_iterator is not
        -:  844:// a valid type, the first overload is not viable, and the second
        -:  845:// overload will be picked.  Therefore, we can determine whether C is
        -:  846:// a container class by checking the type of IsContainerTest<C>(0).
        -:  847:// The value of the expression is insignificant.
        -:  848://
        -:  849:// Note that we look for both C::iterator and C::const_iterator.  The
        -:  850:// reason is that C++ injects the name of a class as a member of the
        -:  851:// class itself (e.g. you can refer to class iterator as either
        -:  852:// 'iterator' or 'iterator::iterator').  If we look for C::iterator
        -:  853:// only, for example, we would mistakenly think that a class named
        -:  854:// iterator is an STL container.
        -:  855://
        -:  856:// Also note that the simpler approach of overloading
        -:  857:// IsContainerTest(typename C::const_iterator*) and
        -:  858:// IsContainerTest(...) doesn't work with Visual Age C++ and Sun C++.
        -:  859:typedef int IsContainer;
        -:  860:template <class C>
        -:  861:IsContainer IsContainerTest(int /* dummy */,
        -:  862:                            typename C::iterator* /* it */ = NULL,
        -:  863:                            typename C::const_iterator* /* const_it */ = NULL) {
        -:  864:  return 0;
        -:  865:}
        -:  866:
        -:  867:typedef char IsNotContainer;
        -:  868:template <class C>
function _ZN7testing8internal15IsContainerTestImEEcl called 0 returned 0% blocks executed 0%
function _ZN7testing8internal15IsContainerTestIiEEcl called 0 returned 0% blocks executed 0%
    #####:  869:IsNotContainer IsContainerTest(long /* dummy */) { return '\0'; }
        -:  870:
        -:  871:// EnableIf<condition>::type is void when 'Cond' is true, and
        -:  872:// undefined when 'Cond' is false.  To use SFINAE to make a function
        -:  873:// overload only apply when a particular expression is true, add
        -:  874:// "typename EnableIf<expression>::type* = 0" as the last parameter.
        -:  875:template<bool> struct EnableIf;
        -:  876:template<> struct EnableIf<true> { typedef void type; };  // NOLINT
        -:  877:
        -:  878:// Utilities for native arrays.
        -:  879:
        -:  880:// ArrayEq() compares two k-dimensional native arrays using the
        -:  881:// elements' operator==, where k can be any integer >= 0.  When k is
        -:  882:// 0, ArrayEq() degenerates into comparing a single pair of values.
        -:  883:
        -:  884:template <typename T, typename U>
        -:  885:bool ArrayEq(const T* lhs, size_t size, const U* rhs);
        -:  886:
        -:  887:// This generic version is used when k is 0.
        -:  888:template <typename T, typename U>
        -:  889:inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }
        -:  890:
        -:  891:// This overload is used when k >= 1.
        -:  892:template <typename T, typename U, size_t N>
        -:  893:inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {
        -:  894:  return internal::ArrayEq(lhs, N, rhs);
        -:  895:}
        -:  896:
        -:  897:// This helper reduces code bloat.  If we instead put its logic inside
        -:  898:// the previous ArrayEq() function, arrays with different sizes would
        -:  899:// lead to different copies of the template code.
        -:  900:template <typename T, typename U>
        -:  901:bool ArrayEq(const T* lhs, size_t size, const U* rhs) {
        -:  902:  for (size_t i = 0; i != size; i++) {
        -:  903:    if (!internal::ArrayEq(lhs[i], rhs[i]))
        -:  904:      return false;
        -:  905:  }
        -:  906:  return true;
        -:  907:}
        -:  908:
        -:  909:// Finds the first element in the iterator range [begin, end) that
        -:  910:// equals elem.  Element may be a native array type itself.
        -:  911:template <typename Iter, typename Element>
        -:  912:Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {
        -:  913:  for (Iter it = begin; it != end; ++it) {
        -:  914:    if (internal::ArrayEq(*it, elem))
        -:  915:      return it;
        -:  916:  }
        -:  917:  return end;
        -:  918:}
        -:  919:
        -:  920:// CopyArray() copies a k-dimensional native array using the elements'
        -:  921:// operator=, where k can be any integer >= 0.  When k is 0,
        -:  922:// CopyArray() degenerates into copying a single value.
        -:  923:
        -:  924:template <typename T, typename U>
        -:  925:void CopyArray(const T* from, size_t size, U* to);
        -:  926:
        -:  927:// This generic version is used when k is 0.
        -:  928:template <typename T, typename U>
        -:  929:inline void CopyArray(const T& from, U* to) { *to = from; }
        -:  930:
        -:  931:// This overload is used when k >= 1.
        -:  932:template <typename T, typename U, size_t N>
        -:  933:inline void CopyArray(const T(&from)[N], U(*to)[N]) {
        -:  934:  internal::CopyArray(from, N, *to);
        -:  935:}
        -:  936:
        -:  937:// This helper reduces code bloat.  If we instead put its logic inside
        -:  938:// the previous CopyArray() function, arrays with different sizes
        -:  939:// would lead to different copies of the template code.
        -:  940:template <typename T, typename U>
        -:  941:void CopyArray(const T* from, size_t size, U* to) {
        -:  942:  for (size_t i = 0; i != size; i++) {
        -:  943:    internal::CopyArray(from[i], to + i);
        -:  944:  }
        -:  945:}
        -:  946:
        -:  947:// The relation between an NativeArray object (see below) and the
        -:  948:// native array it represents.
        -:  949:enum RelationToSource {
        -:  950:  kReference,  // The NativeArray references the native array.
        -:  951:  kCopy        // The NativeArray makes a copy of the native array and
        -:  952:               // owns the copy.
        -:  953:};
        -:  954:
        -:  955:// Adapts a native array to a read-only STL-style container.  Instead
        -:  956:// of the complete STL container concept, this adaptor only implements
        -:  957:// members useful for Google Mock's container matchers.  New members
        -:  958:// should be added as needed.  To simplify the implementation, we only
        -:  959:// support Element being a raw type (i.e. having no top-level const or
        -:  960:// reference modifier).  It's the client's responsibility to satisfy
        -:  961:// this requirement.  Element can be an array type itself (hence
        -:  962:// multi-dimensional arrays are supported).
        -:  963:template <typename Element>
        -:  964:class NativeArray {
        -:  965: public:
        -:  966:  // STL-style container typedefs.
        -:  967:  typedef Element value_type;
        -:  968:  typedef Element* iterator;
        -:  969:  typedef const Element* const_iterator;
        -:  970:
        -:  971:  // Constructs from a native array.
        -:  972:  NativeArray(const Element* array, size_t count, RelationToSource relation) {
        -:  973:    Init(array, count, relation);
        -:  974:  }
        -:  975:
        -:  976:  // Copy constructor.
        -:  977:  NativeArray(const NativeArray& rhs) {
        -:  978:    Init(rhs.array_, rhs.size_, rhs.relation_to_source_);
        -:  979:  }
        -:  980:
        -:  981:  ~NativeArray() {
        -:  982:    // Ensures that the user doesn't instantiate NativeArray with a
        -:  983:    // const or reference type.
        -:  984:    static_cast<void>(StaticAssertTypeEqHelper<Element,
        -:  985:        GTEST_REMOVE_REFERENCE_AND_CONST_(Element)>());
        -:  986:    if (relation_to_source_ == kCopy)
        -:  987:      delete[] array_;
        -:  988:  }
        -:  989:
        -:  990:  // STL-style container methods.
        -:  991:  size_t size() const { return size_; }
        -:  992:  const_iterator begin() const { return array_; }
        -:  993:  const_iterator end() const { return array_ + size_; }
        -:  994:  bool operator==(const NativeArray& rhs) const {
        -:  995:    return size() == rhs.size() &&
        -:  996:        ArrayEq(begin(), size(), rhs.begin());
        -:  997:  }
        -:  998:
        -:  999: private:
        -: 1000:  // Initializes this object; makes a copy of the input array if
        -: 1001:  // 'relation' is kCopy.
        -: 1002:  void Init(const Element* array, size_t a_size, RelationToSource relation) {
        -: 1003:    if (relation == kReference) {
        -: 1004:      array_ = array;
        -: 1005:    } else {
        -: 1006:      Element* const copy = new Element[a_size];
        -: 1007:      CopyArray(array, a_size, copy);
        -: 1008:      array_ = copy;
        -: 1009:    }
        -: 1010:    size_ = a_size;
        -: 1011:    relation_to_source_ = relation;
        -: 1012:  }
        -: 1013:
        -: 1014:  const Element* array_;
        -: 1015:  size_t size_;
        -: 1016:  RelationToSource relation_to_source_;
        -: 1017:
        -: 1018:  GTEST_DISALLOW_ASSIGN_(NativeArray);
        -: 1019:};
        -: 1020:
        -: 1021:}  // namespace internal
        -: 1022:}  // namespace testing
        -: 1023:
        -: 1024:#define GTEST_MESSAGE_AT_(file, line, message, result_type) \
        -: 1025:  ::testing::internal::AssertHelper(result_type, file, line, message) \
        -: 1026:    = ::testing::Message()
        -: 1027:
        -: 1028:#define GTEST_MESSAGE_(message, result_type) \
        -: 1029:  GTEST_MESSAGE_AT_(__FILE__, __LINE__, message, result_type)
        -: 1030:
        -: 1031:#define GTEST_FATAL_FAILURE_(message) \
        -: 1032:  return GTEST_MESSAGE_(message, ::testing::TestPartResult::kFatalFailure)
        -: 1033:
        -: 1034:#define GTEST_NONFATAL_FAILURE_(message) \
        -: 1035:  GTEST_MESSAGE_(message, ::testing::TestPartResult::kNonFatalFailure)
        -: 1036:
        -: 1037:#define GTEST_SUCCESS_(message) \
        -: 1038:  GTEST_MESSAGE_(message, ::testing::TestPartResult::kSuccess)
        -: 1039:
        -: 1040:// Suppresses MSVC warnings 4072 (unreachable code) for the code following
        -: 1041:// statement if it returns or throws (or doesn't return or throw in some
        -: 1042:// situations).
        -: 1043:#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement) \
        -: 1044:  if (::testing::internal::AlwaysTrue()) { statement; }
        -: 1045:
        -: 1046:#define GTEST_TEST_THROW_(statement, expected_exception, fail) \
        -: 1047:  GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
        -: 1048:  if (::testing::internal::ConstCharPtr gtest_msg = "") { \
        -: 1049:    bool gtest_caught_expected = false; \
        -: 1050:    try { \
        -: 1051:      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \
        -: 1052:    } \
        -: 1053:    catch (expected_exception const&) { \
        -: 1054:      gtest_caught_expected = true; \
        -: 1055:    } \
        -: 1056:    catch (...) { \
        -: 1057:      gtest_msg.value = \
        -: 1058:          "Expected: " #statement " throws an exception of type " \
        -: 1059:          #expected_exception ".\n  Actual: it throws a different type."; \
        -: 1060:      goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \
        -: 1061:    } \
        -: 1062:    if (!gtest_caught_expected) { \
        -: 1063:      gtest_msg.value = \
        -: 1064:          "Expected: " #statement " throws an exception of type " \
        -: 1065:          #expected_exception ".\n  Actual: it throws nothing."; \
        -: 1066:      goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \
        -: 1067:    } \
        -: 1068:  } else \
        -: 1069:    GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__): \
        -: 1070:      fail(gtest_msg.value)
        -: 1071:
        -: 1072:#define GTEST_TEST_NO_THROW_(statement, fail) \
        -: 1073:  GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
        -: 1074:  if (::testing::internal::AlwaysTrue()) { \
        -: 1075:    try { \
        -: 1076:      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \
        -: 1077:    } \
        -: 1078:    catch (...) { \
        -: 1079:      goto GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__); \
        -: 1080:    } \
        -: 1081:  } else \
        -: 1082:    GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__): \
        -: 1083:      fail("Expected: " #statement " doesn't throw an exception.\n" \
        -: 1084:           "  Actual: it throws.")
        -: 1085:
        -: 1086:#define GTEST_TEST_ANY_THROW_(statement, fail) \
        -: 1087:  GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
        -: 1088:  if (::testing::internal::AlwaysTrue()) { \
        -: 1089:    bool gtest_caught_any = false; \
        -: 1090:    try { \
        -: 1091:      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \
        -: 1092:    } \
        -: 1093:    catch (...) { \
        -: 1094:      gtest_caught_any = true; \
        -: 1095:    } \
        -: 1096:    if (!gtest_caught_any) { \
        -: 1097:      goto GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__); \
        -: 1098:    } \
        -: 1099:  } else \
        -: 1100:    GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__): \
        -: 1101:      fail("Expected: " #statement " throws an exception.\n" \
        -: 1102:           "  Actual: it doesn't.")
        -: 1103:
        -: 1104:
        -: 1105:// Implements Boolean test assertions such as EXPECT_TRUE. expression can be
        -: 1106:// either a boolean expression or an AssertionResult. text is a textual
        -: 1107:// represenation of expression as it was passed into the EXPECT_TRUE.
        -: 1108:#define GTEST_TEST_BOOLEAN_(expression, text, actual, expected, fail) \
        -: 1109:  GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
        -: 1110:  if (const ::testing::AssertionResult gtest_ar_ = \
        -: 1111:      ::testing::AssertionResult(expression)) \
        -: 1112:    ; \
        -: 1113:  else \
        -: 1114:    fail(::testing::internal::GetBoolAssertionFailureMessage(\
        -: 1115:        gtest_ar_, text, #actual, #expected).c_str())
        -: 1116:
        -: 1117:#define GTEST_TEST_NO_FATAL_FAILURE_(statement, fail) \
        -: 1118:  GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
        -: 1119:  if (::testing::internal::AlwaysTrue()) { \
        -: 1120:    ::testing::internal::HasNewFatalFailureHelper gtest_fatal_failure_checker; \
        -: 1121:    GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \
        -: 1122:    if (gtest_fatal_failure_checker.has_new_fatal_failure()) { \
        -: 1123:      goto GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__); \
        -: 1124:    } \
        -: 1125:  } else \
        -: 1126:    GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__): \
        -: 1127:      fail("Expected: " #statement " doesn't generate new fatal " \
        -: 1128:           "failures in the current thread.\n" \
        -: 1129:           "  Actual: it does.")
        -: 1130:
        -: 1131:// Expands to the name of the class that implements the given test.
        -: 1132:#define GTEST_TEST_CLASS_NAME_(test_case_name, test_name) \
        -: 1133:  test_case_name##_##test_name##_Test
        -: 1134:
        -: 1135:// Helper macro for defining tests.
        -: 1136:#define GTEST_TEST_(test_case_name, test_name, parent_class, parent_id)\
        -: 1137:class GTEST_TEST_CLASS_NAME_(test_case_name, test_name) : public parent_class {\
        -: 1138: public:\
        -: 1139:  GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() {}\
        -: 1140: private:\
        -: 1141:  virtual void TestBody();\
        -: 1142:  static ::testing::TestInfo* const test_info_ GTEST_ATTRIBUTE_UNUSED_;\
        -: 1143:  GTEST_DISALLOW_COPY_AND_ASSIGN_(\
        -: 1144:      GTEST_TEST_CLASS_NAME_(test_case_name, test_name));\
        -: 1145:};\
        -: 1146:\
        -: 1147:::testing::TestInfo* const GTEST_TEST_CLASS_NAME_(test_case_name, test_name)\
        -: 1148:  ::test_info_ =\
        -: 1149:    ::testing::internal::MakeAndRegisterTestInfo(\
        -: 1150:        #test_case_name, #test_name, NULL, NULL, \
        -: 1151:        (parent_id), \
        -: 1152:        parent_class::SetUpTestCase, \
        -: 1153:        parent_class::TearDownTestCase, \
        -: 1154:        new ::testing::internal::TestFactoryImpl<\
        -: 1155:            GTEST_TEST_CLASS_NAME_(test_case_name, test_name)>);\
        -: 1156:void GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody()
        -: 1157:
        -: 1158:#endif  // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_
